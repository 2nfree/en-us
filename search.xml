<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Nginx Proxy Config</title>
    <url>/en-us/nginx-proxy-config/</url>
    <content><![CDATA[<div class="note blue flat"><p>当前文档有中文版本：<a href="/nginx-proxy-config/">点击这里切换到中文</a></p>
</div>

<h1 id="What-is-a-Proxy"><a href="#What-is-a-Proxy" class="headerlink" title="What is a Proxy"></a>What is a Proxy</h1><p>At its core, a proxy acts as an intermediary between two systems. In the context of networks, it’s a server that handles traffic between clients (like your web browser) and other servers on the internet.</p>
<ul>
<li><p>Forward Proxy:</p>
<ul>
<li>Client-side: A forward proxy sits in front of a group of clients within a network.</li>
<li>Function:<ul>
<li>Manage Outgoing Traffic: Controls and filters internet access for clients.</li>
<li>Security: Provides a protective layer to shield clients from malicious content or websites.</li>
<li>Caching: Stores frequently accessed web content to reduce bandwidth usage and improve load times.</li>
<li>Anonymization: Helps users mask their IP addresses to browse the web privately.</li>
</ul>
</li>
</ul>
</li>
<li><p>Reverse Proxy</p>
<ul>
<li>Server-Side: A reverse proxy sits in front of one or more web servers.</li>
<li>Function:<ul>
<li>Traffic Distribution: Distributes incoming requests across multiple servers (load balancing), optimizing performance and preventing overload.</li>
<li>Security: Acts as a shield for backend servers, masking their true identities from direct client contact.</li>
<li>Caching: Stores static content, reducing the load on backend servers.</li>
<li>Content Delivery: Can optimize content for different devices and locations.</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="Nginx-Common-Commands"><a href="#Nginx-Common-Commands" class="headerlink" title="Nginx Common Commands"></a>Nginx Common Commands</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#get nginx version</span></span><br><span class="line">nginx -v</span><br><span class="line"></span><br><span class="line"><span class="comment">#stop nginx</span></span><br><span class="line">nginx -s stop</span><br><span class="line"></span><br><span class="line"><span class="comment">#start nginx</span></span><br><span class="line">nginx</span><br><span class="line"></span><br><span class="line"><span class="comment">#reload nginx (smooth restart)</span></span><br><span class="line">nginx -s reload</span><br><span class="line"></span><br><span class="line"><span class="comment">#check config format</span></span><br><span class="line">nginx -t</span><br></pre></td></tr></table></figure>

<h1 id="Nginx-Config"><a href="#Nginx-Config" class="headerlink" title="Nginx Config"></a>Nginx Config</h1><p>The nginx config file consists of three parts</p>
<h2 id="Part-1-Global"><a href="#Part-1-Global" class="headerlink" title="Part 1: Global"></a>Part 1: Global</h2><p>From the beginning of the configuration file to the events block<br>The configuration here is designed for nginx servers running</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment"># work_processes</span></span><br><span class="line"><span class="comment"># The higher the value, the better nginx can handle concurrency, but there are hardware limitations.</span></span><br><span class="line"><span class="comment"># It is recommended to set it to auto, which will automatically recognise the current host&#x27;s core count</span></span><br><span class="line"><span class="attribute">work_processes</span> auto;</span><br><span class="line"></span><br><span class="line"><span class="comment"># run as www，default is the nginx user</span></span><br><span class="line"><span class="attribute">user</span> www www;</span><br></pre></td></tr></table></figure>

<h2 id="Part-2-Event"><a href="#Part-2-Event" class="headerlink" title="Part 2: Event"></a>Part 2: Event</h2><p>The configuration here refers to setting the number of connections between the Nginx server and the user’s network.</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">  <span class="comment"># The worker_connections directive in your Nginx configuration file determines the maximum number of simultaneous connections that a single Nginx worker process can handle at any given time.</span></span><br><span class="line">  <span class="attribute">worker_connections</span>  <span class="number">65535</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Part-3-Http"><a href="#Part-3-Http" class="headerlink" title="Part 3: Http"></a>Part 3: Http</h2><p>Includes: file introduction, MIME-TYPE definition, log customisation, connection timeout, maximum number of requests for a single link, etc.</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">  <span class="attribute">include</span>            mime.types;</span><br><span class="line">  <span class="attribute">default_type</span>       application/octet-stream;</span><br><span class="line">  <span class="attribute">sendfile</span>           <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line">  <span class="attribute">server_tokens</span>      <span class="literal">off</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">client_max_body_size</span> <span class="number">50m</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">gzip</span> <span class="literal">on</span>;</span><br><span class="line">  <span class="attribute">gzip_min_length</span> <span class="number">8000</span>;</span><br><span class="line">  <span class="attribute">gzip_comp_level</span> <span class="number">3</span>;</span><br><span class="line">  <span class="attribute">gzip_buffers</span> <span class="number">4</span> <span class="number">8k</span>;</span><br><span class="line">  <span class="attribute">gzip_types</span> text/plain text/css application/xml image/png image/gif image/jpeg image/jpg font/ttf font/otf image/svg+xml application/x-javascript;</span><br><span class="line">  <span class="attribute">gzip_disable</span> <span class="string">&quot;MSIE [1-6]\.&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">log_format</span> json <span class="string">&#x27;&#123;&quot;<span class="variable">@timestamp</span>&quot;: &quot;<span class="variable">$time_iso8601</span>&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;server_ip&quot;: &quot;<span class="variable">$server_addr</span>&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;client_ip&quot;: &quot;<span class="variable">$remote_addr</span>&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;server_name&quot;: &quot;<span class="variable">$server_name</span>:<span class="variable">$server_port</span>&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;method&quot;: &quot;<span class="variable">$request_method</span>&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;request&quot;: &quot;<span class="variable">$request_uri</span>&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;url&quot;: &quot;<span class="variable">$uri</span>&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;query&quot;: &quot;<span class="variable">$args</span>&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;status&quot;: &quot;<span class="variable">$status</span>&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;user_agent&quot;: &quot;<span class="variable">$http_user_agent</span>&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;referer&quot;: &quot;<span class="variable">$http_referer</span>&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;response_time&quot;: &quot;<span class="variable">$upstream_response_time</span>&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;x_forwarded_for&quot;: &quot;<span class="variable">$http_x_forwarded_for</span>&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;send_bytes&quot;: &quot;<span class="variable">$bytes_sent</span>&quot;&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># access_log /data/logs/nginx/access_nginx.log json;</span></span><br><span class="line">    <span class="comment"># error_log /data/logs/nginx/error_nginx.log error;</span></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">      .........</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Part-4-Server"><a href="#Part-4-Server" class="headerlink" title="Part 4: Server"></a>Part 4: Server</h2><p>Each server block represents a distinct website or application, allowing Nginx to serve different content based on client requests.</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">server_name</span> [DOMAIN];</span><br><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line">    <span class="comment"># working root directory</span></span><br><span class="line">    <span class="attribute">root</span> html;</span><br><span class="line">    <span class="comment"># default homepage</span></span><br><span class="line">    index.<span class="attribute">html</span> index.htm;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="Nginx-Reverse-Proxy"><a href="#Nginx-Reverse-Proxy" class="headerlink" title="Nginx Reverse Proxy"></a>Nginx Reverse Proxy</h1><h2 id="Config-Example"><a href="#Config-Example" class="headerlink" title="Config Example"></a>Config Example</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">server_name</span> <span class="number">127.0.0.1</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line">    <span class="comment"># reverse proxy</span></span><br><span class="line">    <span class="attribute">proxy_pass</span> http://127.0.0.1:8080;</span><br><span class="line">    <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">server_name</span> <span class="number">127.0.0.1</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="section">location</span> <span class="regexp">~ /login/</span> &#123;</span><br><span class="line">    <span class="comment"># different reverse proxies for different urls</span></span><br><span class="line">    <span class="attribute">proxy_pass</span> http://127.0.0.1:8080;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="section">location</span> <span class="regexp">~ /regist/</span> &#123;</span><br><span class="line">    <span class="comment"># different reverse proxies for different urls</span></span><br><span class="line">    <span class="attribute">proxy_pass</span> http://127.0.0.1:8081;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Some-Reverse-Proxy-Config"><a href="#Some-Reverse-Proxy-Config" class="headerlink" title="Some Reverse Proxy Config"></a>Some Reverse Proxy Config</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment"># specify proxy url or name</span></span><br><span class="line"><span class="attribute">proxy_pass</span> [PROXY_URL];</span><br><span class="line"></span><br><span class="line"><span class="comment"># http version</span></span><br><span class="line"><span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># web socket</span></span><br><span class="line"><span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span> Connection <span class="variable">$connection_upgrade</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># is modify the Location header field in responses (like redirects)</span></span><br><span class="line"><span class="comment">#proxy_redirect    off;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># proxy header</span></span><br><span class="line"><span class="attribute">proxy_set_header</span>   Host              <span class="variable">$host</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span>   X-Real-IP         <span class="variable">$remote_addr</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span>   X-Port <span class="number">443</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span>   X-Server-Name [DOMAIN];</span><br><span class="line"><span class="attribute">proxy_set_header</span>   X-Forwarded-For   <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span>   X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># retries and failovers</span></span><br><span class="line"><span class="attribute">proxy_next_upstream</span> <span class="literal">error</span> timeout invalid_header http_500 http_502 http_503 http_504;</span><br><span class="line"></span><br><span class="line"><span class="comment"># http requests are not processed immediately and are placed in the nginx pending pool waiting to be processed.</span></span><br><span class="line"><span class="comment"># this parameter is the maximum waiting time, the default is 60 seconds.</span></span><br><span class="line"><span class="attribute">proxy_connect_timeout</span>      <span class="number">90</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># the amount of time it takes for a http request to be processed by the server and returned to Nginx, default 60 seconds.</span></span><br><span class="line">proxy_send_timeout         <span class="number">90</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># after the http request is processed, nginx waits for the result of the process</span></span><br><span class="line"><span class="comment"># this parameter is the server response time, the default is 60 seconds.</span></span><br><span class="line"><span class="attribute">proxy_read_timeout</span>         <span class="number">86400</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># the buffer size, the response from the proxy server will be read and placed here first.</span></span><br><span class="line"><span class="comment"># the response header is usually located inside this part of the response content. Setting it too small may result in a 502 error</span></span><br><span class="line"><span class="attribute">proxy_buffer_size</span>          <span class="number">4k</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># the number and size of the buffer from which the answer content is read by the proxied server.</span></span><br><span class="line"><span class="comment"># the number can be arbitrary, but the size of a cache is usually 4k or 8k.</span></span><br><span class="line"><span class="attribute">proxy_buffers</span>              <span class="number">4</span> <span class="number">32k</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># `proxy_busy_buffers_size` is not a proprietary space, it is a part of `proxy_buffers` and `proxy_buffer_size`.</span></span><br><span class="line"><span class="comment"># nginx will start sending data to the client before it has finished reading the backend&#x27;s response, so it will set aside a portion of the buffer dedicated to sending data to the client (the size of this portion is controlled by proxy_busy_buffers_size, which is recommended to be two times the size of the single buffer in proxy_buffers), and then it will continue to fetch the data from the backend, and then write it to a temporary file on the disk when the buffer is full.</span></span><br><span class="line"><span class="attribute">proxy_busy_buffers_size</span>    <span class="number">64k</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># the proxy cache storage location</span></span><br><span class="line"><span class="attribute">proxy_temp_path</span> /data/temp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># the size of the temporary file</span></span><br><span class="line"><span class="comment"># temporary file size is determined by `proxy_max_temp_file_size` and `proxy_temp_file_write_size`.</span></span><br><span class="line"><span class="comment"># `proxy_temp_file_write_size` is the size of the temporary file that can be written to in a single access, by default it is twice the size of the buffer set in `proxy_buffer_size` and `proxy_buffers`, and under Linux it is usually 8k.</span></span><br><span class="line"><span class="comment"># `proxy_max_temp_file_size` specifies the size of the temporary file to be written to the hard drive when the response is larger than the buffer specified by `proxy_buffers`. If this value is exceeded, Nginx will synchronise the delivery of the content with the Proxy server instead of buffering it to the hard disk. Setting this value to 0 disables buffering to the hard disc.</span></span><br><span class="line"><span class="attribute">proxy_max_temp_file_size</span>   <span class="number">0</span>;</span><br><span class="line"><span class="attribute">proxy_temp_file_write_size</span> <span class="number">64k</span>;</span><br></pre></td></tr></table></figure>

<h1 id="Load-Balance"><a href="#Load-Balance" class="headerlink" title="Load Balance"></a>Load Balance</h1><h2 id="config-example"><a href="#config-example" class="headerlink" title="config example"></a>config example</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">upstream</span> myserver&#123;</span><br><span class="line">  <span class="attribute">server</span> [ip]:[port];</span><br><span class="line">  <span class="attribute">server</span> [ip]:[port];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">server_name</span> <span class="number">127.0.0.1</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line">    <span class="comment"># set proxy name</span></span><br><span class="line">    <span class="attribute">proxy_pass</span> http://myserver;</span><br><span class="line">    <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Load-Balance-Policy"><a href="#Load-Balance-Policy" class="headerlink" title="Load Balance Policy"></a>Load Balance Policy</h2><h3 id="Round-Robin-default"><a href="#Round-Robin-default" class="headerlink" title="Round Robin (default)"></a>Round Robin (default)</h3><p>Distributes requests sequentially across a list of servers. Simple and easy, but doesn’t account for server capacity differences.</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">upstream</span> myserver&#123;</span><br><span class="line">  <span class="attribute">server</span> [ip]:[port];</span><br><span class="line">  <span class="attribute">server</span> [ip]:[port];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">server_name</span> <span class="number">127.0.0.1</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://myserver;</span><br><span class="line">    <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Weight"><a href="#Weight" class="headerlink" title="Weight"></a>Weight</h3><p>Assigned different weights to influence the distribution of traffic.</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">upstream</span> myserver&#123;</span><br><span class="line">  <span class="attribute">server</span> [ip]:[port] weight=<span class="number">5</span>;</span><br><span class="line">  <span class="attribute">server</span> [ip]:[port] weight=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">server_name</span> <span class="number">127.0.0.1</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://myserver;</span><br><span class="line">    <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="IP-Hash"><a href="#IP-Hash" class="headerlink" title="IP Hash"></a>IP Hash</h3><p>Maps a client’s IP address to a specific server, ensuring consistency for some types of applications.</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">upstream</span> myserver&#123;</span><br><span class="line">  ip_hash;</span><br><span class="line">  <span class="attribute">server</span> [ip]:[port];</span><br><span class="line">  <span class="attribute">server</span> [ip]:[port];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">server_name</span> <span class="number">127.0.0.1</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://myserver;</span><br><span class="line">    <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Fair"><a href="#Fair" class="headerlink" title="Fair"></a>Fair</h3><p>Nginx keeps track of how busy each upstream server is, including factors like active connections and request processing time.<br>When a new request arrives, Nginx will try to select the server that currently has the lightest load.</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">upstream</span> myserver&#123;</span><br><span class="line">  <span class="attribute">server</span> [ip]:[port];</span><br><span class="line">  <span class="attribute">server</span> [ip]:[port];</span><br><span class="line">  fair;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">server_name</span> <span class="number">127.0.0.1</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line">    <span class="attribute">root</span> html;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://myserver;</span><br><span class="line">    <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Shell</tag>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx Compilation Installation and Configuration</title>
    <url>/en-us/install-nginx/</url>
    <content><![CDATA[<div class="note blue flat"><p>当前文档有中文版本：<a href="/install-nginx/">点击这里切换到中文</a></p>
</div>

<h1 id="Prepare"><a href="#Prepare" class="headerlink" title="Prepare"></a>Prepare</h1><p> The current server is Centos7</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install dependencies</span></span><br><span class="line">yum install -y gcc gcc-c++ automake pcre pcre-devel zlib zlib-devel openssl openssl-devel popt popt-devel</span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure www users</span></span><br><span class="line">groupadd www</span><br><span class="line">useradd -g www www -s /sbin/nologin -M</span><br><span class="line"><span class="built_in">mkdir</span> -pv /home/www</span><br><span class="line"><span class="built_in">chown</span> -R www:www /home/www</span><br></pre></td></tr></table></figure>

<h1 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h1><h2 id="Download-and-Compile"><a href="#Download-and-Compile" class="headerlink" title="Download and Compile"></a>Download and Compile</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#  Download source</span></span><br><span class="line"><span class="built_in">mkdir</span> /data/packages</span><br><span class="line"><span class="built_in">cd</span> /data/packages</span><br><span class="line">wget http://nginx.org/download/nginx-1.18.0.tar.gz</span><br><span class="line">tar -zvxf  nginx-1.18.0.tar.gz &amp;&amp; <span class="built_in">cd</span> nginx-1.18.0</span><br><span class="line"></span><br><span class="line"><span class="comment">#compile and install</span></span><br><span class="line">./configure \</span><br><span class="line">--prefix=/usr/local/nginx \</span><br><span class="line">--user=www \</span><br><span class="line">--group=www \</span><br><span class="line">--with-file-aio \</span><br><span class="line">--with-http_stub_status_module \</span><br><span class="line">--with-http_gzip_static_module \</span><br><span class="line">--with-http_flv_module \</span><br><span class="line">--with-http_ssl_module \</span><br><span class="line">--with-http_v2_module \</span><br><span class="line">--with-stream \</span><br><span class="line">--with-pcre</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># create log folder</span></span><br><span class="line"><span class="built_in">mkdir</span> -pv /data/logs/nginx &amp;&amp; <span class="built_in">chown</span> -R www.www /data/logs/nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># remove Default Configuration</span></span><br><span class="line"><span class="built_in">mv</span> -f /usr/local/nginx/conf/nginx.conf /usr/local/nginx/conf/nginx.conf.default</span><br><span class="line"></span><br><span class="line"><span class="comment"># create website configuration folder</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /usr/local/nginx/conf/vhost</span><br><span class="line"></span><br><span class="line"><span class="comment"># create softlink</span></span><br><span class="line"><span class="built_in">ln</span> -sv /usr/local/nginx/sbin/nginx /usr/local/bin/nginx</span><br></pre></td></tr></table></figure>

<h2 id="Create-nginx-conf-configuration-file"><a href="#Create-nginx-conf-configuration-file" class="headerlink" title="Create nginx.conf configuration file"></a>Create nginx.conf configuration file</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /usr/local/nginx/conf/nginx.conf &lt;&lt;<span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="comment"># working as www</span></span><br><span class="line">user www www;</span><br><span class="line"></span><br><span class="line">worker_processes  auto;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">  worker_connections  65535;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">  include            mime.types;</span><br><span class="line">  default_type       application/octet-stream;</span><br><span class="line">  sendfile           on;</span><br><span class="line">  keepalive_timeout  65;</span><br><span class="line">  server_tokens      off;</span><br><span class="line">  client_max_body_size 50m;</span><br><span class="line">  gzip on;</span><br><span class="line">  gzip_min_length 8000;</span><br><span class="line">  gzip_comp_level 3;</span><br><span class="line">  gzip_buffers 4 8k;</span><br><span class="line">  gzip_types text/plain text/css application/xml image/png image/gif image/jpeg image/jpg font/ttf font/otf image/svg+xml application/x-javascript;</span><br><span class="line">  gzip_disable <span class="string">&quot;MSIE [1-6]\.&quot;</span>;</span><br><span class="line"></span><br><span class="line">  log_format json escape=json <span class="string">&#x27;&#123;&quot;@timestamp&quot;: &quot;$time_iso8601&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;client_ip&quot;: &quot;$remote_addr&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;server_ip&quot;: &quot;$server_addr&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;hostname&quot;: &quot;$hostname&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;upstream_addr&quot;: &quot;$upstream_addr&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;server_name&quot;: &quot;$server_name:$server_port&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;method&quot;: &quot;$request_method&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;request&quot;: &quot;$request_uri&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;url&quot;: &quot;$uri&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;query&quot;: &quot;$args&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;status&quot;: &quot;$status&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;upstream_status&quot;: &quot;$upstream_status&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;user_agent&quot;: &quot;$http_user_agent&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;referer&quot;: &quot;$http_referer&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;request_time&quot;: $request_time,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;response_time&quot;: $upstream_response_time,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;display_response_time&quot;: $upstream_response_time,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;upstream_connect_time&quot;: $upstream_connect_time,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;upstream_header_time&quot;: $upstream_header_time,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;x_forwarded_for&quot;: &quot;$http_x_forwarded_for&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;cookie&quot;: &quot;$http_cookie&quot;,&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&quot;send_bytes&quot;: &quot;$bytes_sent&quot;&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># log file output location</span></span><br><span class="line">    <span class="comment"># access_log &#x27;/data/logs/nginx/access-nginx.log&#x27; json;</span></span><br><span class="line">    <span class="comment"># error_log &#x27;/data/logs/nginx/error-nginx.log&#x27; error;</span></span><br><span class="line">    </span><br><span class="line">  map <span class="variable">$http_upgrade</span> <span class="variable">$connection_upgrade</span> &#123;  </span><br><span class="line">    default upgrade;</span><br><span class="line">    <span class="string">&#x27;&#x27;</span>      close;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># IP access blocking</span></span><br><span class="line">  server &#123;</span><br><span class="line">    listen       80 default;</span><br><span class="line">    server_name  _;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">      <span class="built_in">return</span> 404;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment"># site folder</span></span><br><span class="line">  include vhost/*.conf;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<h2 id="Create-Nginx-Systemd"><a href="#Create-Nginx-Systemd" class="headerlink" title="Create Nginx Systemd"></a>Create Nginx Systemd</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /usr/lib/systemd/system/nginx.service &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description= The Nginx Web Server</span></span><br><span class="line"><span class="string">After=network.target remote-fs.target nss-lookup.target</span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Type=forking</span></span><br><span class="line"><span class="string">ExecStart=/usr/local/nginx/sbin/nginx</span></span><br><span class="line"><span class="string">ExecReload=/usr/local/nginx/sbin/nginx -s reload</span></span><br><span class="line"><span class="string">ExecStop=/usr/local/nginx/sbin/nginx -s stop</span></span><br><span class="line"><span class="string">KillSignal=SIGKILL</span></span><br><span class="line"><span class="string">PrivateTmp= true</span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># start nginx</span></span><br><span class="line">systemctl start nginx </span><br><span class="line">systemctl <span class="built_in">enable</span> nginx</span><br><span class="line">systemctl status nginx</span><br></pre></td></tr></table></figure>

<h1 id="Remaining"><a href="#Remaining" class="headerlink" title="Remaining"></a>Remaining</h1><h2 id="Logrotate"><a href="#Logrotate" class="headerlink" title="Logrotate"></a>Logrotate</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/logrotate.d/nginx &lt;&lt;<span class="string">&quot;EOF&quot;</span></span><br><span class="line">/data/logs/nginx/*.<span class="built_in">log</span> &#123;</span><br><span class="line">    daily</span><br><span class="line">    rotate 15</span><br><span class="line">    compress</span><br><span class="line">    nodelaycompress</span><br><span class="line">    ifempty</span><br><span class="line">    dateext</span><br><span class="line">    missingok</span><br><span class="line">    postrotate</span><br><span class="line">        [ -e /usr/local/nginx/sbin/nginx ] &amp;&amp; /usr/local/nginx/sbin/nginx -s reload &amp;&gt;/dev/null</span><br><span class="line">    endscript</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<h2 id="Site-Config-Example"><a href="#Site-Config-Example" class="headerlink" title="Site Config Example"></a>Site Config Example</h2><p>The related uppercase configurations wrapped in ‘[]’ need to be filled in by yourself.</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">upstream</span> [PROXY_NAME]&#123;</span><br><span class="line">    ip_hash;</span><br><span class="line">    <span class="attribute">server</span> [ip]:[port];</span><br><span class="line">    <span class="attribute">server</span> [ip]:[port];</span><br><span class="line">    <span class="attribute">server</span> [ip]:[port];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">server_name</span> [DOMAIN];</span><br><span class="line">  <span class="attribute">client_max_body_size</span> <span class="number">1024m</span>;</span><br><span class="line">  <span class="attribute">return</span> <span class="number">301</span> https://<span class="variable">$server_name</span><span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">  <span class="attribute">server_name</span> [DOMAIN];</span><br><span class="line">  <span class="attribute">client_max_body_size</span> <span class="number">1024m</span>;</span><br><span class="line">  <span class="attribute">add_header</span> Strict-Transport-Security <span class="string">&quot;max-age=31536000&quot;</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="attribute">ssl_certificate</span>  [SSL_CERT];</span><br><span class="line">  <span class="attribute">ssl_certificate_key</span>  [SSL_CERT_KEY];</span><br><span class="line">  <span class="attribute">ssl_ciphers</span> <span class="string">&quot;ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4!3DES!ADH&quot;</span>;</span><br><span class="line">  <span class="attribute">ssl_protocols</span> TLSv1.<span class="number">2</span>;</span><br><span class="line">  <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://[PROXY_NAME];</span><br><span class="line">    <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Connection <span class="variable">$connection_upgrade</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#proxy_redirect     off;</span></span><br><span class="line">    <span class="attribute">proxy_set_header</span>   Host              <span class="variable">$host</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span>   X-Real-IP         <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span>   X-Port <span class="number">443</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span>   X-Server-Name     <span class="variable">$server_name</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span>   X-Forwarded-For   <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span>   X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    <span class="attribute">proxy_next_upstream</span> <span class="literal">error</span> timeout invalid_header http_500 http_502 http_503 http_504;</span><br><span class="line">    <span class="attribute">proxy_max_temp_file_size</span>   <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">proxy_connect_timeout</span>      <span class="number">90</span>;</span><br><span class="line">    <span class="attribute">proxy_send_timeout</span>         <span class="number">90</span>;</span><br><span class="line">    <span class="attribute">proxy_read_timeout</span>         <span class="number">86400</span>;</span><br><span class="line">    <span class="attribute">proxy_buffer_size</span>          <span class="number">4k</span>;</span><br><span class="line">    <span class="attribute">proxy_buffers</span>              <span class="number">4</span> <span class="number">32k</span>;</span><br><span class="line">    <span class="attribute">proxy_busy_buffers_size</span>    <span class="number">64k</span>;</span><br><span class="line">    <span class="attribute">proxy_temp_file_write_size</span> <span class="number">64k</span>;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="section">location</span> <span class="regexp">~ .*</span> &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span>  http://[PROXY_NAME];</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Fonwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Shell</tag>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos Common Tools</title>
    <url>/en-us/centos-common-tool/</url>
    <content><![CDATA[<div class="note blue flat"><p>当前文档有中文版本：<a href="/centos-common-tool/">点击这里切换到中文</a></p>
</div>

<h1 id="EPEL-Extra-Packages-for-Enterprise-Linux"><a href="#EPEL-Extra-Packages-for-Enterprise-Linux" class="headerlink" title="EPEL (Extra Packages for Enterprise Linux)"></a>EPEL (Extra Packages for Enterprise Linux)</h1><p>EPEL (Extra Packages for Enterprise Linux) is a project based on Fedora, which provides extra packages for “Red Hat” operating systems, applicable to RHEL, CentOS and Scientific Linux.</p>
<p>When we use yum to install under Centos, we often can’t find rpm, and the official rpm repository doesn’t provide enough rpm packages, so it’s a pain to compile them by yourself, but EPEL can solve these two problems, and EPEL is called Extra Packages for Enterprise Linux. EPEL is a project created by the Fedora community to provide high-quality packages for RHEL and its derivatives such as CentOS and Scientific Linux. When you install EPEL, you are adding a third-party source.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install epel-release</span><br><span class="line"> </span><br><span class="line">yum repolist</span><br></pre></td></tr></table></figure>

<h1 id="Some-Tools"><a href="#Some-Tools" class="headerlink" title="Some Tools"></a>Some Tools</h1><ul>
<li>htop: is an interactive process browser for Linux that can be used to replace the top command under Linux.</li>
<li>lsof: used to view the files opened by your process, the process that opened the file, the ports (TCP, UDP) opened by the process, and so on.</li>
<li>ncdu (NCurses Disk Usage): a curses-based version of the famous “du” that provides a quick way to see which directories are using your disk space.</li>
<li>Psmisc: package contains three programs that help manage the &#x2F;proc directory. fuser displays the PIDs of the processes that are using the specified file or filesystem. killall kills a process of a certain name, which signals all the processes that are running the specified command. pstree tree displays the currently running processes.</li>
<li>lrzsz: a program that replaces ftp for uploading and downloading in linux. rz uploads and sz downloads.</li>
<li>iotop: a top-like tool that displays real-time disk activity.</li>
<li>traceroute: route tracing</li>
<li>vim: an editor, an upgraded version of vi</li>
<li>wget: a command line tool for downloading files from the Web on Linux systems</li>
<li>telnet: remote connection command</li>
<li>tree: lists the tree structure of files</li>
<li>xz, zip, unzip: compression and decompression tools</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install htop lsof ncdu psmisc lrzsz iotop traceroute vim wget telnet tree xz zip unzip -y</span><br></pre></td></tr></table></figure>

<h1 id="Development-Tools"><a href="#Development-Tools" class="headerlink" title="Development Tools"></a>Development Tools</h1><p>These tools include core development tools such as automake, gcc, perl, python, and debuggers which is required to compile software and build new rpms:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum <span class="built_in">groups</span> mark install <span class="string">&quot;Development Tools&quot;</span></span><br><span class="line">yum <span class="built_in">groups</span> mark convert <span class="string">&quot;Development Tools&quot;</span></span><br><span class="line">yum groupinstall <span class="string">&quot;Development Tools&quot;</span> -y</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Mysql Installation</title>
    <url>/en-us/install-mysql/</url>
    <content><![CDATA[<div class="note blue flat"><p>当前文档有中文版本：<a href="/install-mysql/">点击这里切换到中文</a></p>
</div>

<h1 id="Prepare"><a href="#Prepare" class="headerlink" title="Prepare"></a>Prepare</h1><h2 id="Initialization"><a href="#Initialization" class="headerlink" title="Initialization"></a>Initialization</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Creating Users and Groups</span></span><br><span class="line">groupadd mysql &amp;&amp;  useradd -g mysql mysql -s /sbin/nologin -M</span><br><span class="line"></span><br><span class="line"><span class="comment"># Initialize the data storage directory</span></span><br><span class="line"><span class="built_in">mkdir</span> -pv /data/mysql &amp;&amp; <span class="built_in">chown</span> -R mysql:mysql /data/mysql</span><br></pre></td></tr></table></figure>

<h1 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h1><h2 id="Download-Mysql"><a href="#Download-Mysql" class="headerlink" title="Download Mysql"></a>Download Mysql</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /data/packages</span><br><span class="line"><span class="built_in">cd</span> /data/packages</span><br><span class="line">wget https://downloads.mysql.com/archives/get/p/23/file/mysql-5.7.33-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Unzip"><a href="#Unzip" class="headerlink" title="Unzip"></a>Unzip</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf mysql-5.7.33-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line"><span class="built_in">mv</span> mysql-5.7.33-linux-glibc2.12-x86_64  /usr/local/mysql</span><br><span class="line"><span class="built_in">chown</span> -R mysql:mysql  /usr/local/mysql</span><br><span class="line"><span class="built_in">ln</span> -svf /usr/local/mysql/bin/mysql /usr/bin/mysql</span><br><span class="line"><span class="built_in">ln</span> -svf /usr/local/mysql/bin/mysqldump /usr/bin/mysqldump</span><br></pre></td></tr></table></figure>

<h2 id="Config"><a href="#Config" class="headerlink" title="Config"></a>Config</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/my.cnf &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[mysql]</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="string">socket=/tmp/mysql.sock</span></span><br><span class="line"><span class="string">[mysqld]</span></span><br><span class="line"><span class="string">bind-address=0.0.0.0</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="string">user=mysql</span></span><br><span class="line"><span class="string">basedir=/usr/local/mysql</span></span><br><span class="line"><span class="string">datadir=/data/mysql</span></span><br><span class="line"><span class="string">socket=/tmp/mysql.sock</span></span><br><span class="line"><span class="string">back_log=500</span></span><br><span class="line"><span class="string">init_connect=&#x27;SET NAMES utf8&#x27;</span></span><br><span class="line"><span class="string">default-storage-engine=INNODB</span></span><br><span class="line"><span class="string">character-set-server=utf8</span></span><br><span class="line"><span class="string">collation-server=utf8_general_ci</span></span><br><span class="line"><span class="string">innodb_file_format=Barracuda</span></span><br><span class="line"><span class="string">innodb_io_capacity=200</span></span><br><span class="line"><span class="string">innodb_io_capacity_max=4000</span></span><br><span class="line"><span class="string">innodb_open_files=500</span></span><br><span class="line"><span class="string">key_buffer_size=260000000</span></span><br><span class="line"><span class="string">lock_wait_timeout=3600</span></span><br><span class="line"><span class="string">log_bin_trust_function_creators=1</span></span><br><span class="line"><span class="string">log_output=FILE</span></span><br><span class="line"><span class="string">long_query_time=5</span></span><br><span class="line"><span class="string">max_allowed_packet=1073741824</span></span><br><span class="line"><span class="string">max_heap_table_size=2147483648</span></span><br><span class="line"><span class="string">query_cache_limit=10000000</span></span><br><span class="line"><span class="string">query_cache_min_res_unit=2048</span></span><br><span class="line"><span class="string">query_cache_size=300000000</span></span><br><span class="line"><span class="string">query_cache_type=1</span></span><br><span class="line"><span class="string">read_buffer_size=4194304</span></span><br><span class="line"><span class="string">read_rnd_buffer_size=16777216</span></span><br><span class="line"><span class="string">skip_name_resolve=0</span></span><br><span class="line"><span class="string">slave_net_timeout=10</span></span><br><span class="line"><span class="string">slow_query_log=1</span></span><br><span class="line"><span class="string">sort_buffer_size=16777216</span></span><br><span class="line"><span class="string">table_definition_cache=912</span></span><br><span class="line"><span class="string">table_open_cache=1024</span></span><br><span class="line"><span class="string">tmp_table_size=2147483648</span></span><br><span class="line"><span class="string">wait_timeout=3600</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<h2 id="Initialization-DB"><a href="#Initialization-DB" class="headerlink" title="Initialization DB"></a>Initialization DB</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y libaio</span><br><span class="line">yum install -y perl-Data-Dumper</span><br><span class="line"><span class="built_in">cd</span> /usr/local/mysql/bin/</span><br><span class="line">./mysql_install_db --user mysql --basedir=/usr/local/mysql --datadir=/data/mysql</span><br><span class="line"><span class="built_in">rm</span> -rf /data/mysql/ &amp;&amp; ./mysqld --initialize --user=mysql  --basedir=/usr/local/mysql --datadir=/data/mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># A temporary password is generated for root@localhost: Mn?f4R_YDfBt (There will be randomized passwords here)</span></span><br><span class="line"><span class="comment"># After entering the database you need to change the initial password to use it</span></span><br></pre></td></tr></table></figure>

<h1 id="Adding-system-service"><a href="#Adding-system-service" class="headerlink" title="Adding system service"></a>Adding system service</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># create service scripts</span></span><br><span class="line"><span class="built_in">cp</span> /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line"><span class="built_in">chmod</span> +x /etc/init.d/mysqld</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start mysqld </span><br><span class="line">systemctl status mysqld </span><br><span class="line">systemctl <span class="built_in">enable</span> mysqld</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Mysql</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Shell</tag>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Install Redis</title>
    <url>/en-us/install-redis/</url>
    <content><![CDATA[<div class="note blue flat"><p>当前文档有中文版本：<a href="/install-redis/">点击这里切换到中文</a></p>
</div>

<h1 id="Prepare"><a href="#Prepare" class="headerlink" title="Prepare"></a>Prepare</h1><h2 id="Create-Redis-User"><a href="#Create-Redis-User" class="headerlink" title="Create Redis User"></a>Create Redis User</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">groupadd redis</span><br><span class="line">useradd -g redis redis -s /sbin/nologin -M</span><br></pre></td></tr></table></figure>

<h2 id="Create-Directory"><a href="#Create-Directory" class="headerlink" title="Create Directory"></a>Create Directory</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># data directory</span></span><br><span class="line"><span class="built_in">mkdir</span> -pv /data/redis</span><br><span class="line"><span class="built_in">chown</span> -R redis:redis /data/redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># log directory</span></span><br><span class="line"><span class="built_in">mkdir</span> -pv /data/logs/redis</span><br><span class="line"><span class="built_in">chown</span> -R redis:redis /data/logs/redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># command line directory</span></span><br><span class="line"><span class="built_in">mkdir</span> -pv /usr/local/redis/&#123;bin,etc&#125;</span><br></pre></td></tr></table></figure>

<h1 id="Compiling"><a href="#Compiling" class="headerlink" title="Compiling"></a>Compiling</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install clang</span></span><br><span class="line">yum install clang -y</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /data/packages</span><br><span class="line"><span class="comment"># Download</span></span><br><span class="line">wget http://download.redis.io/releases/redis-6.2.6.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># unzip</span></span><br><span class="line">tar -zxvf redis-6.2.6.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># compile and install</span></span><br><span class="line"><span class="built_in">cd</span> redis-6.2.6 &amp;&amp; CC=clang make</span><br><span class="line"><span class="comment"># If you get a compilation error, you need to use `make MALLOC=libc`</span></span><br><span class="line">install -p -D -m 0755 src/redis-benchmark /usr/local/redis/bin/</span><br><span class="line">install -p -D -m 0755 src/redis-check-aof /usr/local/redis/bin/</span><br><span class="line">install -p -D -m 0755 src/redis-check-rdb /usr/local/redis/bin/</span><br><span class="line">install -p -D -m 0755 src/redis-cli /usr/local/redis/bin/</span><br><span class="line">install -p -D -m 0755 src/redis-sentinel /usr/local/redis/bin/</span><br><span class="line">install -p -D -m 0755 src/redis-server /usr/local/redis/bin/</span><br><span class="line">install -p -D -o redis redis.conf /usr/local/redis/etc/</span><br><span class="line"><span class="built_in">ln</span> -svf /usr/local/redis/bin/redis-cli /usr/bin/redis-cli</span><br></pre></td></tr></table></figure>

<h1 id="Config"><a href="#Config" class="headerlink" title="Config"></a>Config</h1><h2 id="Edit-Config"><a href="#Edit-Config" class="headerlink" title="Edit Config"></a>Edit Config</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> REDIS_HOME=/usr/local/redis</span><br><span class="line">sed -i s@<span class="string">&#x27;^logfile .*&#x27;</span>@<span class="string">&quot;logfile /data/logs/redis/redis.log&quot;</span>@ <span class="variable">$REDIS_HOME</span>/etc/redis.conf</span><br><span class="line">sed -i s@<span class="string">&#x27;^dir .*&#x27;</span>@<span class="string">&quot;dir /data/redis&quot;</span>@ <span class="variable">$REDIS_HOME</span>/etc/redis.conf</span><br><span class="line">sed -i s@<span class="string">&#x27;^pidfile .*&#x27;</span>@<span class="string">&quot;pidfile /data/redis/redis_6379.pid&quot;</span>@ <span class="variable">$REDIS_HOME</span>/etc/redis.conf</span><br><span class="line">sed -i s@<span class="string">&#x27;^bind .*&#x27;</span>@<span class="string">&quot;bind 0.0.0.0&quot;</span>@ <span class="variable">$REDIS_HOME</span>/etc/redis.conf</span><br></pre></td></tr></table></figure>

<h2 id="Shutdown-script"><a href="#Shutdown-script" class="headerlink" title="Shutdown script"></a>Shutdown script</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Create `redis-shutdown` script</span></span><br><span class="line">vim /usr/local/redis/bin/redis-shutdown</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">test</span> x<span class="string">&quot;<span class="variable">$REDIS_DEBUG</span>&quot;</span> != x &amp;&amp; <span class="built_in">set</span> -x</span><br><span class="line"></span><br><span class="line">REDIS_CLI=/usr/local/redis/bin/redis-cli</span><br><span class="line"></span><br><span class="line">SERVICE_NAME=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$SERVICE_NAME</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">   SERVICE_NAME=redis</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">CONFIG_FILE=<span class="string">&quot;/usr/local/redis/etc/<span class="variable">$SERVICE_NAME</span>.conf&quot;</span></span><br><span class="line"></span><br><span class="line">HOST=`awk <span class="string">&#x27;/^[[:blank:]]*bind/ &#123; print $2 &#125;&#x27;</span> <span class="variable">$CONFIG_FILE</span> | <span class="built_in">tail</span> -n1`</span><br><span class="line">PORT=`awk <span class="string">&#x27;/^[[:blank:]]*port/ &#123; print $2 &#125;&#x27;</span> <span class="variable">$CONFIG_FILE</span> | <span class="built_in">tail</span> -n1`</span><br><span class="line">PASS=`awk <span class="string">&#x27;/^[[:blank:]]*requirepass/ &#123; print $2 &#125;&#x27;</span> <span class="variable">$CONFIG_FILE</span> | <span class="built_in">tail</span> -n1`</span><br><span class="line">SOCK=`awk <span class="string">&#x27;/^[[:blank:]]*unixsocket\s/ &#123; print $2 &#125;&#x27;</span> <span class="variable">$CONFIG_FILE</span> | <span class="built_in">tail</span> -n1`</span><br><span class="line"></span><br><span class="line">HOST=<span class="variable">$&#123;HOST:-127.0.0.1&#125;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$SERVICE_NAME</span>&quot;</span> = redis ]; <span class="keyword">then</span></span><br><span class="line">    PORT=<span class="variable">$&#123;PORT:-6379&#125;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    PORT=<span class="variable">$&#123;PORT:-26739&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">[ -z <span class="string">&quot;<span class="variable">$PASS</span>&quot;</span>  ] || ADDITIONAL_PARAMS=<span class="string">&quot;-a <span class="variable">$PASS</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -e <span class="string">&quot;<span class="variable">$SOCK</span>&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">        <span class="variable">$REDIS_CLI</span> -s <span class="variable">$SOCK</span> <span class="variable">$ADDITIONAL_PARAMS</span> shutdown</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="variable">$REDIS_CLI</span> -h <span class="variable">$HOST</span> -p <span class="variable">$PORT</span> <span class="variable">$ADDITIONAL_PARAMS</span> shutdown</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x /usr/local/redis/bin/redis-shutdown</span><br></pre></td></tr></table></figure>

<h2 id="Create-Systemd-Service"><a href="#Create-Systemd-Service" class="headerlink" title="Create Systemd Service"></a>Create Systemd Service</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt;/usr/lib/systemd/system/redis.service&lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Redis persistent key-value database</span></span><br><span class="line"><span class="string">After=network.target</span></span><br><span class="line"><span class="string">After=network-online.target</span></span><br><span class="line"><span class="string">Wants=network-online.target</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">ExecStart=/usr/local/redis/bin/redis-server /usr/local/redis/etc/redis.conf --supervised systemd</span></span><br><span class="line"><span class="string">ExecStop=/usr/local/redis/bin/redis-shutdown</span></span><br><span class="line"><span class="string">Type=simple</span></span><br><span class="line"><span class="string">User=redis</span></span><br><span class="line"><span class="string">Group=redis</span></span><br><span class="line"><span class="string">RuntimeDirectory=redis</span></span><br><span class="line"><span class="string">RuntimeDirectoryMode=0755</span></span><br><span class="line"><span class="string">LimitNOFILE=10240</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># start redis</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start redis</span><br><span class="line">systemctl <span class="built_in">enable</span> redis</span><br><span class="line">systemctl status redis</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Shell</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis Commands and Data Types</title>
    <url>/en-us/redis-command/</url>
    <content><![CDATA[<div class="note blue flat"><p>当前文档有中文版本：<a href="/redis-command/">点击这里切换到中文</a></p>
</div>

<h1 id="Basic-Commands"><a href="#Basic-Commands" class="headerlink" title="Basic Commands"></a>Basic Commands</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># test the connection, return pong for successful connection</span></span><br><span class="line">ping</span><br><span class="line"><span class="comment"># switch databases `select [index]`</span></span><br><span class="line"><span class="keyword">select</span> 1</span><br><span class="line"><span class="comment"># view database size</span></span><br><span class="line">dbsize</span><br><span class="line"><span class="comment"># view all keys</span></span><br><span class="line">keys *</span><br><span class="line"><span class="comment"># clear all data</span></span><br><span class="line">flushall</span><br><span class="line"><span class="comment"># clear the current database</span></span><br><span class="line">flushdb</span><br><span class="line"><span class="comment"># whether the key exists `exists [key]`</span></span><br><span class="line">exists name</span><br><span class="line"><span class="comment"># move the key to another database `move [key] [db]`</span></span><br><span class="line">move name 1</span><br><span class="line"><span class="comment"># setting the key expiration time `expire [key] [second]`</span></span><br><span class="line">expire name 10</span><br><span class="line"><span class="comment"># view key expiration time `ttl [key]`</span></span><br><span class="line">ttl name</span><br><span class="line"><span class="comment"># delete key `del [key]`</span></span><br><span class="line">del name</span><br><span class="line"><span class="comment"># view the type of key `type [key]`</span></span><br><span class="line"><span class="built_in">type</span> name</span><br><span class="line"><span class="comment"># set key value `set [key] [value]`</span></span><br><span class="line"><span class="built_in">set</span> name zhangsan</span><br><span class="line"><span class="comment"># get key value</span></span><br><span class="line">get name</span><br><span class="line"><span class="comment"># performance test</span></span><br><span class="line">redis-benchmark -h localhost -p 6379 -c 100 -n 100000</span><br></pre></td></tr></table></figure>

<h1 id="Data-types"><a href="#Data-types" class="headerlink" title="Data types"></a>Data types</h1><h2 id="String"><a href="#String" class="headerlink" title="String"></a>String</h2><p>String can be a numeric type in addition to a string type, and is generally used for</p>
<ul>
<li>Counters</li>
<li>Counting multi-unit quantities</li>
<li>Fans</li>
<li>Object cache storage</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># set multiple values `mset [key] [value] [key1] [value2] ....`</span></span><br><span class="line">mset name komorebi name1 komorebi</span><br><span class="line"><span class="comment"># get multiple values `mget [key] [key1]`</span></span><br><span class="line">mget name name1</span><br><span class="line"><span class="comment"># set a value with an expiration time `setex [key] [second] [value]`</span></span><br><span class="line">setex name 30 hello</span><br><span class="line"><span class="comment"># set a value if it does not exist `setnx [key] [value]`</span></span><br><span class="line">setnx name hello</span><br><span class="line"><span class="comment"># set multiple values, determine if the values exist, and if they do, they are all not created (either they succeed together or fail together)</span></span><br><span class="line"><span class="comment"># `msetnx [key] [value] [key1] [value2] ....`</span></span><br><span class="line">msetnx name komorebi name1 komorebi</span><br><span class="line"><span class="comment"># append characters to a key of type String, if the appended key does not exist in the current database, it is equivalent to set key</span></span><br><span class="line"><span class="comment"># `append [key] [value]`</span></span><br><span class="line">append name <span class="string">&quot;hello&quot;</span></span><br><span class="line"><span class="comment"># get string length `strlen [key]`</span></span><br><span class="line">strlen name</span><br><span class="line"><span class="comment"># increase by 1 `incr [key]`</span></span><br><span class="line">incr views</span><br><span class="line"><span class="comment"># increase in specified number `incrby [key] [num]`</span></span><br><span class="line">incrby views 10</span><br><span class="line"><span class="comment"># decrease by 1 `decr [key]`</span></span><br><span class="line">decr views</span><br><span class="line"><span class="comment"># decrease in specified number `decrby [key] [num]`</span></span><br><span class="line">decrby views 10</span><br><span class="line"><span class="comment"># string range, set -1 to open interval `getrange [key] [begin] [end]`</span></span><br><span class="line">getrange name 0 3</span><br><span class="line">getrange name 0 -1</span><br><span class="line"><span class="comment"># replace the string starting at the specified position `setrange [key] [index] [value]`</span></span><br><span class="line">setrange name 1 xx</span><br><span class="line"><span class="comment"># set objects</span></span><br><span class="line"><span class="comment"># `set [key]:[id]&#123;[key1]:[value1],[key2]:[value2]&#125;`</span></span><br><span class="line"><span class="comment"># `mset [key]:[id]:[key1] [value1] [key]:[id]:[key2] [value2]`</span></span><br><span class="line"><span class="built_in">set</span> user:1&#123;name:zhangsan,age:3&#125;</span><br><span class="line">mset user:1:name zhangsan user:1:age 3</span><br><span class="line"><span class="comment"># get the previous value, set the next value,if previous value doesn&#x27;t exist, just set `getset [key] [value]`</span></span><br><span class="line">getset name komorebi </span><br></pre></td></tr></table></figure>

<h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># add a value to the list, inserted at the head of the list, the last insertion of the subscript 0 `lpush [key] [value]`</span></span><br><span class="line">lpush list one</span><br><span class="line">lpush list two</span><br><span class="line">lpush list three</span><br><span class="line"><span class="comment"># adds a value to the end of the list, with the subscript being the last digit `rpush [key] [value]`</span></span><br><span class="line">rpush list right</span><br><span class="line"><span class="comment"># get all values in the list `lrange [key] [begin] [end]`</span></span><br><span class="line">lrange list 0 -1</span><br><span class="line"><span class="comment"># get the specified value in a list</span></span><br><span class="line">lrange list 0 1</span><br><span class="line"><span class="comment"># remove the first element of the list `lpop [key]`</span></span><br><span class="line">lpop list</span><br><span class="line"><span class="comment"># 移remove the last element of the list `rpop [key]`</span></span><br><span class="line">rpop list</span><br><span class="line"><span class="comment"># get a value in the list by subscript `lindex [key] [index]`</span></span><br><span class="line">lindex list 0</span><br><span class="line"><span class="comment"># Get the length of list `llen [key]`</span></span><br><span class="line">llen list</span><br><span class="line"><span class="comment"># remove a value from the list Numbers can be &gt;0 =0 &lt;0 or other numbers</span></span><br><span class="line">lrem list 1 one</span><br></pre></td></tr></table></figure>

<h2 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h2><p>The values in set cannot be duplicated</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># add value</span></span><br><span class="line">sadd myset <span class="string">&quot;hello&quot;</span></span><br><span class="line"><span class="comment"># view all elements</span></span><br><span class="line">smembers myset</span><br><span class="line"><span class="comment"># determine if the current value exists in set</span></span><br><span class="line">sismember myset hello</span><br><span class="line"><span class="comment"># view the number of current set values</span></span><br><span class="line">scard myset</span><br><span class="line"><span class="comment"># remove an element</span></span><br><span class="line">srem myset hello</span><br><span class="line"><span class="comment"># random selection of elements (number can be specified)</span></span><br><span class="line">srandmember myset 2</span><br><span class="line"><span class="comment"># randomly remove an element</span></span><br><span class="line">spop myset</span><br><span class="line"><span class="comment"># moves elements from one set to another</span></span><br><span class="line">smove myset1 myset2 hello</span><br><span class="line"><span class="comment"># find the difference of two sets</span></span><br><span class="line">sdiff myset1 myset2</span><br><span class="line"><span class="comment"># find the intersection of two sets</span></span><br><span class="line">sinter myset1 myset2</span><br><span class="line"><span class="comment"># find the union of two sets</span></span><br><span class="line">sunion myset1 myset2</span><br></pre></td></tr></table></figure>

<h2 id="Hash"><a href="#Hash" class="headerlink" title="Hash"></a>Hash</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># create a hash</span></span><br><span class="line">hset myhash field1 hello</span><br><span class="line"><span class="comment"># get hash value</span></span><br><span class="line">hget myhash field1</span><br><span class="line"><span class="comment"># setting multiple values,same name overwrite</span></span><br><span class="line">hmset myhash field1 hello field2 world</span><br><span class="line"><span class="comment"># get multiple values</span></span><br><span class="line">hmget myhash field1 field2</span><br><span class="line"><span class="comment"># get all fields and values</span></span><br><span class="line">hgetall myhash</span><br><span class="line"><span class="comment"># del key</span></span><br><span class="line">hdel myhash field1</span><br><span class="line"><span class="comment"># get hash value lens</span></span><br><span class="line">hlen myhash</span><br><span class="line"><span class="comment"># determine if the current value exists in hash</span></span><br><span class="line">hexists myhash field1</span><br><span class="line"><span class="comment"># get all fields</span></span><br><span class="line">hkeys myhash</span><br><span class="line"><span class="comment"># get all values</span></span><br><span class="line">hvals myhash</span><br><span class="line"><span class="comment"># self-increase, -1 is equivalent to self-decrease</span></span><br><span class="line">hincrby myhash field1 1</span><br><span class="line"><span class="comment"># determine if the current value exists, create if it doesn&#x27;t</span></span><br><span class="line">hsetnx myhash field2 hello</span><br></pre></td></tr></table></figure>

<h2 id="Zset"><a href="#Zset" class="headerlink" title="Zset"></a>Zset</h2><p>zset adds sorted values to set</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># add (need to add a number for sorting)</span></span><br><span class="line">zadd myset 1 one</span><br><span class="line">zadd myset 2 two</span><br><span class="line"><span class="comment"># get all values</span></span><br><span class="line">zrange myset 0 -1</span><br><span class="line"><span class="comment"># get all values asc</span></span><br><span class="line">zrevrange myset 0 -1</span><br><span class="line"><span class="comment"># set the range of the query (-inf +inf means negative infinity to positive infinity, withscores means add parameters)</span></span><br><span class="line">zrangebyscore myset -inf +inf</span><br><span class="line">zrangebyscore myset 1 2 withscores</span><br><span class="line"><span class="comment"># view how many elements exist</span></span><br><span class="line">zcard myset</span><br><span class="line"><span class="comment"># remove element</span></span><br><span class="line">zrem myset hello</span><br><span class="line"><span class="comment"># determine how many elements are in the interval</span></span><br><span class="line">zcount myset 1 3</span><br></pre></td></tr></table></figure>

<h2 id="geospatial"><a href="#geospatial" class="headerlink" title="geospatial"></a>geospatial</h2><p>Redis geospatial indexes let you store coordinates and search for them. This data structure is useful for finding nearby points within a given radius or bounding box<br>The principle of geo is actually Zset, you can use the zset command to operate geo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># adds a location to a given geospatial index (note that longitude comes before latitude with this command).</span></span><br><span class="line">geoadd china:city 121.47 31.23 shanghai</span><br><span class="line"><span class="comment"># get latitude and longitude</span></span><br><span class="line">geopos china:city shanghai</span><br><span class="line"><span class="comment"># get the distance between two places</span></span><br><span class="line">geodist china:city shanghai beijing km</span><br><span class="line"><span class="comment"># find the elements in the key range centered on the given latitude and longitude</span></span><br><span class="line"><span class="comment"># withdist for straight line distance, withcoord for displaying latitude and longitude, count set how many to get</span></span><br><span class="line">georadius china:city 116 30 1000 km withdist withcoord count 3</span><br><span class="line"><span class="comment"># finds elements within a range centered on the position of an existing element Other parameters are the same as georadius</span></span><br><span class="line">georadiusbymember china:city beijing 1000 km</span><br><span class="line"><span class="comment"># converts two-dimensional latitude and longitude to a one-dimensional string, if the strings are closer together, then the closer the distance is</span></span><br><span class="line">geohash china:city beijing</span><br></pre></td></tr></table></figure>

<h2 id="hyperloglog"><a href="#hyperloglog" class="headerlink" title="hyperloglog"></a>hyperloglog</h2><p>HyperLogLog is a probabilistic data structure that estimates the cardinality of a set. As a probabilistic data structure, HyperLogLog trades perfect accuracy for efficient space utilization.<br>A{1,3,5,7,8,7,8}<br>B{1,3,5,7,8,8}<br>Base (number of elements that are not repeated) &#x3D; 5, acceptable error</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># add elements</span></span><br><span class="line">pfadd mykey a b c d e f g</span><br><span class="line"><span class="comment"># count the number of elements</span></span><br><span class="line">pfcount mykey</span><br><span class="line"><span class="comment"># merge two collections into mykey3 (remove duplicate elements)</span></span><br><span class="line">pfmerge mykey3 mykey mykey2</span><br></pre></td></tr></table></figure>

<h2 id="bitmaps"><a href="#bitmaps" class="headerlink" title="bitmaps"></a>bitmaps</h2><p>generally used to store both 0 and 1 states</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># the first bit indicates the subscript and the second bit stores 1 or 0.</span></span><br><span class="line">setbit sign 0 0</span><br><span class="line"><span class="comment"># get the status of a bit</span></span><br><span class="line">getbit sign 0</span><br><span class="line"><span class="comment"># states of 1</span></span><br><span class="line">bitcount sign</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Shell</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis Transactions And Configuration</title>
    <url>/en-us/redis-config/</url>
    <content><![CDATA[<div class="note blue flat"><p>当前文档有中文版本：<a href="/redis-config/">点击这里切换到中文</a>.</p>
</div>

<h1 id="Transaction"><a href="#Transaction" class="headerlink" title="Transaction"></a>Transaction</h1><p>The essence of a Redis transaction is a collection of commands where all commands within the transaction are serialized and executed sequentially. The characteristics include atomicity, sequentiality, and exclusivity.<br>Redis transactions do not have the concept of isolation levels. All commands in the transaction are not directly executed; they are only executed when the execution command is issued.<br>While individual Redis commands maintain atomicity, a transaction does not guarantee atomicity.</p>
<h2 id="Execution-of-a-Redis-transaction"><a href="#Execution-of-a-Redis-transaction" class="headerlink" title="Execution of a Redis transaction"></a>Execution of a Redis transaction</h2><p>Start the transaction (using MULTI).<br>Queue the commands.<br>Execute the transaction (using EXEC).<br>The command to discard the transaction is DISCARD.</p>
<h2 id="Transaction-exceptions-in-Redis"><a href="#Transaction-exceptions-in-Redis" class="headerlink" title="Transaction exceptions in Redis"></a>Transaction exceptions in Redis</h2><p>Compilation Exception (Syntax Error in Code or Command): If there is a syntax error in any command within the transaction, none of the commands in the transaction will be executed.<br>Runtime Exception: If there is a runtime error in the transaction queue, the commands that are error-free will be executed normally when the transaction is executed, while the erroneous command will throw an exception.</p>
<h2 id="Locks"><a href="#Locks" class="headerlink" title="Locks"></a>Locks</h2><h3 id="Pessimistic-locks"><a href="#Pessimistic-locks" class="headerlink" title="Pessimistic locks"></a>Pessimistic locks</h3><p>| Pessimistic Lock: This approach assumes that issues may occur at any time, so it locks the resource whenever an operation is performed to prevent conflicts.</p>
<h3 id="Optimistic-locks"><a href="#Optimistic-locks" class="headerlink" title="Optimistic locks"></a>Optimistic locks</h3><p>| Optimistic Lock: This approach assumes that conflicts or issues are unlikely to happen. It doesn’t lock the resource during the operation. Instead, it checks if the data has been modified by someone else before committing the update.<br>| - Getting the Version: Before updating data, the version of the data is retrieved.<br>| - Comparing the Version: During the update, the version is compared to ensure no one else has modified the data in the meantime.</p>
<p>Watch Command: Use WATCH [key] to monitor the object for changes before making updates.<br>Unlock Command: Use UNWATCH to release the lock and stop monitoring.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># command 1</span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> money 200</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> out 0</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; watch money</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; MULTI</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; decrby money 10</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379&gt; incrby out 10</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">exec</span></span><br><span class="line">(nil)</span><br><span class="line"><span class="comment"># command 2</span></span><br><span class="line">127.0.0.1:6379&gt; get money</span><br><span class="line"><span class="string">&quot;200&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> money 1000</span><br><span class="line">OK</span><br></pre></td></tr></table></figure>

<ol>
<li><p>127.0.0.1:6379&gt; set money 200</p>
<ul>
<li>This command sets a key money in Redis with a value of 200. The 127.0.0.1:6379 indicates the local address and port connected to the Redis server. The response OK signifies that the operation was successful.</li>
</ul>
</li>
<li><p>127.0.0.1:6379&gt; set out 0</p>
<ul>
<li>This command sets another key out with a value of 0. Again, OK indicates that the operation was successful.</li>
</ul>
</li>
<li><p>127.0.0.1:6379&gt; watch money</p>
<ul>
<li>Here, the WATCH command is used to monitor the key money. The WATCH command makes Redis keep an eye on this key before executing the transaction. If the value of money is modified by another client before the transaction is executed, the transaction will be aborted. OK indicates that the key is being successfully watched.</li>
</ul>
</li>
<li><p>127.0.0.1:6379&gt; MULTI</p>
<ul>
<li>The MULTI command begins a transaction. All commands issued after MULTI and before EXEC are queued up and will be executed atomically when EXEC is called. The response OK confirms that the transaction has started.</li>
</ul>
</li>
<li><p>127.0.0.1:6379&gt; decrby money 10</p>
<ul>
<li>The DECRBY command decreases the value of money by 10. Since this is inside a transaction, the command is queued, and QUEUED indicates that the command has been successfully added to the transaction queue.</li>
</ul>
</li>
<li><p>127.0.0.1:6379&gt; incrby out 10</p>
<ul>
<li>The INCRBY command increases the value of out by 10. Like the previous command, QUEUED indicates that it has been added to the transaction queue.</li>
</ul>
</li>
<li><p>127.0.0.1:6379&gt; exec</p>
<ul>
<li>The EXEC command executes all the commands queued in the transaction. If the money key (which was being watched) was modified by another client after the WATCH command but before EXEC, then the transaction will be aborted, and none of the commands will be executed.</li>
<li>In this case, the response (nil) indicates that the money key was indeed modified by another client, causing the transaction to be aborted and no commands to be executed.</li>
</ul>
</li>
</ol>
<p>In summary, this code attempts to decrease the value of money and increase the value of out within a transaction. However, because the money key was modified by another client before the transaction was executed, the transaction was aborted, and no changes were applied.</p>
<h1 id="Config"><a href="#Config" class="headerlink" title="Config"></a>Config</h1><p>Redis commands are case-insensitive, meaning you can enter commands in uppercase, lowercase, or a combination of both, and they will be interpreted the same way. For example, SET, set, and SeT are all valid and will perform the same operation. This allows flexibility in how commands are written and executed.</p>
<img src="/en-us/redis-config/redis-config1.webp" class="">

<p>In Redis, it is possible to include other configuration files within a primary configuration file. This allows for better organization and modularity of configuration settings. You can use the include directive in the main Redis configuration file to include other configuration files.<br>This would include the configuration settings from other-config.conf into your main Redis configuration. You can include multiple files this way by adding multiple include directives.<br>This feature is useful when you want to separate certain configuration aspects, such as security settings, network settings, or performance tuning parameters, into different files and then bring them all together in the main configuration file.</p>
<img src="/en-us/redis-config/redis-config2.webp" class="">

<h2 id="Network"><a href="#Network" class="headerlink" title="Network"></a>Network</h2><p>The bind directive specifies the network interface addresses that Redis will listen on. By default, Redis binds to all network interfaces, which could expose the server to the internet if not properly configured. You can limit this exposure by specifying one or more IP addresses.</p>
<p>The protected-mode directive is a security feature introduced to prevent unintended exposure of Redis instances to the internet.<br>When protected-mode is set to yes (which is the default), Redis will only accept connections from the loopback address (127.0.0.1) unless you have explicitly configured the bind directive or set a password with requirepass.<br>If Redis detects that it is being accessed from an external IP and protected-mode is enabled, it will refuse connections and log a warning.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">bind</span> 127.0.0.1</span><br><span class="line">protected-mode <span class="built_in">yes</span></span><br><span class="line">port 6379</span><br></pre></td></tr></table></figure>

<h2 id="General"><a href="#General" class="headerlink" title="General"></a>General</h2><p>The daemonize directive controls whether Redis runs as a daemon. By default, this option is set to no, which means Redis runs in the foreground. If you want Redis to run as a background process, you need to set this option to yes.</p>
<p>When daemonize is set to yes, Redis will start in the background and will write its process ID (PID) to a file, usually specified by the pidfile directive in the configuration file. This allows you to manage the Redis process more easily, for example, by stopping or restarting it using standard tools like kill.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">daemonize <span class="built_in">yes</span></span><br><span class="line">pidfile /var/run/redis_6379.pid</span><br><span class="line"><span class="comment"># log</span></span><br><span class="line"><span class="comment"># Specify the server verbosity level.</span></span><br><span class="line"><span class="comment"># This can be one of:</span></span><br><span class="line"><span class="comment"># debug (a lot of information, useful for development/testing)</span></span><br><span class="line"><span class="comment"># verbose (many rarely useful info, but not a mess like the debug level)</span></span><br><span class="line"><span class="comment"># notice (moderately verbose, what you want in production probably) </span></span><br><span class="line"><span class="comment"># warning (only very important / critical messages are logged)</span></span><br><span class="line">loglevel notice</span><br><span class="line">logfile </span><br><span class="line">database 16</span><br><span class="line">always-show-logo <span class="built_in">yes</span></span><br></pre></td></tr></table></figure>

<h2 id="RDB"><a href="#RDB" class="headerlink" title="RDB"></a>RDB</h2><p>These save directives define when Redis should automatically save a snapshot of the dataset to disk. The format is save <seconds> <changes>, where Redis will perform a save if at least <changes> keys have been modified in the last <seconds> seconds.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#  Save a snapshot if at least one key has been modified in the last 900 seconds (15 minutes).</span></span><br><span class="line">save 900 1</span><br><span class="line"><span class="comment"># Save a snapshot if at least 10 keys have been modified in the last 300 seconds (5 minutes).</span></span><br><span class="line">save 300 10 </span><br><span class="line"><span class="comment"># Save a snapshot if at least 10,000 keys have been modified in the last 60 seconds (1 minute).</span></span><br><span class="line">save 60 10000</span><br><span class="line">stop-writes-on-bgsave-error <span class="built_in">yes</span></span><br><span class="line">rdbcompression <span class="built_in">yes</span></span><br><span class="line">rdbchecksum <span class="built_in">yes</span></span><br><span class="line"><span class="built_in">dir</span> ./</span><br></pre></td></tr></table></figure>

<ul>
<li>stop-writes-on-bgsave-error: If an error occurs during the background saving process (BGSAVE), Redis will stop accepting writes to avoid potential data loss. This setting is a safety mechanism to prevent further modifications to the dataset when a persistence error has occurred.</li>
<li>rdbcompression: Enables LZF compression for the RDB file. This reduces the size of the snapshot file on disk, but it may increase CPU usage during the save process. It is generally recommended to keep this enabled unless disk space is not a concern and you want to minimize CPU usage.</li>
<li>rdbchecksum: Enables a checksum at the end of the RDB file. This ensures the integrity of the file, allowing Redis to detect potential corruption. The trade-off is a small performance cost during save and load operations.</li>
<li>dir: Specifies the directory where the RDB file will be saved. The .&#x2F; indicates the current directory where the Redis server was started. You can change this to an absolute path if you want to store the RDB file in a specific location on the filesystem.</li>
</ul>
<h2 id="Security"><a href="#Security" class="headerlink" title="Security"></a>Security</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">config <span class="built_in">set</span> requirepass 123456</span><br><span class="line">auth 123456</span><br><span class="line">maxclients 10000</span><br><span class="line">maxmemory &lt;byte&gt;</span><br><span class="line">maxmemory-policy noeviction</span><br></pre></td></tr></table></figure>

<ul>
<li>config set requirepass: Sets the password required to authenticate clients connecting to the Redis server. In this example, the password is set to 123456. After setting a password, clients must authenticate using the AUTH command before they can execute any other commands.</li>
<li>auth: This command is used by clients to authenticate with the Redis server using the password set by requirepass. In this example, the client uses 123456 as the password to authenticate.</li>
<li>maxclients: Limits the maximum number of clients that can be connected to the Redis server simultaneously. In this example, the maximum is set to 10,000. If the limit is reached, Redis will start rejecting new connections with an error until some clients disconnect.</li>
<li>maxmempoy: Sets the maximum amount of memory that Redis is allowed to use. The value should be specified in bytes (e.g., maxmemory 2gb for 2 gigabytes). Redis will start applying the configured eviction policy when this memory limit is reached.</li>
<li>maxmemory-policy: Defines the strategy Redis will use when the memory limit (maxmemory) is reached.<ul>
<li>noeviction: Default setting. Redis will not evict any keys when the memory limit is reached. Instead, it will return an error to any write commands that would require more memory.</li>
<li>allkeys-lru: Redis will evict the least recently used (LRU) keys from all keys to make room for new data.</li>
<li>volatile-lru: Redis will evict the least recently used (LRU) keys only from keys that have an expiration set (expire).</li>
<li>allkeys-random: Redis will randomly evict keys from all keys to free up memory.</li>
<li>volatile-random: Redis will randomly evict keys only from those that have an expiration set (expire).</li>
<li>volatile-ttl: Redis will evict keys with the shortest remaining time to live (TTL) from those with an expiration set (expire).</li>
</ul>
</li>
</ul>
<h2 id="AOF"><a href="#AOF" class="headerlink" title="AOF"></a>AOF</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">appendonly no</span><br><span class="line">appendfilename <span class="string">&quot;appendonly.aof&quot;</span></span><br><span class="line">appendfsync always</span><br><span class="line">appendfsync everysec</span><br><span class="line">appendfsync no</span><br></pre></td></tr></table></figure>

<ul>
<li>appendonly: This setting controls whether Redis uses the Append-Only File (AOF) for persistence. By default, it is set to no, meaning AOF is disabled, and Redis relies on RDB (Redis Database) snapshots for persistence. The RDB method is typically sufficient for most cases because it is faster and consumes less disk space, though it might result in more data loss compared to AOF in the event of a crash.</li>
<li>appendfilename: Specifies the name of the AOF file. The default name is appendonly.aof. This file logs every write operation received by the server, allowing Redis to rebuild the dataset by replaying the AOF file if it needs to recover.</li>
<li>appendfsync<ul>
<li>always: Every write operation is immediately flushed to disk (fsync), ensuring the highest level of data durability but at a significant performance cost. This setting guarantees that no data will be lost, but it slows down the server due to the constant disk I&#x2F;O operations.</li>
<li>everysec: Redis will flush data to disk once every second. This is a good compromise between performance and data safety, as it balances the risk of losing up to one second’s worth of data with relatively low impact on performance. This is the recommended setting for most use cases.</li>
<li>no: Redis will not explicitly flush data to disk. Instead, the operating system handles the flushing, which is the fastest option but offers no guarantees about when the data will be safely written to disk. This could result in significant data loss if the system crashes before the OS syncs the data.</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Shell</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Deploy Kubernetes With Kubeadm</title>
    <url>/en-us/deploy-k8s-with-kubeadm/</url>
    <content><![CDATA[<div class="note blue flat"><p>当前文档有中文版本：<a href="/deploy-k8s-with-kubeadm/">点击这里切换到中文</a>.</p>
</div>

<h1 id="Foreword"><a href="#Foreword" class="headerlink" title="Foreword"></a>Foreword</h1><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>This document provides a step-by-step guide to deploying a Kubernetes cluster using Kubeadm (version 1.21.11). The deployment process includes setting up the control plane node and worker nodes, and verifying the cluster’s functionality.</p>
<h1 id="Preparation"><a href="#Preparation" class="headerlink" title="Preparation"></a>Preparation</h1><h2 id="Servers"><a href="#Servers" class="headerlink" title="Servers"></a>Servers</h2><table>
<thead>
<tr>
<th><strong>HOST</strong></th>
<th><strong>IP</strong></th>
<th><strong>SYSTEM</strong></th>
</tr>
</thead>
<tbody><tr>
<td>master1</td>
<td>192.168.1.10</td>
<td>centos7</td>
</tr>
<tr>
<td>master2</td>
<td>192.168.1.11</td>
<td>centos7</td>
</tr>
<tr>
<td>node1</td>
<td>192.168.1.20</td>
<td>centos7</td>
</tr>
<tr>
<td>node2</td>
<td>192.168.1.21</td>
<td>centos7</td>
</tr>
</tbody></table>
<h2 id="Server-Port"><a href="#Server-Port" class="headerlink" title="Server Port"></a>Server Port</h2><p>Open the relevant firewall ports, modify the security group settings for the cloud server, and update the firewall rules on the local server.<br>For test you can set all trust or disable the firewall.</p>
<table>
<thead>
<tr>
<th><strong>UNIT</strong></th>
<th><strong>PORT</strong></th>
</tr>
</thead>
<tbody><tr>
<td>API Server</td>
<td>8080（http）<br> 6443（https）</td>
</tr>
<tr>
<td>Controller Manager</td>
<td>10252</td>
</tr>
<tr>
<td>Scheduler</td>
<td>10251</td>
</tr>
<tr>
<td>kubelet</td>
<td>10250 <br> 10255（read only）</td>
</tr>
<tr>
<td>etcd</td>
<td>2379（client）<br> 2380（etcd cluster）</td>
</tr>
<tr>
<td>DNS</td>
<td>53（UDP TCP）</td>
</tr>
<tr>
<td>CNI Calico</td>
<td>179</td>
</tr>
</tbody></table>
<h2 id="Basic-Tools"><a href="#Basic-Tools" class="headerlink" title="Basic Tools"></a>Basic Tools</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum update -y</span><br><span class="line">yum install net-tools curl wget epel-release vim gcc wget make libtool expat-devel pcre-devel openssl-devel libxml2-devel -y</span><br><span class="line">yum install git lsof ncdu psmisc htop openssl lrzsz -y</span><br><span class="line">yum install conntrack ipvsadm ipset jq sysstat iptables libseccomp -y</span><br></pre></td></tr></table></figure>

<h1 id="Install-Container-Runtime"><a href="#Install-Container-Runtime" class="headerlink" title="Install Container Runtime"></a>Install Container Runtime</h1><div class="note blue Container Runtime flat"><p>To run Kubernetes, container runtime support is required, so we need to install a container runtime on the server.<br>The most commonly used container runtime is Docker, but the officially recommended container runtime is Containerd.</p>
</div>

<div class="note tip flat"><p>Note: In Kubernetes version 1.24, support for docker-shim was removed. If you are installing a Kubernetes version higher than 1.24, it is recommended to install Containerd.</p>
</div>

<div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">Docker</button><button type="button" class="tab">Containerd</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y yum-utils \</span><br><span class="line">  device-mapper-persistent-data \</span><br><span class="line">  lvm2</span><br><span class="line"></span><br><span class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># install</span></span><br><span class="line">yum install -y docker-ce docker-ce-cli containerd.io</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -pv /etc/docker</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">&quot;EOF&quot;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;log-driver&quot;</span>:<span class="string">&quot;json-file&quot;</span>,</span><br><span class="line">  <span class="string">&quot;log-opts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;max-size&quot;</span>: <span class="string">&quot;5m&quot;</span>,</span><br><span class="line">    <span class="string">&quot;max-file&quot;</span>:<span class="string">&quot;3&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;exec-opts&quot;</span>: [<span class="string">&quot;native.cgroupdriver=systemd&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># start</span></span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># load mod</span></span><br><span class="line">modprobe overlay</span><br><span class="line">modprobe br_netfilter</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/modules-load.d/containerd.conf</span></span><br><span class="line"><span class="string">overlay</span></span><br><span class="line"><span class="string">br_netfilter</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># install the nerdctl toolkit</span></span><br><span class="line">wget https://github.com/containerd/nerdctl/releases/download/v1.0.0/nerdctl-full-1.0.0-linux-amd64.tar.gz</span><br><span class="line">tar Cxzvvf /usr/local nerdctl-full-1.0.0-linux-amd64.tar.gz</span><br><span class="line">systemctl <span class="built_in">enable</span> --now containerd</span><br><span class="line">systemctl <span class="built_in">enable</span> --now buildkit</span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">mkdir</span> -p /etc/containerd</span><br><span class="line">sudo containerd config default | sudo <span class="built_in">tee</span> /etc/containerd/config.toml</span><br><span class="line"></span><br><span class="line"><span class="comment"># edit config</span></span><br><span class="line">SystemdCgroup = <span class="literal">true</span></span><br><span class="line">....</span><br><span class="line"></span><br><span class="line">[plugins.<span class="string">&quot;io.containerd.grpc.v1.cri&quot;</span>.registry]</span><br><span class="line">      config_path = <span class="string">&quot;/etc/containerd/certs.d&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># create dir</span></span><br><span class="line"><span class="built_in">mkdir</span> /etc/containerd/certs.d/docker.io -pv</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/containerd/certs.d/docker.io/hosts.toml &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">server = &quot;https://docker.io&quot;</span></span><br><span class="line"><span class="string">[host.&quot;https://docker.mirrors.ustc.edu.cn&quot;]</span></span><br><span class="line"><span class="string">  capabilities = [&quot;pull&quot;, &quot;resolve&quot;]</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">systemctl restart containerd</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>

<h1 id="Server-System-Config"><a href="#Server-System-Config" class="headerlink" title="Server System Config"></a>Server System Config</h1><h2 id="Disable-Selinux"><a href="#Disable-Selinux" class="headerlink" title="Disable Selinux"></a>Disable Selinux</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># permanent</span></span><br><span class="line">sed -i <span class="string">&#x27;s/enforcing/disable/&#x27;</span> /etc/selinux/config</span><br><span class="line"><span class="comment"># temporary</span></span><br><span class="line">setenforce 0</span><br></pre></td></tr></table></figure>

<h2 id="Disable-SWAP"><a href="#Disable-SWAP" class="headerlink" title="Disable SWAP"></a>Disable SWAP</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#（Some cloud services are turned off by default, which can be viewed with the free command or by looking at /etc/fstab）</span></span><br><span class="line"><span class="comment"># permanent</span></span><br><span class="line">swapoff -a</span><br><span class="line"><span class="comment"># temporary</span></span><br><span class="line">sed -ri <span class="string">&#x27;s/.*swap.*/#&amp;/&#x27;</span> /etc/fstab</span><br></pre></td></tr></table></figure>

<h2 id="Pass-bridged-IPV4-traffic-to-iptables"><a href="#Pass-bridged-IPV4-traffic-to-iptables" class="headerlink" title="Pass bridged IPV4 traffic to iptables"></a>Pass bridged IPV4 traffic to iptables</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># load mod</span></span><br><span class="line">modprobe br_netfilter</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/sysctl.d/kubernetes.conf &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables = 1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables = 1</span></span><br><span class="line"><span class="string">net.ipv4.ip_forward = 1</span></span><br><span class="line"><span class="string">vm.swappiness=0</span></span><br><span class="line"><span class="string">vm.overcommit_memory = 1</span></span><br><span class="line"><span class="string">vm.panic_on_oom = 0</span></span><br><span class="line"><span class="string">fs.inotify.max_user_watches = 89100</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">sysctl -p /etc/sysctl.d/kubernetes.conf</span><br></pre></td></tr></table></figure>

<h2 id="IPVS-Config"><a href="#IPVS-Config" class="headerlink" title="IPVS Config"></a>IPVS Config</h2><p>In Kubernetes, there are two service proxy models: one based on iptables and another based on IPVS.<br>When comparing the two, the performance of IPVS is significantly higher. However, to use IPVS, you need to manually load the IPVS modules.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install ipset ipvsadmin -y</span><br></pre></td></tr></table></figure>

<p>load mod</p>
<div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">low kernel version</button><button type="button" class="tab">high kernel version</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/sysconfig/modules/ipvs.modules &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string">modprobe -- ip_vs</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_rr</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_wrr</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_sh</span></span><br><span class="line"><span class="string">modprobe -- nf_conntrack_ipv4</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add executable permissions and execute</span></span><br><span class="line"><span class="built_in">chmod</span> +x /etc/sysconfig/modules/ipvs.modules</span><br><span class="line">sh /etc/sysconfig/modules/ipvs.modules</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/sysconfig/modules/ipvs.modules &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string">modprobe -- ip_vs</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_rr</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_wrr</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_sh</span></span><br><span class="line"><span class="string">modprobe -- nf_conntrack</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add executable permissions and execute</span></span><br><span class="line"><span class="built_in">chmod</span> +x /etc/sysconfig/modules/ipvs.modules</span><br><span class="line">sh /etc/sysconfig/modules/ipvs.modules</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>

<h2 id="Set-up-time-synchronization-generally-cloud-service-vendors-have-already-set-it-up-local-servers-need-to-be-configured"><a href="#Set-up-time-synchronization-generally-cloud-service-vendors-have-already-set-it-up-local-servers-need-to-be-configured" class="headerlink" title="Set up time synchronization (generally cloud service vendors have already set it up, local servers need to be configured)"></a>Set up time synchronization (generally cloud service vendors have already set it up, local servers need to be configured)</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install chrony</span><br><span class="line"></span><br><span class="line"><span class="comment"># start</span></span><br><span class="line">systemctl start chronyd</span><br><span class="line">systemctl <span class="built_in">enable</span> chronyd</span><br></pre></td></tr></table></figure>

<h1 id="Install-Kubernetes"><a href="#Install-Kubernetes" class="headerlink" title="Install Kubernetes"></a>Install Kubernetes</h1><h2 id="Yum-Repo"><a href="#Yum-Repo" class="headerlink" title="Yum Repo"></a>Yum Repo</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[kubernetes]</span></span><br><span class="line"><span class="string">name=Kubernetes</span></span><br><span class="line"><span class="string">baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">repo_gpgcheck=1</span></span><br><span class="line"><span class="string">gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg</span></span><br><span class="line"><span class="string">exclude=kube*</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">yum install -y kubectl kubeadm kubelet --disableexcludes=kubernetes</span><br><span class="line"></span><br><span class="line">yum search kubeadm --showduplicates</span><br><span class="line"></span><br><span class="line">yum install -y kubectl-1.21.11-0.x86_64 kubeadm-1.21.11-0.x86_64 kubelet-1.21.11-0.x86_64 --disableexcludes=kubernetes</span><br></pre></td></tr></table></figure>

<h2 id="Start-Kubelet"><a href="#Start-Kubelet" class="headerlink" title="Start Kubelet"></a>Start Kubelet</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start kubelet</span><br><span class="line">systemctl <span class="built_in">enable</span> kubelet</span><br><span class="line"><span class="comment"># It is normal for kubelet to report errors because the current cluster node is not up.</span></span><br><span class="line">systemctl status kubelet</span><br></pre></td></tr></table></figure>

<h1 id="Images"><a href="#Images" class="headerlink" title="Images"></a>Images</h1><h2 id="Get-Image-List"><a href="#Get-Image-List" class="headerlink" title="Get Image List"></a>Get Image List</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm config images list</span><br><span class="line">kubeadm config images list --kubernetes-version=v1.21.11</span><br><span class="line">kubeadm config images list --kubernetes-version=v1.21.11 --v=5</span><br></pre></td></tr></table></figure>

<h2 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm config images pull --kubernetes-version=v1.21.11</span><br><span class="line"></span><br><span class="line"><span class="comment"># check</span></span><br><span class="line">docker images &amp;&amp; nerdctl --namespace k8s.io images</span><br></pre></td></tr></table></figure>

<h1 id="Control-Plane"><a href="#Control-Plane" class="headerlink" title="Control Plane"></a>Control Plane</h1><h2 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># docker (docker-shim is deprecated in higher versions, containerd is recommended)</span></span><br><span class="line">kubeadm init \</span><br><span class="line">  --control-plane-endpoint 192.168.1.10:6443 \</span><br><span class="line">  --kubernetes-version=v1.21.11  \</span><br><span class="line">  --pod-network-cidr=10.244.0.0/16 \</span><br><span class="line">  --service-cidr=10.96.0.0/12 --upload-certs</span><br><span class="line"></span><br><span class="line"><span class="comment"># containerd</span></span><br><span class="line">kubeadm init \</span><br><span class="line">  --kubernetes-version v1.21.11  \</span><br><span class="line">  --control-plane-endpoint 192.168.1.10:6443 \</span><br><span class="line">  --image-repository registry.aliyuncs.com/google_containers \</span><br><span class="line">  --pod-network-cidr 10.244.0.0/16 \</span><br><span class="line">  --cri-socket /run/containerd/containerd.sock \</span><br><span class="line">  --service-cidr=10.96.0.0/12 --upload-certs</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># retain following data, it will be used later</span></span><br><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  <span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">  sudo <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">  sudo <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line">Alternatively, <span class="keyword">if</span> you are the root user, you can run:</span><br><span class="line"></span><br><span class="line">  <span class="built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run <span class="string">&quot;kubectl apply -f [podnetwork].yaml&quot;</span> with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">You can now <span class="built_in">join</span> any number of the control-plane node running the following <span class="built_in">command</span> on each as root:</span><br><span class="line"></span><br><span class="line"> kubeadm <span class="built_in">join</span> 192.168.1.10:6443 --token grjzmr.ttkq7t4l3w9r2fb7\        --discovery-token-ca-cert-hash sha256:d9f4a8c6d14584b998a3ca86fd7e727f7d9d779f80e834dcf19e9116f22f3fad \</span><br><span class="line">        --control-plane --certificate-key 2346e1d55aa63ab30c3d7dca7529e9f91097383322e36336483a42ffa76e4c27</span><br><span class="line"></span><br><span class="line">Please note that the certificate-key gives access to cluster sensitive data, keep it secret!</span><br><span class="line">As a safeguard, uploaded-certs will be deleted <span class="keyword">in</span> two hours; If necessary, you can use</span><br><span class="line"><span class="string">&quot;kubeadm init phase upload-certs --upload-certs&quot;</span> to reload certs afterward.</span><br><span class="line"></span><br><span class="line">Then you can <span class="built_in">join</span> any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm <span class="built_in">join</span> 192.168.1.10:6443 --token grjzmr.ttkq7t4l3w9r2fb7 \</span><br><span class="line">        --discovery-token-ca-cert-hash sha256:d9f4a8c6d14584b998a3ca86fd7e727f7d9d779f80e834dcf19e9116f22f3fad</span><br></pre></td></tr></table></figure>

<h2 id="Execute-Join-Control-Plane-in-master2"><a href="#Execute-Join-Control-Plane-in-master2" class="headerlink" title="Execute Join Control Plane in master2"></a>Execute Join Control Plane in master2</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm <span class="built_in">join</span> 192.168.1.10:6443 --token grjzmr.ttkq7t4l3w9r2fb7 \</span><br><span class="line">        --discovery-token-ca-cert-hash sha256:d9f4a8c6d14584b998a3ca86fd7e727f7d9d779f80e834dcf19e9116f22f3fad \</span><br><span class="line">        --control-plane --certificate-key 2346e1d55aa63ab30c3d7dca7529e9f91097383322e36336483a42ffa76e4c27</span><br></pre></td></tr></table></figure>

<h2 id="Perform-configuration-on-all-masters"><a href="#Perform-configuration-on-all-masters" class="headerlink" title="Perform configuration on all masters"></a>Perform configuration on all masters</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line"><span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"><span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure>

<h1 id="Add-the-node-to-the-cluster"><a href="#Add-the-node-to-the-cluster" class="headerlink" title="Add the node to the cluster"></a>Add the node to the cluster</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm <span class="built_in">join</span> 192.168.1.10:6443 --token grjzmr.ttkq7t4l3w9r2fb7 \</span><br><span class="line">        --discovery-token-ca-cert-hash sha256:d9f4a8c6d14584b998a3ca86fd7e727f7d9d779f80e834dcf19e9116f22f3fad</span><br></pre></td></tr></table></figure>

<h1 id="Install-the-CNI-network-plugin-do-it-on-master"><a href="#Install-the-CNI-network-plugin-do-it-on-master" class="headerlink" title="Install the CNI network plugin (do it on master)"></a>Install the CNI network plugin (do it on master)</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Check the node information, found that the current node is not ready, you need to install CNI, here choose Calico, you can also use others</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># download manifests</span></span><br><span class="line">wget https://docs.projectcalico.org/manifests/calico.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># apply</span></span><br><span class="line">kubectl apply -f calico.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># check</span></span><br><span class="line">kubectl get nodes</span><br></pre></td></tr></table></figure>

<h1 id="Use-IPVS"><a href="#Use-IPVS" class="headerlink" title="Use IPVS"></a>Use IPVS</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># view current IPVS rules</span></span><br><span class="line">ipvsadm -L -n</span><br><span class="line"></span><br><span class="line"><span class="comment"># edit kube-proxy config</span></span><br><span class="line">kubectl edit configmap -n kube-system kube-proxy</span><br><span class="line"><span class="comment"># Edit: `mode: &quot;ipvs&quot;`</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># restart kube-proxy，get pod and delete pod</span></span><br><span class="line">kubectl get pod -n kube-system -o wide | grep kube-proxy</span><br><span class="line"></span><br><span class="line"><span class="comment"># check</span></span><br><span class="line">ipvsadm -L -n</span><br></pre></td></tr></table></figure>

<p>At this point the K8S cluster has been built, the cloud host can be configured through the NLB to achieve external access to the ApiService, the local server can be configured with Keepalived + HAProxy on the ApiService proxy!</p>
]]></content>
      <categories>
        <category>CloudNative</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>DevOps</tag>
      </tags>
  </entry>
  <entry>
    <title>Deploy Rook Ceph On Kubernetes</title>
    <url>/en-us/deploy-rook-ceph-on-k8s/</url>
    <content><![CDATA[<div class="note red flat"><p>当前文档有中文版本：<a href="/deploy-rook-ceph-on-k8s/">点击这里切换到中文</a>.</p>
</div>

<h1 id="Foreword"><a href="#Foreword" class="headerlink" title="Foreword"></a>Foreword</h1><h2 id="Persistent-Storage"><a href="#Persistent-Storage" class="headerlink" title="Persistent Storage"></a>Persistent Storage</h2><p>Persistent storage for containers is a crucial means of preserving the storage state of containers. Storage plugins mount a remote data volume in the container, based on a network or other mechanisms, ensuring that files created inside the container are actually stored on a remote storage server or distributed across multiple nodes. This way, there is no binding relationship with the current host machine.</p>
<p>As a result, no matter which host you start a new container on, you can request to mount the specified persistent storage volume, thereby accessing the data stored in the volume.</p>
<p>Due to Kubernetes’ loosely coupled design, most storage solutions, such as Ceph, GlusterFS, NFS, and others, can provide persistent storage capabilities for Kubernetes.</p>
<h2 id="Ceph"><a href="#Ceph" class="headerlink" title="Ceph"></a>Ceph</h2><p>Ceph is a distributed storage system that provides file, block and object storage and is deployed in large scale production clusters.</p>
<p>Official website: <a href="https://ceph.io/">ceph.io</a></p>
<h2 id="Rook"><a href="#Rook" class="headerlink" title="Rook"></a>Rook</h2><p>Rook is an open source cloud-native storage orchestrator, providing the platform, framework, and support for Ceph storage to natively integrate with cloud-native environments.</p>
<p>Rook automates deployment and management of Ceph to provide self-managing, self-scaling, and self-healing storage services. The Rook operator does this by building on Kubernetes resources to deploy, configure, provision, scale, upgrade, and monitor Ceph.</p>
<p>Official website: <a href="https://rook.io/">rook.io</a></p>
<p>GitHub: <a href="https://github.com/rook/rook">rook&#x2F;rook</a></p>
<h1 id="Prepare"><a href="#Prepare" class="headerlink" title="Prepare"></a>Prepare</h1><div class="note blue flat"><p>PS：Before installing Rook, ensure that the Kubernetes cluster has at least three available nodes to meet Ceph’s high availability requirements.</p>
</div>

<h2 id="Disk"><a href="#Disk" class="headerlink" title="Disk"></a>Disk</h2><p>Rook uses Ceph to create distributed storage services. During the initial installation, Rook automatically detects all the disks on the nodes and creates OSD services to manage them.</p>
<p>Rook monitors and discovers available devices based on the following criteria: The device has no partitions and does not have a formatted file system.</p>
<p>Rook will not use devices that do not meet the above criteria. Additionally, you can modify the configuration file to specify which nodes or devices will be used.</p>
<p>The following steps are for installing Rook on Kubernetes (CentOS):</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Check disk status</span></span><br><span class="line">lsblk -f</span><br><span class="line"></span><br><span class="line"><span class="comment"># Initialize Disk</span></span><br><span class="line">yum install gdisk -y</span><br><span class="line">sgdisk --zap-all /dev/vdb</span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/zero of=<span class="string">&quot;/dev/vdb&quot;</span> bs=1M count=100 oflag=direct,dsync</span><br><span class="line">blkdiscard /dev/vdb</span><br><span class="line">partprobe /dev/vdb</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install lvm2</span></span><br><span class="line">yum install lvm2 -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable rbd module</span></span><br><span class="line">modprobe rbd</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/rc.sysinit &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string">for file in /etc/sysconfig/modules/*.modules</span></span><br><span class="line"><span class="string">do</span></span><br><span class="line"><span class="string">  [ -x \$file ] &amp;&amp; \$file</span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/sysconfig/modules/rbd.modules &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">modprobe rbd</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> 755 /etc/sysconfig/modules/rbd.modules</span><br><span class="line">lsmod |grep rbd</span><br></pre></td></tr></table></figure>

<h1 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h1><h2 id="Deploy-Rook-Operator"><a href="#Deploy-Rook-Operator" class="headerlink" title="Deploy Rook Operator"></a>Deploy Rook Operator</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /data/packages</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> --single-branch --branch release-1.9 https://github.com/rook/rook.git</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /data/packages/rook/deploy/examples</span><br><span class="line"></span><br><span class="line"><span class="comment"># apply common manifests</span></span><br><span class="line">kubectl create -f crds.yaml</span><br><span class="line">kubectl create -f common.yaml</span><br></pre></td></tr></table></figure>

<ul>
<li>This file is a Kubernetes manifests file, and you can directly use Kubernetes commands to deploy all the resources defined in the file to the cluster.</li>
<li>There is only one point to note: if you want to install Rook and the corresponding Ceph containers into a specific project, it is recommended to first create the project and the namespace.</li>
<li>The common file resources will automatically create a namespace called <code>rook-ceph</code>, and all subsequent resources and containers will be installed within this namespace.</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Modify the `operator.yaml` configuration to enable automatic disk discovery.</span></span><br><span class="line"><span class="comment"># By default, automatic discovery is disabled. Once enabled, Rook will automatically create OSDs when new raw disk devices are connected.</span></span><br><span class="line"><span class="comment"># However, note that unmounting a disk will not remove the OSD.</span></span><br><span class="line">ROOK_ENABLE_DISCOVERY_DAEMON: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Install operator</span></span><br><span class="line">kubectl create -f operator.yaml</span><br></pre></td></tr></table></figure>

<ul>
<li>The operator is the core of the entire Rook system, and all subsequent functions such as cluster creation, automatic orchestration, and expansion are implemented based on the operator.</li>
<li>After the installation is complete, you need to wait for all operators to be running normally before proceeding with the installation of the Ceph distributed cluster.</li>
</ul>
<p>Check the installation status by running the following command, and wait until all the pods are in the Running state before proceeding to the next step</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl -n rook-ceph get pod</span><br></pre></td></tr></table></figure>

<p>This will display the status of all pods in the rook-ceph namespace. Ensure all pods are in the Running state before continuing with the Ceph distributed cluster installation.</p>
<h2 id="Deploy-rook-ceph"><a href="#Deploy-rook-ceph" class="headerlink" title="Deploy rook-ceph"></a>Deploy rook-ceph</h2><p>With a single YAML orchestration file, you can manage the deployment of the entire Ceph component, including disk configuration, cluster setup, and other related operations.</p>
<p>By applying this YAML file with the kubectl command, you can automatically deploy and configure the entire Ceph system within your Kubernetes environment. Here’s a simplified command for applying the file:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f cluster.yaml</span><br></pre></td></tr></table></figure>

<p>The OSD containers must exist and be running properly. If all the OSD pods are running successfully, the cluster installation is considered successful.</p>
<p>To verify the status of the OSD pods, use the following command:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl -n rook-ceph get pod</span><br></pre></td></tr></table></figure>

<p>Check that all OSD pods (e.g., osd-0, osd-1, osd-2, or any others based on your configuration) are in the Running state. If all these OSD pods are running without any issues, such as CrashLoopBackOff or Error, the Ceph cluster installation can be deemed successful.</p>
<h2 id="Check"><a href="#Check" class="headerlink" title="Check"></a>Check</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Apply toolbox pod</span></span><br><span class="line">kubectl apply -f toolbox.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enter the toolbox pod</span></span><br><span class="line">kubectl -n rook-ceph <span class="built_in">exec</span> -it deploy/rook-ceph-tools -- bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check</span></span><br><span class="line">ceph status</span><br><span class="line">ceph osd status</span><br><span class="line">ceph <span class="built_in">df</span> </span><br><span class="line">rados <span class="built_in">df</span></span><br></pre></td></tr></table></figure>

<h2 id="StorageClass"><a href="#StorageClass" class="headerlink" title="StorageClass"></a>StorageClass</h2><p>After the cluster setup is complete, the next step is to create storage. Currently, Ceph supports three types of storage: block storage, file system storage, and object storage.</p>
<ul>
<li><p><strong>Block Storage</strong>: This is the storage solution officially integrated with Kubernetes and is considered the most stable option. However, block storage currently does not support multi-host read-write access (it is limited to <code>RWO</code> - ReadWriteOnce).</p>
</li>
<li><p><strong>File System Storage</strong>: It supports multi-host access and offers good performance, making it suitable for scenarios requiring concurrent access across multiple nodes.</p>
</li>
<li><p><strong>Object Storage</strong>: Due to its poor I&#x2F;O performance, it is generally not recommended for pvc use cases.</p>
</li>
</ul>
<p>Once the storage system is created, you must add a <strong>StorageClass</strong> for the system. Only then can the Ceph storage be used directly by the Kubernetes cluster through the Kubernetes storage class.</p>
<p>Given the various options and detailed configuration required, it is recommended to refer to the official Rook documentation for guidance: <a href="https://rook.github.io/docs/rook/latest-release/Storage-Configuration/Block-Storage-RBD/block-storage/">Storage Configuration</a>.</p>
<p>PS：It is recommended to use the <strong>XFS</strong> file system instead of <strong>EXT4</strong>, as EXT4 creates a <code>lost+found</code> directory after formatting. Some containers, such as MySQL, require the mounted data disk to be completely empty. If using EXT4 is necessary, you can choose to mount it to a parent directory to avoid conflicts caused by the <code>lost+found</code> folder.</p>
<p>Using <strong>XFS</strong> ensures a cleaner mount point without the need for extra adjustments, making it more suitable for containers that expect an empty volume.</p>
<h3 id="CephFS"><a href="#CephFS" class="headerlink" title="CephFS"></a>CephFS</h3><h4 id="Create-a-File-System-Pool"><a href="#Create-a-File-System-Pool" class="headerlink" title="Create a File System Pool"></a>Create a File System Pool</h4><p>To create a file system pool in Ceph, especially for testing purposes, you can use a default configuration. For production environments, it is recommended to adjust the number of replicas (shards) to 2 or 3 for better data redundancy.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">ceph.rook.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">CephFilesystem</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cephfs</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">rook-ceph</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">metadataPool:</span></span><br><span class="line">    <span class="attr">replicated:</span></span><br><span class="line">      <span class="comment"># replicas 1 for test</span></span><br><span class="line">      <span class="attr">size:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">requireSafeReplicaSize:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">dataPools:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">replicated</span></span><br><span class="line">      <span class="attr">failureDomain:</span> <span class="string">osd</span></span><br><span class="line">      <span class="attr">replicated:</span></span><br><span class="line">        <span class="comment"># replicas 1 for test</span></span><br><span class="line">        <span class="attr">size:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">requireSafeReplicaSize:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">preserveFilesystemOnDelete:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">metadataServer:</span></span><br><span class="line">    <span class="attr">activeCount:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">activeStandby:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f ceph-filesystem.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check pod status</span></span><br><span class="line">kubectl -n rook-ceph get pod -l app=rook-ceph-mds</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enter the toolbox pod</span></span><br><span class="line">kubectl -n rook-ceph <span class="built_in">exec</span> -it deploy/rook-ceph-tools -- bash</span><br><span class="line">ceph status</span><br></pre></td></tr></table></figure>

<h4 id="Create-StorageClass"><a href="#Create-StorageClass" class="headerlink" title="Create StorageClass"></a>Create StorageClass</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">storage.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StorageClass</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">rook-cephfs</span></span><br><span class="line"><span class="attr">provisioner:</span> <span class="string">rook-ceph.cephfs.csi.ceph.com</span></span><br><span class="line"><span class="attr">parameters:</span></span><br><span class="line">  <span class="attr">clusterID:</span> <span class="string">rook-ceph</span></span><br><span class="line">  <span class="attr">fsName:</span> <span class="string">cephfs</span></span><br><span class="line">  <span class="attr">pool:</span> <span class="string">cephfs-replicated</span></span><br><span class="line">  <span class="attr">csi.storage.k8s.io/provisioner-secret-name:</span> <span class="string">rook-csi-cephfs-provisioner</span></span><br><span class="line">  <span class="attr">csi.storage.k8s.io/provisioner-secret-namespace:</span> <span class="string">rook-ceph</span></span><br><span class="line">  <span class="attr">csi.storage.k8s.io/controller-expand-secret-name:</span> <span class="string">rook-csi-cephfs-provisioner</span></span><br><span class="line">  <span class="attr">csi.storage.k8s.io/controller-expand-secret-namespace:</span> <span class="string">rook-ceph</span></span><br><span class="line">  <span class="attr">csi.storage.k8s.io/node-stage-secret-name:</span> <span class="string">rook-csi-cephfs-node</span></span><br><span class="line">  <span class="attr">csi.storage.k8s.io/node-stage-secret-namespace:</span> <span class="string">rook-ceph</span></span><br><span class="line"><span class="attr">reclaimPolicy:</span> <span class="string">Delete</span></span><br><span class="line"><span class="attr">allowVolumeExpansion:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># apply</span></span><br><span class="line">kubectl apply -f storageclass-cephfs.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># check</span></span><br><span class="line">kubectl get sc</span><br></pre></td></tr></table></figure>

<h4 id="Set-Default-StorageClass"><a href="#Set-Default-StorageClass" class="headerlink" title="Set Default StorageClass"></a>Set Default StorageClass</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl patch sc rook-cephfs -p <span class="string">&#x27;&#123;&quot;metadata&quot;: &#123;&quot;annotations&quot;:&#123;&quot;storageclass.kubernetes.io/is-default-class&quot;:&quot;true&quot;&#125;&#125;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h4 id="Create-Test-PVC"><a href="#Create-Test-PVC" class="headerlink" title="Create Test PVC"></a>Create Test PVC</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: test-cephfs-pvc</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  accessModes:</span><br><span class="line">  - ReadWriteMany</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 1Gi</span><br><span class="line">  storageClassName: rook-cephfs</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f pvc-cephfs-test.yaml</span><br><span class="line">kubectl get pvc -A</span><br><span class="line">kubectl delete -f pvc-cephfs-test.yaml</span><br></pre></td></tr></table></figure>

<p>To expose the Ceph dashboard via an Ingress, you can apply one of the following methods based on your cluster configuration and requirements. Below are three typical options for exposing the dashboard</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">dashboard-external-https.yaml</span><br><span class="line">dashboard-ingress-https.yaml</span><br><span class="line">dashboard-loadbalancer.yaml</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Get the default password of the dashboard</span></span><br><span class="line">kubectl -n rook-ceph get secret rook-ceph-dashboard-password -o jsonpath=<span class="string">&quot;&#123;[&#x27;data&#x27;][&#x27;password&#x27;]&#125;&quot;</span>|<span class="built_in">base64</span> --decode &amp;&amp; <span class="built_in">echo</span></span><br></pre></td></tr></table></figure>

<h2 id="Join-the-ceph-cluster-when-adding-a-new-node"><a href="#Join-the-ceph-cluster-when-adding-a-new-node" class="headerlink" title="Join the ceph cluster when adding a new node"></a>Join the ceph cluster when adding a new node</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tag new node</span></span><br><span class="line">kubectl label node [node-name] role=rook-osd-node</span><br><span class="line"></span><br><span class="line"><span class="comment"># restart operator</span></span><br><span class="line">kubectl delete pod -n rook-ceph $(kubectl get pod -n rook-ceph | grep operator | awk <span class="string">&#x27;&#123;print$1&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CloudNative</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>Storage</tag>
        <tag>Ceph</tag>
      </tags>
  </entry>
  <entry>
    <title>Deploy Doris</title>
    <url>/en-us/deploy-doris/</url>
    <content><![CDATA[<div class="note red flat"><p>当前文档有中文版本：<a href="/deploy-doris/">点击这里切换到中文</a>.</p>
</div>

<h1 id="Foreword"><a href="#Foreword" class="headerlink" title="Foreword"></a>Foreword</h1><p>Apache Doris is an MPP-based real-time data warehouse known for its high query speed. For queries on large datasets, it returns results in sub-seconds. It supports both high-concurrent point queries and high-throughput complex analysis. It can be used for report analysis, ad-hoc queries, unified data warehouse, and data lake query acceleration. Based on Apache Doris, users can build applications for user behavior analysis, A&#x2F;B testing platform, log analysis, user profile analysis, and e-commerce order analysis.</p>
<h2 id="Server-Info"><a href="#Server-Info" class="headerlink" title="Server Info"></a>Server Info</h2><table>
<thead>
<tr>
<th><strong>Host</strong></th>
<th><strong>IP</strong></th>
<th><strong>OS</strong></th>
</tr>
</thead>
<tbody><tr>
<td>doris_fe</td>
<td>192.168.1.10</td>
<td>centos7</td>
</tr>
<tr>
<td>doris_be1</td>
<td>192.168.1.20</td>
<td>centos7</td>
</tr>
<tr>
<td>doris_be2</td>
<td>192.168.1.21</td>
<td>centos7</td>
</tr>
<tr>
<td>doris_be3</td>
<td>192.168.1.22</td>
<td>centos7</td>
</tr>
</tbody></table>
<hr>
<table>
<thead>
<tr>
<th><strong>Instance</strong></th>
<th><strong>Port</strong></th>
<th><strong>Default Port</strong></th>
<th><strong>Communication Direction</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody><tr>
<td>BE</td>
<td>be_port</td>
<td>9060</td>
<td>FE –&gt; BE</td>
<td>thrift server port on BE, receiving requests from FE</td>
</tr>
<tr>
<td>BE</td>
<td>webserver_port</td>
<td>8040</td>
<td>BE &lt;–&gt; BE</td>
<td>http server port on BE</td>
</tr>
<tr>
<td>BE</td>
<td>heartbeat_service_port</td>
<td>9050</td>
<td>FE –&gt; BE</td>
<td>heartbeat service port (thrift) on BE, receiving heartbeats from FE</td>
</tr>
<tr>
<td>BE</td>
<td>brpc_port</td>
<td>8060</td>
<td>FE &lt;–&gt; BE, BE &lt;–&gt; BE</td>
<td>brpc port on BE, used for communication between BEs</td>
</tr>
<tr>
<td>FE</td>
<td>http_port</td>
<td>8030</td>
<td>FE &lt;–&gt; FE, user &lt;–&gt; FE</td>
<td>http server port on FE</td>
</tr>
<tr>
<td>FE</td>
<td>rpc_port</td>
<td>9020</td>
<td>BE –&gt; FE, FE &lt;–&gt; FE</td>
<td>thrift server port on FE, configuration of each FE should be consistent</td>
</tr>
<tr>
<td>FE</td>
<td>query_port</td>
<td>9030</td>
<td>user &lt;–&gt; FE</td>
<td>MySQL server port on FE</td>
</tr>
<tr>
<td>FE</td>
<td>edit_log_port</td>
<td>9010</td>
<td>FE &lt;–&gt; FE</td>
<td>port on FE for bdbje communication</td>
</tr>
</tbody></table>
<h2 id="Prepare"><a href="#Prepare" class="headerlink" title="Prepare"></a>Prepare</h2><h3 id="Set-Max-Open-Files-on-all-servers"><a href="#Set-Max-Open-Files-on-all-servers" class="headerlink" title="Set Max Open Files (on all servers)"></a>Set Max Open Files (on all servers)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/security/limits.conf &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">* soft noproc 204800</span></span><br><span class="line"><span class="string">* hard noproc 204800</span></span><br><span class="line"><span class="string">* soft nofile 204800</span></span><br><span class="line"><span class="string">* hard nofile 204800</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> &gt; /etc/security/limits.d/20-nproc.conf </span><br><span class="line"></span><br><span class="line"><span class="built_in">ulimit</span> -n 204800</span><br><span class="line"><span class="built_in">ulimit</span> -u 204800</span><br></pre></td></tr></table></figure>

<h3 id="Modify-file-descriptors-on-all-servers"><a href="#Modify-file-descriptors-on-all-servers" class="headerlink" title="Modify file descriptors (on all servers)"></a>Modify file descriptors (on all servers)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> fs.file-max = 6553560  &gt;&gt; /etc/sysctl.d/doris.conf</span><br><span class="line">sysctl -p /etc/sysctl.d/doris.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># uncomment and modify system DefaultLimitNOFILE</span></span><br><span class="line">sed -i <span class="string">&#x27;s/^#DefaultLimitNOFILE=.*$/DefaultLimitNOFILE=204800/&#x27;</span> /etc/systemd/system.conf</span><br><span class="line"><span class="comment"># uncomment and modify system DefaultLimitNPROC</span></span><br><span class="line">sed -i <span class="string">&#x27;s/^#DefaultLimitNPROC=.*$/DefaultLimitNPROC=204800/&#x27;</span> /etc/systemd/system.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># uncomment and modify user DefaultLimitNOFILE</span></span><br><span class="line">sed -i <span class="string">&#x27;s/^#DefaultLimitNOFILE=.*$/DefaultLimitNOFILE=204800/&#x27;</span> /etc/systemd/user.conf</span><br><span class="line"><span class="comment"># uncomment and modify user DefaultLimitNPROC</span></span><br><span class="line">sed -i <span class="string">&#x27;s/^#DefaultLimitNPROC=.*$/DefaultLimitNPROC=204800/&#x27;</span> /etc/systemd/user.conf</span><br></pre></td></tr></table></figure>

<h3 id="Disable-Wwap-on-all-servers"><a href="#Disable-Wwap-on-all-servers" class="headerlink" title="Disable Wwap (on all servers)"></a>Disable Wwap (on all servers)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">swapoff -a</span><br><span class="line">sed -ri <span class="string">&#x27;s/.*swap.*/#&amp;/&#x27;</span> /etc/fstab</span><br></pre></td></tr></table></figure>

<h3 id="Install-Java-on-FE"><a href="#Install-Java-on-FE" class="headerlink" title="Install Java (on FE)"></a>Install Java (on FE)</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">openjdk</button><button type="button" class="tab">oracle jdk</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install java-1.8.0-openjdk java-1.8.0-openjdk-devel</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><p>You need to download the installation package from the oracle jdk official website and upload it to the server</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf jdk-8u321-linux-x64.tar.gz</span><br><span class="line"><span class="built_in">mv</span> jdk1.8.0_321 /usr/local/java8</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt;&gt; /etc/profile &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">#java env</span></span><br><span class="line"><span class="string">export JAVA_HOME=/usr/local/java8</span></span><br><span class="line"><span class="string">export JRE_HOME=\$JAVA_HOME/jre</span></span><br><span class="line"><span class="string">export CLASSPATH=.:\$JAVA_HOME/lib:\$JRE_HOME/lib</span></span><br><span class="line"><span class="string">export PATH=\$JAVA_HOME/bin:\$PATH</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>

<h3 id="Install-Mysql-Client-on-FE"><a href="#Install-Mysql-Client-on-FE" class="headerlink" title="Install Mysql Client (on FE)"></a>Install Mysql Client (on FE)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum remove mysql-libs -y</span><br><span class="line"></span><br><span class="line">wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-common-5.7.39-1.el7.x86_64.rpm</span><br><span class="line">wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-libs-5.7.39-1.el7.x86_64.rpm</span><br><span class="line">wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-client-5.7.39-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">rpm -ivh mysql-community-common-5.7.39-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-libs-5.7.39-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-client-5.7.39-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>

<h3 id="Install-ODBC-on-all-servers"><a href="#Install-ODBC-on-all-servers" class="headerlink" title="Install ODBC (on all servers)"></a>Install ODBC (on all servers)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install unixODBC -y</span><br><span class="line">wget https://dev.mysql.com/get/Downloads/Connector-ODBC/8.0/mysql-connector-odbc-8.0.30-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-connector-odbc-8.0.30-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check</span></span><br><span class="line"><span class="built_in">ls</span> /usr/lib64/libmyodbc8w.so</span><br></pre></td></tr></table></figure>

<h3 id="Edit-Hosts-on-FE"><a href="#Edit-Hosts-on-FE" class="headerlink" title="Edit Hosts (on FE)"></a>Edit Hosts (on FE)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">192.168.1.10 doris.example.com</span><br></pre></td></tr></table></figure>

<h1 id="Deploy-Doris"><a href="#Deploy-Doris" class="headerlink" title="Deploy Doris"></a>Deploy Doris</h1><h2 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -pv /data/doris</span><br><span class="line"><span class="built_in">mkdir</span> -pv /data/logs/doris</span><br><span class="line"></span><br><span class="line"><span class="comment">#fe</span></span><br><span class="line">wget https://dist.apache.org/repos/dist/release/doris/1.1/1.1.2-rc05/apache-doris-fe-1.1.2-bin.tar.gz</span><br><span class="line">tar -zxvf apache-doris-fe-1.1.2-bin.tar.gz</span><br><span class="line"><span class="built_in">cd</span> apache-doris-fe-1.1.2-bin</span><br><span class="line"><span class="built_in">cp</span> -a fe /data/doris/fe</span><br><span class="line"></span><br><span class="line"><span class="comment">#be</span></span><br><span class="line">wget https://dist.apache.org/repos/dist/release/doris/1.1/1.1.2-rc05/apache-doris-be-1.1.2-bin-x86_64.tar.gz</span><br><span class="line">tar -zxvf apache-doris-be-1.1.2-bin-x86_64.tar.gz</span><br><span class="line"><span class="built_in">cd</span> apache-doris-be-1.1.2-bin-x86_64</span><br><span class="line"><span class="built_in">cp</span> -a be /data/doris/be</span><br></pre></td></tr></table></figure>

<h2 id="Edit-Start-Scripts"><a href="#Edit-Start-Scripts" class="headerlink" title="Edit Start Scripts"></a>Edit Start Scripts</h2><p>Find the following part of the script (FE)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;RUN_DAEMON&#125;</span> -eq 1 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">nohup</span> <span class="variable">$LIMIT</span> <span class="variable">$JAVA</span> <span class="variable">$final_java_opt</span> -XX:OnOutOfMemoryError=<span class="string">&quot;kill -9 %p&quot;</span> org.apache.doris.PaloFe <span class="variable">$&#123;HELPER&#125;</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span> &gt;&gt; <span class="variable">$LOG_DIR</span>/fe.out 2&gt;&amp;1 &lt; /dev/null &amp;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">export</span> DORIS_LOG_TO_STDERR=1</span><br><span class="line">    <span class="variable">$LIMIT</span> <span class="variable">$JAVA</span> <span class="variable">$final_java_opt</span> -XX:OnOutOfMemoryError=<span class="string">&quot;kill -9 %p&quot;</span> org.apache.doris.PaloFe <span class="variable">$&#123;HELPER&#125;</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span> &lt; /dev/null</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>Remove the final <code>&amp;</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;RUN_DAEMON&#125;</span> -eq 1 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">nohup</span> <span class="variable">$LIMIT</span> <span class="variable">$JAVA</span> <span class="variable">$final_java_opt</span> -XX:OnOutOfMemoryError=<span class="string">&quot;kill -9 %p&quot;</span> org.apache.doris.PaloFe <span class="variable">$&#123;HELPER&#125;</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span> &gt;&gt; <span class="variable">$LOG_DIR</span>/fe.out 2&gt;&amp;1 &lt; /dev/null</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">export</span> DORIS_LOG_TO_STDERR=1</span><br><span class="line">    <span class="variable">$LIMIT</span> <span class="variable">$JAVA</span> <span class="variable">$final_java_opt</span> -XX:OnOutOfMemoryError=<span class="string">&quot;kill -9 %p&quot;</span> org.apache.doris.PaloFe <span class="variable">$&#123;HELPER&#125;</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span> &lt; /dev/null</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>Find the following part of the script (BE)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;RUN_DAEMON&#125;</span> -eq 1 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">nohup</span> <span class="variable">$LIMIT</span> <span class="variable">$&#123;DORIS_HOME&#125;</span>/lib/doris_be <span class="string">&quot;<span class="variable">$@</span>&quot;</span> &gt;&gt; <span class="variable">$LOG_DIR</span>/be.out 2&gt;&amp;1 &lt; /dev/null &amp;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">export</span> DORIS_LOG_TO_STDERR=1</span><br><span class="line">    <span class="variable">$LIMIT</span> <span class="variable">$&#123;DORIS_HOME&#125;</span>/lib/doris_be <span class="string">&quot;<span class="variable">$@</span>&quot;</span> 2&gt;&amp;1 &lt; /dev/null</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>Remove the final <code>&amp;</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;RUN_DAEMON&#125;</span> -eq 1 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">nohup</span> <span class="variable">$LIMIT</span> <span class="variable">$&#123;DORIS_HOME&#125;</span>/lib/doris_be <span class="string">&quot;<span class="variable">$@</span>&quot;</span> &gt;&gt; <span class="variable">$LOG_DIR</span>/be.out 2&gt;&amp;1 &lt; /dev/null</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">export</span> DORIS_LOG_TO_STDERR=1</span><br><span class="line">    <span class="variable">$LIMIT</span> <span class="variable">$&#123;DORIS_HOME&#125;</span>/lib/doris_be <span class="string">&quot;<span class="variable">$@</span>&quot;</span> 2&gt;&amp;1 &lt; /dev/null</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<h2 id="Install-Supervisor"><a href="#Install-Supervisor" class="headerlink" title="Install Supervisor"></a>Install Supervisor</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install supervisor</span><br><span class="line"></span><br><span class="line">systemctl start supervisord</span><br><span class="line">systemctl status supervisord</span><br><span class="line">systemctl <span class="built_in">enable</span> supervisord</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check if Supervisor&#x27;s file descriptors do not meet Doris&#x27; requirements.</span></span><br><span class="line"><span class="built_in">cat</span> /proc/$(ps -aux | grep supervisor | grep -v grep | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)/limits</span><br></pre></td></tr></table></figure>

<h2 id="Modify-Service-File"><a href="#Modify-Service-File" class="headerlink" title="Modify Service File"></a>Modify Service File</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /usr/lib/systemd/system/supervisord.service</span><br></pre></td></tr></table></figure>

<p>Add the following configuration under the <code>[Service]</code> section.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">LimitCORE=infinity</span><br><span class="line">LimitNOFILE=204800</span><br><span class="line">LimitNPROC=204800</span><br></pre></td></tr></table></figure>

<p>Like:</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=Process Monitoring and Control Daemon</span><br><span class="line"><span class="attr">After</span>=rc-local.service nss-user-lookup.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">LimitCORE</span>=infinity</span><br><span class="line"><span class="attr">LimitNOFILE</span>=<span class="number">204800</span></span><br><span class="line"><span class="attr">LimitNPROC</span>=<span class="number">204800</span></span><br><span class="line"><span class="attr">Type</span>=forking</span><br><span class="line"><span class="attr">ExecStart</span>=/usr/bin/supervisord -c /etc/supervisord.conf</span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure>

<p>Restart supervisor and check</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart supervisord</span><br><span class="line">systemctl status supervisord</span><br><span class="line"><span class="built_in">cat</span> /proc/$(ps -aux | grep supervisor | grep -v grep | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)/limits</span><br></pre></td></tr></table></figure>

<h2 id="Edit-Doris-Config"><a href="#Edit-Doris-Config" class="headerlink" title="Edit Doris Config"></a>Edit Doris Config</h2><h3 id="FE"><a href="#FE" class="headerlink" title="FE"></a>FE</h3><p>Configure the IP CIDR based on the network interface IP.</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">priority_networks</span> = <span class="string">192.168.1.0/24</span></span><br></pre></td></tr></table></figure>

<h3 id="BE"><a href="#BE" class="headerlink" title="BE"></a>BE</h3><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">storage_root_path</span> = <span class="string">$&#123;DORIS_HOME&#125;/storage</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># Whether to log stream load</span></span><br><span class="line"><span class="attr">enable_stream_load_record</span>=<span class="string">true</span></span><br><span class="line"><span class="comment"># Whether to disable using page cache for index caching</span></span><br><span class="line"><span class="attr">disable_storage_page_cache</span>=<span class="string">true</span></span><br><span class="line"><span class="comment"># Interval for file handle cache cleanup</span></span><br><span class="line"><span class="attr">cache_clean_interval</span>=<span class="string">180</span></span><br><span class="line"><span class="comment"># Memory limit for all import threads on a single node</span></span><br><span class="line"><span class="attr">load_process_max_memory_limit_bytes</span>=<span class="string">5368709120</span></span><br><span class="line"><span class="comment"># Stream load request limit</span></span><br><span class="line"><span class="attr">max_running_txn_num_per_db</span>=<span class="string">10000</span></span><br></pre></td></tr></table></figure>

<h3 id="Doris-Supervisor-Config"><a href="#Doris-Supervisor-Config" class="headerlink" title="Doris Supervisor Config"></a>Doris Supervisor Config</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/supervisord.d/DorisFE.ini &lt;&lt;<span class="string">&quot;EOF&quot;</span></span><br><span class="line">[program:DorisFE]</span><br><span class="line">process_name=DorisFE</span><br><span class="line">directory=/data/doris/fe</span><br><span class="line"><span class="built_in">command</span>=sh /data/doris/fe/bin/start_fe.sh</span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">autorestart=<span class="literal">true</span></span><br><span class="line">user=root</span><br><span class="line">numprocs=1</span><br><span class="line">startretries=3</span><br><span class="line"><span class="comment"># Whether to stop subprocesses (must be set)</span></span><br><span class="line">stopasgroup=<span class="literal">true</span></span><br><span class="line"><span class="comment"># Whether to kill subprocesses (must be set)</span></span><br><span class="line">killasgroup=<span class="literal">true</span></span><br><span class="line">startsecs=5</span><br><span class="line">redirect_stderr = <span class="literal">true</span></span><br><span class="line">stdout_logfile_maxbytes = 20MB</span><br><span class="line">stdout_logfile_backups = 10</span><br><span class="line">stdout_logfile=/data/logs/doris/DorisFE.<span class="built_in">log</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/supervisord.d/DorisBE.ini &lt;&lt;<span class="string">&quot;EOF&quot;</span></span><br><span class="line">[program:DorisBE]</span><br><span class="line">process_name=DorisBE</span><br><span class="line">directory=/data/doris/be</span><br><span class="line"><span class="built_in">command</span>=sh /data/doris/be/bin/start_be.sh</span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">autorestart=<span class="literal">true</span></span><br><span class="line">user=root</span><br><span class="line">numprocs=1</span><br><span class="line">startretries=3</span><br><span class="line"><span class="comment"># Whether to stop subprocesses (must be set)</span></span><br><span class="line">stopasgroup=<span class="literal">true</span></span><br><span class="line"><span class="comment"># Whether to kill subprocesses (must be set)</span></span><br><span class="line">killasgroup=<span class="literal">true</span></span><br><span class="line">startsecs=5</span><br><span class="line">redirect_stderr = <span class="literal">true</span></span><br><span class="line">stdout_logfile_maxbytes = 20MB</span><br><span class="line">stdout_logfile_backups = 10</span><br><span class="line">stdout_logfile=/data/logs/doris/DorisBE.<span class="built_in">log</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<h2 id="Start-Doris-Cluster"><a href="#Start-Doris-Cluster" class="headerlink" title="Start Doris Cluster"></a>Start Doris Cluster</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">supervisorctl reread</span><br><span class="line">supervisorctl update</span><br><span class="line">supervisorctl start all</span><br><span class="line">supervisorctl status</span><br></pre></td></tr></table></figure>

<h1 id="Configure-Doris-Cluster"><a href="#Configure-Doris-Cluster" class="headerlink" title="Configure Doris Cluster"></a>Configure Doris Cluster</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -hdorisdb.example.com -uroot -P9030</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- ADD BE</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">ADD</span> BACKEND &quot;192.168.1.20:9050&quot;;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">ADD</span> BACKEND &quot;192.168.1.21:9050&quot;;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">ADD</span> BACKEND &quot;192.168.1.22:9050&quot;;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- edit default password</span></span><br><span class="line"><span class="keyword">SET</span> PASSWORD <span class="keyword">FOR</span> <span class="string">&#x27;username&#x27;</span> <span class="operator">=</span> PASSWORD(<span class="string">&#x27;password&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p>After the installation is complete, if Doris needs to be accessed from the public internet, the DNS should be resolved to the internal IP address of the Doris <strong>FE</strong>. If the DNS resolves to the public IP address of the <strong>FE</strong>, it will not be accessible.</p>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>Database</tag>
        <tag>Doris</tag>
      </tags>
  </entry>
  <entry>
    <title>Install oh-my-zsh</title>
    <url>/en-us/install-oh-my-zsh/</url>
    <content><![CDATA[<div class="note red flat"><p>当前文档有中文版本：<a href="/install-oh-my-zsh/">点击这里切换到中文</a>.</p>
</div>

<h1 id="Foreword"><a href="#Foreword" class="headerlink" title="Foreword"></a>Foreword</h1><p>Commonly used shell interpreters are <code>sh</code> and <code>bash</code>, but there are, of course, others such as <code>ksh</code>, <code>csh</code>, and <code>zsh</code>.</p>
<p>The tool we are about to install, <strong>Oh My Zsh</strong>, is an extension based on <code>zsh</code>. Similarly, there is <strong>Oh My Posh</strong> for Windows, both of which are extension toolkits for the original command line. They provide many rich features and offer various command-line styles, making our terminal more visually appealing.</p>
<p>GitHub：<a href="https://github.com/ohmyzsh/ohmyzsh">oh my zsh</a></p>
<h1 id="Prepare"><a href="#Prepare" class="headerlink" title="Prepare"></a>Prepare</h1><p>Before installing Oh My Zsh, we need to install zsh and set it as our default shell.</p>
<div class="note blue flat"><p>PS: In some Linux distributions (such as Kali) and macOS, zsh is the default shell interpreter, so no additional setup is required in those cases.</p>
</div>

<h2 id="Install-zsh"><a href="#Install-zsh" class="headerlink" title="Install zsh"></a>Install zsh</h2><p>View all available shell interpreters and the current shell interpreter.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/shells</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$SHELL</span></span><br></pre></td></tr></table></figure>

<div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">ubuntu & debian</button><button type="button" class="tab">centos & redhat & fedora</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install zsh -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># switch shell to zsh</span></span><br><span class="line">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install zsh -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># switch shell to zsh</span></span><br><span class="line">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>

<h2 id="install-oh-my-zsh"><a href="#install-oh-my-zsh" class="headerlink" title="install oh my zsh"></a>install oh my zsh</h2><p>There are several ways to install Oh My Zsh. Typically, you can use the installation script provided by the official source or manually clone the repository and configure it yourself. Regardless of the method, the git command is required. If you don’t have git installed, you’ll need to install it.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="Edit-zshrc"><a href="#Edit-zshrc" class="headerlink" title="Edit .zshrc"></a>Edit <code>.zshrc</code></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; ~/.zshrc &lt;&lt;<span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="built_in">export</span> ZSH=<span class="string">&quot;<span class="variable">$HOME</span>/.oh-my-zsh&quot;</span></span><br><span class="line"><span class="built_in">export</span> TERM=xterm-256color</span><br><span class="line"></span><br><span class="line"><span class="comment"># My preferred command line style can be customized according to the official documentation.</span></span><br><span class="line">ZSH_THEME=<span class="string">&quot;dallas&quot;</span></span><br><span class="line"></span><br><span class="line">plugins=(</span><br><span class="line">  git <span class="comment"># git plugin, provides many shortened git commands, available for viewing in the official documentation</span></span><br><span class="line">  sudo <span class="comment"># sudo plugin, double-tap the Esc key to automatically add sudo to the beginning of a command</span></span><br><span class="line">  docker <span class="comment"># docker plugin, provides excellent command suggestions for docker</span></span><br><span class="line">  kubectl <span class="comment"># kubectl plugin, provides excellent command suggestions for kubectl</span></span><br><span class="line">  themes <span class="comment"># theme plugin, allows you to change the current command line style by typing &#x27;theme&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> <span class="variable">$ZSH</span>/oh-my-zsh.sh</span><br><span class="line"><span class="built_in">setopt</span> no_nomatch</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>

<p>After executing the above commands, you’ll notice that the current command line is using Oh My Zsh. You can also configure the <code>~/.zshrc</code> file to set up more plugins, and you can download non-official plugins into the <code>~/.oh-my-zsh/custom/plugins</code> directory for use.</p>
<h2 id="Install-Plugins"><a href="#Install-Plugins" class="headerlink" title="Install Plugins"></a>Install Plugins</h2><p>Two recommended plugins are:</p>
<ul>
<li>zsh-syntax-highlighting: Provides syntax highlighting for commands.</li>
<li>zsh-autosuggestions: Suggests previously typed commands based on history.</li>
</ul>
<p>Here’s how to install these two plugins:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure>

<p>Edit the ~&#x2F;.zshrc file to activate these</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">plugins=(</span><br><span class="line">  git</span><br><span class="line">  sudo</span><br><span class="line">  docker</span><br><span class="line">  kubectl</span><br><span class="line">  themes</span><br><span class="line">  zsh-autosuggestions</span><br><span class="line">  zsh-syntax-highlighting</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>At this point, the installation is complete. You can try out the new command line now.</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Shell</tag>
      </tags>
  </entry>
  <entry>
    <title>kind</title>
    <url>/en-us/kind/</url>
    <content><![CDATA[<div class="note red flat"><p>Sorry, the current document does not have an English version. Click to switch to <a href="/kind/">Chinese</a>.</p>
</div>

<p>前提条件 : 需要安装 kind 和 kubectl 以及 docker 环境</p>
<h1 id="安装-Kind"><a href="#安装-Kind" class="headerlink" title="安装 Kind"></a>安装 Kind</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 Kind</span></span><br><span class="line">curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.17.0/kind-linux-amd64</span><br><span class="line"><span class="built_in">chmod</span> +x ./kind</span><br><span class="line"><span class="built_in">mv</span> ./kind /usr/local/bin/kind</span><br><span class="line"></span><br><span class="line">apt update &amp;&amp; apt install -y apt-transport-https</span><br><span class="line">curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add - </span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt;/etc/apt/sources.list.d/kubernetes.list</span></span><br><span class="line"><span class="string">deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">apt update</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看版本</span></span><br><span class="line">apt policy kubectl</span><br><span class="line"><span class="comment">#版本取决于kind创建的集群版本，可以先创建后安装</span></span><br><span class="line">apt install kubectl=1.25.3-00</span><br></pre></td></tr></table></figure>

<h1 id="使用配置文件启动-Kind-集群"><a href="#使用配置文件启动-Kind-集群" class="headerlink" title="使用配置文件启动 Kind 集群"></a>使用配置文件启动 Kind 集群</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Cluster</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kind.x-k8s.io/v1alpha4</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">kind</span></span><br><span class="line"><span class="attr">nodes:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">role:</span> <span class="string">control-plane</span></span><br><span class="line">  <span class="attr">extraPortMappings:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">30443</span></span><br><span class="line">    <span class="attr">hostPort:</span> <span class="number">443</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">30080</span></span><br><span class="line">    <span class="attr">hostPort:</span> <span class="number">80</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">role:</span> <span class="string">worker</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">role:</span> <span class="string">worker</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">role:</span> <span class="string">worker</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kind create cluster --config=kind.yaml</span><br></pre></td></tr></table></figure>

<div class="note blue flat"><p>这段配置为给 ingress-nginx 预留的端口转发配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">extraPortMappings:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">30443</span></span><br><span class="line">  <span class="attr">hostPort:</span> <span class="number">443</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">30080</span></span><br><span class="line">  <span class="attr">hostPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>
</div>
]]></content>
      <categories>
        <category>CloudNative</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>DevOps</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Flink Kubernetes Operator</title>
    <url>/en-us/flink-operator/</url>
    <content><![CDATA[<div class="note red flat"><p>Sorry, the current document does not have an English version. Click to switch to <a href="/flink-operator/">Chinese</a>.</p>
</div>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Flink Kubernetes Operator 扩展了 Kubernetes API，能够管理和操作 Flink 部署，该 Operator 具有以下特点：</p>
<ul>
<li>部署和监控 Flink Application 和 Session 的 Kubernetes Deployment</li>
<li>升级、暂停和删除 Kubernetes Deployment</li>
<li>完整的日志记录和指标集成</li>
<li>灵活的部署以及与 Kubernetes 工具的本机集成</li>
</ul>


<h1 id="部署-flink-operator"><a href="#部署-flink-operator" class="headerlink" title="部署 flink operator"></a>部署 flink operator</h1><h2 id="安装-cert-manager"><a href="#安装-cert-manager" class="headerlink" title="安装 cert-manager"></a>安装 cert-manager</h2><p>在安装 flink operator 之前，需要在 Kubernetes 集群中安装 cert-manager，如果集群之前已经安装过 cert-manager，则无需安装</p>
<div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">通过 manifests 安装</button><button type="button" class="tab">通过 helm 安装</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.3/cert-manager.yaml</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm repo add jetstack https://charts.jetstack.io</span><br><span class="line">helm repo update</span><br><span class="line">kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.3/cert-manager.crds.yaml</span><br><span class="line">helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version v1.13.3</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>

<p>使用命令查看</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get all -n cert-manager</span><br><span class="line"></span><br><span class="line">NAME                                          READY   STATUS      RESTARTS   AGE</span><br><span class="line">pod/cert-manager-57688f5dc6-gqjj6             1/1     Running     0          10m</span><br><span class="line">pod/cert-manager-cainjector-d7f8b5464-h9gt9   1/1     Running     0          10m</span><br><span class="line">pod/cert-manager-startupapicheck-hcth4        0/1     Completed   0          10m</span><br><span class="line">pod/cert-manager-webhook-58fd67545d-knq2q     1/1     Running     0          10m</span><br><span class="line"></span><br><span class="line">NAME                           TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">service/cert-manager           ClusterIP   10.110.70.247   &lt;none&gt;        9402/TCP   10m</span><br><span class="line">service/cert-manager-webhook   ClusterIP   10.104.112.12   &lt;none&gt;        443/TCP    10m</span><br><span class="line"></span><br><span class="line">NAME                                      READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">deployment.apps/cert-manager              1/1     1            1           10m</span><br><span class="line">deployment.apps/cert-manager-cainjector   1/1     1            1           10m</span><br><span class="line">deployment.apps/cert-manager-webhook      1/1     1            1           10m</span><br><span class="line"></span><br><span class="line">NAME                                                DESIRED   CURRENT   READY   AGE</span><br><span class="line">replicaset.apps/cert-manager-57688f5dc6             1         1         1       10m</span><br><span class="line">replicaset.apps/cert-manager-cainjector-d7f8b5464   1         1         1       10m</span><br><span class="line">replicaset.apps/cert-manager-webhook-58fd67545d     1         1         1       10m</span><br><span class="line"></span><br><span class="line">NAME                                     COMPLETIONS   DURATION   AGE</span><br><span class="line">job.batch/cert-manager-startupapicheck   1/1           7m57s      10m</span><br></pre></td></tr></table></figure>

<h2 id="安装-flink-operator"><a href="#安装-flink-operator" class="headerlink" title="安装 flink-operator"></a>安装 flink-operator</h2><p>flink operator 可以直接通过 helm 安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># &lt;OPERATOR-VERSION&gt; 为版本号，可以在 https://flink.apache.org/downloads/ 查看选择对应的 operator 版本</span></span><br><span class="line">helm repo add flink-operator-repo https://downloads.apache.org/flink/flink-kubernetes-operator-&lt;OPERATOR-VERSION&gt;/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里安装 1.7.0 版本</span></span><br><span class="line">helm repo add flink-operator-repo https://downloads.apache.org/flink/flink-kubernetes-operator-1.7.0/</span><br><span class="line">helm install flink-kubernetes-operator flink-operator-repo/flink-kubernetes-operator --namespace flink --create-namespace</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看</span></span><br><span class="line">kubectl get all -n flink</span><br><span class="line"></span><br><span class="line">NAME                                             READY   STATUS    RESTARTS   AGE</span><br><span class="line">pod/flink-kubernetes-operator-7bdcc785dd-rkvkw   2/2     Running   0          3m57s</span><br><span class="line"></span><br><span class="line">NAME                                     TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)   AGE</span><br><span class="line">service/flink-operator-webhook-service   ClusterIP   10.100.207.157   &lt;none&gt;        443/TCP   3m57s</span><br><span class="line"></span><br><span class="line">NAME                                        READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">deployment.apps/flink-kubernetes-operator   1/1     1            1           3m57s</span><br><span class="line"></span><br><span class="line">NAME                                                   DESIRED   CURRENT   READY   AGE</span><br><span class="line">replicaset.apps/flink-kubernetes-operator-7bdcc785dd   1         1         1       3m57s</span><br></pre></td></tr></table></figure>

<p>至此，flink operator 已经成功安装完毕</p>
<h1 id="使用-flink-operator-部署-flink-job"><a href="#使用-flink-operator-部署-flink-job" class="headerlink" title="使用 flink operator 部署 flink job"></a>使用 flink operator 部署 flink job</h1><p>在 flink operator 中，官方提供了 FlinkDeployment 和 FlinkSessionJobs 两种 CRD，可以部署基于 Application 模式或基于 Session 模式部署的 flink job<br>可以访问 <a href="https://github.com/apache/flink-kubernetes-operator/tree/main/examples">https://github.com/apache/flink-kubernetes-operator/tree/main/examples</a> 查看相关的示例</p>
<p>以下是两种不同模式部署的解析：</p>
<ul>
<li>基于 Application 模式的部署</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">flink.apache.org/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">FlinkDeployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">flink</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-flink</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">flink:1.17</span></span><br><span class="line">  <span class="attr">flinkVersion:</span> <span class="string">v1_17</span></span><br><span class="line">  <span class="comment"># 这部分用于配置当前 flink job 的相关配置</span></span><br><span class="line">  <span class="attr">flinkConfiguration:</span></span><br><span class="line">    <span class="comment"># 配置 flink 的 slot 数量，影响 flink 并行度，</span></span><br><span class="line">    <span class="comment"># 当 slot 数量与 job.parallelism 数量一致时，只会启动单个 taskmanager</span></span><br><span class="line">    <span class="comment"># 当 slot 数量为 job.parallelism 整数倍时，会启动对应数量的 taskmanager</span></span><br><span class="line">    <span class="attr">taskmanager.numberOfTaskSlots:</span> <span class="string">&quot;2&quot;</span></span><br><span class="line">    <span class="comment"># 配置 flink job 的最大内存分配</span></span><br><span class="line">    <span class="attr">taskmanager.memory.process.size:</span> <span class="string">&quot;6 gb&quot;</span></span><br><span class="line">    <span class="attr">taskmanager.memory.managed.fraction:</span> <span class="string">&quot;0.1&quot;</span></span><br><span class="line">    <span class="comment"># 配置 savepoints 和 checkpoints 保存位置，注意这个地方配置的位置为持久化检查点 pvc 挂载的地方</span></span><br><span class="line">    <span class="comment"># 按照当前配置为挂载到 /flinkdata，也可以自行选择挂载位置，记得对应</span></span><br><span class="line">    <span class="attr">state.savepoints.dir:</span> <span class="string">file:///flinkdata/savepoints</span></span><br><span class="line">    <span class="attr">state.checkpoints.dir:</span> <span class="string">file:///flinkdata/checkpoints</span></span><br><span class="line">    <span class="attr">high-availability:</span> <span class="string">org.apache.flink.kubernetes.highavailability.KubernetesHaServicesFactory</span></span><br><span class="line">    <span class="attr">high-availability.storageDir:</span> <span class="string">file:///flinkdata/ha</span></span><br><span class="line">    <span class="attr">execution.checkpointing.interval:</span> <span class="number">5</span> <span class="string">s</span></span><br><span class="line">    <span class="attr">execution.checkpointing.timeout:</span> <span class="number">10</span> <span class="string">min</span></span><br><span class="line">    <span class="attr">execution.checkpointing.externalized-checkpoint-retention:</span> <span class="string">RETAIN_ON_CANCELLATION</span></span><br><span class="line">    <span class="attr">execution.checkpointing.tolerable-failed-checkpoints:</span> <span class="string">&quot;2&quot;</span></span><br><span class="line">    <span class="attr">restart-strategy:</span> <span class="string">fixed-delay</span></span><br><span class="line">    <span class="attr">restart-strategy.fixed-delay.attempts:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line">    <span class="attr">restart-strategy.fixed-delay.delay:</span> <span class="number">10</span> <span class="string">s</span></span><br><span class="line">    <span class="comment"># 开启指标导出</span></span><br><span class="line">    <span class="attr">metrics.reporter.prom.class:</span> <span class="string">org.apache.flink.metrics.prometheus.PrometheusReporter</span></span><br><span class="line">  <span class="comment"># 这部分是 flink 的日志配置，可以根据自己的需要修改</span></span><br><span class="line">  <span class="attr">logConfiguration:</span></span><br><span class="line">    <span class="string">....</span></span><br><span class="line">  <span class="attr">serviceAccount:</span> <span class="string">flink</span></span><br><span class="line">  <span class="comment"># 该部分是 flink 主容器的模板配置，jobmanager 和 taskmanager 都会使用该模板，也就是说在此模板的相关配置会同步</span></span><br><span class="line">  <span class="attr">podTemplate:</span></span><br><span class="line">    <span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">pod-template</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="comment"># 设置安全上下文使用 uid 9999</span></span><br><span class="line">      <span class="attr">securityContext:</span></span><br><span class="line">        <span class="attr">runAsUser:</span> <span class="number">9999</span></span><br><span class="line">        <span class="attr">runAsGroup:</span> <span class="number">9999</span></span><br><span class="line">        <span class="attr">fsGroup:</span> <span class="number">9999</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flink-main-container</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">          <span class="comment"># flink 检查点的持久化 pvc 需要挂载到 /flinkdata 下</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/flinkdata</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">test-flink-flinkdata</span></span><br><span class="line">          <span class="comment"># 需要让 /opt/flink/downloads 文件夹在 init容器、jobmanager 和 taskmanager 中共通，用于放置运行的 jar 包</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/opt/flink/downloads</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">downloads</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="comment"># 这里是相关卷的配置，对应到前面使用的挂载</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">test-flink-flinkdata</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">test-flink-flinkdata</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">downloads</span></span><br><span class="line">          <span class="attr">emptyDir:</span> &#123;&#125;</span><br><span class="line">  <span class="attr">jobManager:</span></span><br><span class="line">    <span class="attr">resource:</span></span><br><span class="line">      <span class="attr">memory:</span> <span class="string">&quot;2048m&quot;</span></span><br><span class="line">    <span class="attr">podTemplate:</span></span><br><span class="line">      <span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line">      <span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line">      <span class="attr">metadata:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">task-manager-pod-template</span></span><br><span class="line">      <span class="attr">spec:</span></span><br><span class="line">        <span class="comment"># 在使用 FlinkDeployment 直接运行 job 时，无法直接从远程依赖仓库拉取 flink job 的 jar 包，需要使用 wget 在容器运行前下载对应的 flink jar 包</span></span><br><span class="line">        <span class="attr">initContainers:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">wget</span></span><br><span class="line">            <span class="attr">image:</span> <span class="string">netdata/wget</span></span><br><span class="line">            <span class="attr">volumeMounts:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/opt/flink/downloads</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">downloads</span></span><br><span class="line">            <span class="attr">command:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/bin/sh</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&quot;wget -O /opt/flink/downloads/test.jar https://xxxx.com/test.jar&quot;</span></span><br><span class="line">  <span class="attr">taskManager:</span></span><br><span class="line">    <span class="attr">resource:</span></span><br><span class="line">      <span class="comment"># 和 taskmanager.memory.process.size 一致</span></span><br><span class="line">      <span class="attr">memory:</span> <span class="string">&quot;6gb&quot;</span></span><br><span class="line">  <span class="attr">job:</span></span><br><span class="line">    <span class="comment"># 这里的地址必须要和 wget -O 下载的位置一致</span></span><br><span class="line">    <span class="attr">jarURI:</span> <span class="string">local:///opt/flink/downloads/test.jar</span></span><br><span class="line">    <span class="comment"># 配置 flink job 的并行度</span></span><br><span class="line">    <span class="comment"># 当 slot 数量与 job.parallelism 数量一致时，只会启动单个 taskmanager</span></span><br><span class="line">    <span class="comment"># 当 slot 数量为 job.parallelism 整数倍时，会启动对应数量的 taskmanager</span></span><br><span class="line">    <span class="attr">parallelism:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">upgradeMode:</span> <span class="string">last-state</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">running</span></span><br></pre></td></tr></table></figure>

<ul>
<li>基于 Session 模式的部署</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化一个 FlinkDeployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">flink.apache.org/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">FlinkDeployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-flink</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">flink:1.17</span></span><br><span class="line">  <span class="attr">flinkVersion:</span> <span class="string">v1_17</span></span><br><span class="line">  <span class="attr">jobManager:</span></span><br><span class="line">    <span class="attr">resource:</span></span><br><span class="line">      <span class="attr">memory:</span> <span class="string">&quot;2048m&quot;</span></span><br><span class="line">  <span class="attr">taskManager:</span></span><br><span class="line">    <span class="attr">resource:</span></span><br><span class="line">      <span class="attr">memory:</span> <span class="string">&quot;2048m&quot;</span></span><br><span class="line">  <span class="attr">serviceAccount:</span> <span class="string">flink</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># 配置 FlinkSessionJob 提交到对应的 FlinkDeployment 运行</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">flink.apache.org/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">FlinkSessionJob</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-job1</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">deploymentName:</span> <span class="string">test-flink</span></span><br><span class="line">  <span class="attr">job:</span></span><br><span class="line">    <span class="attr">jarURI:</span> <span class="string">https://repo1.maven.org/maven2/org/apache/flink/flink-examples-streaming_2.12/1.16.1/flink-examples-streaming_2.12-1.16.1-TopSpeedWindowing.jar</span></span><br><span class="line">    <span class="attr">parallelism:</span> <span class="number">4</span></span><br><span class="line">    <span class="attr">upgradeMode:</span> <span class="string">stateless</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">flink.apache.org/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">FlinkSessionJob</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-job2</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">deploymentName:</span> <span class="string">test-flink</span></span><br><span class="line">  <span class="attr">job:</span></span><br><span class="line">    <span class="attr">jarURI:</span> <span class="string">https://repo1.maven.org/maven2/org/apache/flink/flink-examples-streaming_2.12/1.16.1/flink-examples-streaming_2.12-1.16.1.jar</span></span><br><span class="line">    <span class="attr">parallelism:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">upgradeMode:</span> <span class="string">stateless</span></span><br><span class="line">    <span class="attr">entryClass:</span> <span class="string">org.apache.flink.streaming.examples.statemachine.StateMachineExample</span></span><br></pre></td></tr></table></figure>

<h1 id="Application-模式和-Session-模式的区别"><a href="#Application-模式和-Session-模式的区别" class="headerlink" title="Application 模式和 Session 模式的区别"></a>Application 模式和 Session 模式的区别</h1><p>Application 模式和 Session 模式的主要区别为是否需要实现高可用（High Availability，HA）</p>
<p>在使用 Application 模式时，每个 flink job 都会独占一个独立的 flink 集群，这个集群只运行这一个 flink 作业，并且可以通过持久化配置的方式，实现 HA<br>而 Session 模式为启动一个共享的 flink 集群，这个集群可以运行多个提交的 flink job，这样的好处是，无需每次都启动新的 flink 集群用于运行作业，但是并不能依靠 Operator 的方式来实现 HA，但是可以通过持久化相关数据来侧面实现</p>
<p>关于 Flink 的 HA 可以参考：<a href="https://nightlies.apache.org/flink/flink-docs-master/docs/deployment/ha/overview/">https://nightlies.apache.org/flink/flink-docs-master/docs/deployment/ha/overview/</a></p>
<h1 id="访问-flink-集群"><a href="#访问-flink-集群" class="headerlink" title="访问 flink 集群"></a>访问 flink 集群</h1><p>在 FlinkDeployment 启动后，会创建一个 xxx-rest 的 service 到 Kubernetes 集群内，其中 xxx 为 FlinkDeployment 的名称<br>可以通过配置 NodePort 或者 Ingress 的方式将该服务代理到集群外部以供访问</p>
<h1 id="导出-flink-集群指标到-Prometheus"><a href="#导出-flink-集群指标到-Prometheus" class="headerlink" title="导出 flink 集群指标到 Prometheus"></a>导出 flink 集群指标到 Prometheus</h1><div class="note warning flat"><p>该步骤的前提条件为：集群中已经使用 prometheus-operator 安装了 prometheus 的相关组件</p>
</div>

<p>当我们在 FlinkDeployment 中配置如下配置时</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">flink:1.17</span></span><br><span class="line">  <span class="attr">flinkVersion:</span> <span class="string">v1_17</span></span><br><span class="line">  <span class="attr">flinkConfiguration:</span></span><br><span class="line">    <span class="comment"># 开启指标导出</span></span><br><span class="line">    <span class="attr">metrics.reporter.prom.class:</span> <span class="string">org.apache.flink.metrics.prometheus.PrometheusReporter</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure>

<p>会在 flink 集群中开启指标导出的接口，默认端口为 9249，api 为 metrics，我们需要配置一个 Service 和 ServiceMonitor 来收集这些指标到 Prometheus</p>
<ul>
<li>Service 配置：</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-flink-metrics-service</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">flink</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">test-flink-metrics-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http-metrics</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9249</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">9249</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">test-flink</span></span><br></pre></td></tr></table></figure>

<ul>
<li>ServiceMonitor 配置：</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">monitoring.coreos.com/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceMonitor</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-flink</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">monitoring</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="string">http-metrics</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="string">10s</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">test-flink-metrics-service</span></span><br><span class="line">  <span class="attr">namespaceSelector:</span></span><br><span class="line">    <span class="attr">matchNames:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">flink</span></span><br></pre></td></tr></table></figure>

<p>dashboard 参考：</p>
<ul>
<li><a href="https://grafana.com/grafana/dashboards/14911-flink/">https://grafana.com/grafana/dashboards/14911-flink/</a></li>
<li><a href="https://grafana.com/grafana/dashboards/11049-flink-dashboard/">https://grafana.com/grafana/dashboards/11049-flink-dashboard/</a></li>
</ul>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>Flink</tag>
      </tags>
  </entry>
  <entry>
    <title>常见 Kubernetes 维护场景</title>
    <url>/en-us/common-ops-for-kubernetes/</url>
    <content><![CDATA[<div class="note red flat"><p>Sorry, the current document does not have an English version. Click to switch to <a href="/common-ops-for-kubernetes/">Chinese</a>.</p>
</div>

<h1 id="Kubeadm更新证书"><a href="#Kubeadm更新证书" class="headerlink" title="Kubeadm更新证书"></a>Kubeadm更新证书</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建用于备份的相关文件夹，防止出现问题</span></span><br><span class="line"><span class="built_in">mkdir</span> -pv /data/kube-config-backup/&#123;kubernetes,kube,yaml&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份配置文件</span></span><br><span class="line"><span class="built_in">cp</span> -ra /etc/kubernetes/ /data/kube-config-backup/kubernetes/</span><br><span class="line"><span class="built_in">cp</span> -ra ~/.kube/ /data/kube-config-backup/kube/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新生成证书</span></span><br><span class="line">kubeadm certs renew all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查证书时间</span></span><br><span class="line">kubeadm certs check-expiration</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新生成配置</span></span><br><span class="line">kubeadm init phase kubeconfig all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制管理配置</span></span><br><span class="line"><span class="built_in">rm</span> -rf /root/.kube/*</span><br><span class="line"><span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"><span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启 kube-system，将 manifests 中的配置移除并移入来重启</span></span><br><span class="line"><span class="built_in">mv</span> /etc/kubernetes/manifests/*.yaml /data/kube-config-backup/yaml/</span><br><span class="line"><span class="built_in">mv</span> /data/kube-config-backup/yaml/*.yaml /etc/kubernetes/manifests/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在所有节点重启 kubelet</span></span><br><span class="line">systemctl restart kubelet</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启 prometheus</span></span><br><span class="line">kubectl rollout restart -n monitoring deploy</span><br><span class="line">kubectl rollout restart -n monitoring statefulsets</span><br><span class="line">kubectl rollout restart -n monitoring daemonset</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="kubeadm-添加新节点"><a href="#kubeadm-添加新节点" class="headerlink" title="kubeadm 添加新节点"></a>kubeadm 添加新节点</h1><h2 id="简单方法"><a href="#简单方法" class="headerlink" title="简单方法"></a>简单方法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成token并打印join语句</span></span><br><span class="line">kubeadm token create --print-join-command</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用生成的 join 语句在对应节点执行添加</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入 node</span></span><br><span class="line">kubeadm <span class="built_in">join</span> [ControlPlaneAddress] --token [Token] \</span><br><span class="line">--discovery-token-ca-cert-hash [TokenCAHash]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入 master</span></span><br><span class="line">kubeadm <span class="built_in">join</span> [ControlPlaneAddress] --token [Token] \</span><br><span class="line">        --discovery-token-ca-cert-hash [TokenCAHash] \</span><br><span class="line">        --control-plane --certificate-key [Cert]</span><br></pre></td></tr></table></figure>

<h2 id="手动生成"><a href="#手动生成" class="headerlink" title="手动生成"></a>手动生成</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成 token (1)</span></span><br><span class="line">kubeadm token create</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取 --discovery-token-ca-cert-hash 值(2)</span></span><br><span class="line">openssl x509 -pubkey -<span class="keyword">in</span> /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2&gt;/dev/null | openssl dgst -sha256 -hex | sed <span class="string">&#x27;s/^.* //&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成 upload-certs (3)</span></span><br><span class="line">kubeadm init phase upload-certs --upload-certs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入 node</span></span><br><span class="line">kubeadm <span class="built_in">join</span> [ControlPlaneAddress] --token [1的值] \</span><br><span class="line">--discovery-token-ca-cert-hash [2的值]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入 master</span></span><br><span class="line">kubeadm <span class="built_in">join</span> [ControlPlaneAddress] --token [1的值] \</span><br><span class="line">        --discovery-token-ca-cert-hash [2的值] \</span><br><span class="line">        --control-plane --certificate-key [3的值]</span><br></pre></td></tr></table></figure>

<h1 id="Deployment的Rollout与Rollback"><a href="#Deployment的Rollout与Rollback" class="headerlink" title="Deployment的Rollout与Rollback"></a>Deployment的Rollout与Rollback</h1><div class="note tip flat"><p>Deployment 的 rollout 当且仅当 Deployment 的 pod template（例如.spec.template）中的 label 更新或者镜像更改时被触发<br>其他更新，例如:扩容 Deployment 不会触发 rollout</p>
</div>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看 rollout 的状态</span></span><br><span class="line">kubectl rollout status deployment [deployment名称]</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看 rollout 的历史版本</span></span><br><span class="line">kubectl rollout <span class="built_in">history</span> deployment [deployment名称]</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看单个版本的详细信息</span></span><br><span class="line">kubectl rollout <span class="built_in">history</span> deployment [deployment名称] --revision=2</span><br><span class="line"></span><br><span class="line"><span class="comment">#回退当前的 rollout 到之前的版本</span></span><br><span class="line">kubectl rollout undo deployment [deployment名称]</span><br><span class="line"></span><br><span class="line"><span class="comment">#也可以使用 —revision 参数指定某个历史版本</span></span><br><span class="line">kubectl rollout undo deployment [deployment名称] --to-revision=2</span><br></pre></td></tr></table></figure>

<h1 id="Kubernetes-污点和容忍度"><a href="#Kubernetes-污点和容忍度" class="headerlink" title="Kubernetes 污点和容忍度"></a>Kubernetes 污点和容忍度</h1><h2 id="污点相关命令"><a href="#污点相关命令" class="headerlink" title="污点相关命令"></a>污点相关命令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看污点</span></span><br><span class="line">kubectl describe nodes [node name] | grep Taints</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除污点</span></span><br><span class="line">kubectl taint node [node name] [Taint name]-</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加污点</span></span><br><span class="line">kubectl taint node [node name] [Taint name]:[Taint value]</span><br></pre></td></tr></table></figure>

<h2 id="容忍度"><a href="#容忍度" class="headerlink" title="容忍度"></a>容忍度</h2><p>配置容忍度需要在工作负载上声明 Toleration<br>下面两个 Toleration 都被设置为可以容忍具有污点的 Node，使 Pod 能够调度到有污点的节点上</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">tolerations:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">key:</span> <span class="string">&quot;key&quot;</span></span><br><span class="line">  <span class="attr">operator:</span> <span class="string">&quot;Equal&quot;</span></span><br><span class="line">  <span class="attr">value:</span> <span class="string">&quot;value&quot;</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="string">&quot;NoSchedule&quot;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">tolerations:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">key:</span> <span class="string">&quot;key&quot;</span></span><br><span class="line">  <span class="attr">operator:</span> <span class="string">&quot;Exists&quot;</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="string">&quot;NoSchedule&quot;</span></span><br></pre></td></tr></table></figure>

<p>Pod 的 Toleration 声明中的 key 和 effect 需要与 Taint 的设置保持一致，并且满足以下条件之一：</p>
<ul>
<li>operator 的值是 Exists（无需指定 value）</li>
<li>operator 的值是 Equal 并且 value相等</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">tolerations:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">key:</span> <span class="string">&quot;node-role.kubernetes.io/master&quot;</span></span><br><span class="line">  <span class="attr">operator:</span> <span class="string">&quot;Equal&quot;</span></span><br><span class="line">  <span class="attr">value:</span> <span class="string">&quot;node-role.kubernetes.io/master&quot;</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="string">&quot;NoSchedule&quot;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">tolerations:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">key:</span> <span class="string">&quot;node-role.kubernetes.io/master&quot;</span></span><br><span class="line">  <span class="attr">operator:</span> <span class="string">&quot;Exists&quot;</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="string">&quot;NoSchedule&quot;</span></span><br></pre></td></tr></table></figure>

<h1 id="Kubernetes-资源限额"><a href="#Kubernetes-资源限额" class="headerlink" title="Kubernetes 资源限额"></a>Kubernetes 资源限额</h1><h2 id="Request-和-Limit（在工作负载或-Pod-中）"><a href="#Request-和-Limit（在工作负载或-Pod-中）" class="headerlink" title="Request 和 Limit（在工作负载或 Pod 中）"></a>Request 和 Limit（在工作负载或 Pod 中）</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="attr">requests:</span></span><br><span class="line">        <span class="attr">cpu:</span> <span class="number">2</span>  <span class="comment"># 有时会采用写法为 2000m，其中1000m约等于1核</span></span><br><span class="line">        <span class="attr">memory:</span> <span class="string">2Gi</span> <span class="comment"># 也可使用Mi代替，如 2048Mi</span></span><br><span class="line">      <span class="attr">limits:</span></span><br><span class="line">        <span class="attr">cpu:</span> <span class="number">2</span></span><br><span class="line">        <span class="attr">memory:</span> <span class="string">2Gi</span></span><br></pre></td></tr></table></figure>

<p>K8S 通过 Request 和 Limit 两个抽象概念来支持资源的升级与配额的管理<br>对于以下两种资源 K8S 都有权来管理<br>Request 主要是应用发布时对容器的使用量进行灵活配置，即 K8S 会根据该值决定调度的节点<br>Limit 主要是对应用容器进行资源限制，即应用容器的最大资源配额</p>
<h2 id="QoS-Quality-of-Service"><a href="#QoS-Quality-of-Service" class="headerlink" title="QoS(Quality of Service)"></a>QoS(Quality of Service)</h2><p>当集群资源不足时，K8S 会根据 Pod 标记的 QoS 类别做剔除决策，腾出空闲资源</p>
<ul>
<li>当 Request &#x3D; Limit 时，QoS 为保证型（Guaranteed），只有当使用量超限时，才会被 Kill</li>
<li>当 Request &lt; Limit 时（包含只设置了 Request，未设置 Limit 的工作负载或 Pod），QoS 为突发型（Burstable），当节点资源不足时，这类 Pod 可能会被 Kill 掉</li>
<li>当既不设置 Request，又不设置 Limit 时，QoS 为最大努力型（BestEffort），只要当节点资源不够调度时，这类 Pod 首先就会被kill掉</li>
</ul>
<h2 id="ResourceQuota-LimitRange（对于命名空间限制）"><a href="#ResourceQuota-LimitRange（对于命名空间限制）" class="headerlink" title="ResourceQuota&#x2F;LimitRange（对于命名空间限制）"></a>ResourceQuota&#x2F;LimitRange（对于命名空间限制）</h2><p>ResourceQuota&#x2F;LimitRange 用于控制特定命名空间中的资源使⽤量，最终实现集群的公平使⽤和成本的控制</p>
<ul>
<li>限制运⾏状态的Pod的计算资源⽤量</li>
<li>限制持久存储卷的数量以控制对存储的访问</li>
<li>限制负载均衡器的数量以控制成本</li>
<li>防⽌滥⽤⽹络端⼝</li>
<li>提供默认的计算资源Requests以便于系统做出更优化的调度</li>
</ul>
<p>示例：</p>
<h3 id="命名空间总资源限制"><a href="#命名空间总资源限制" class="headerlink" title="命名空间总资源限制"></a>命名空间总资源限制</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ResourceQuota</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">object-counts</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">hard:</span></span><br><span class="line">    <span class="attr">persistentvolumeclaims:</span> <span class="string">&quot;2&quot;</span> <span class="comment"># 持久存储卷数量</span></span><br><span class="line">    <span class="attr">services.loadbalancers:</span> <span class="string">&quot;2&quot;</span> <span class="comment"># 负载均衡器数量</span></span><br><span class="line">    <span class="attr">services.nodeports:</span> <span class="string">&quot;0&quot;</span> <span class="comment"># NodePort数量</span></span><br><span class="line">    <span class="attr">pods:</span> <span class="string">&quot;4&quot;</span> <span class="comment"># Pod数量</span></span><br><span class="line">    <span class="attr">requests.cpu:</span> <span class="string">&quot;1&quot;</span> <span class="comment"># 限制请求CPU数量</span></span><br><span class="line">    <span class="attr">requests.memory:</span> <span class="string">1Gi</span> <span class="comment"># 限制请求内存大小</span></span><br><span class="line">    <span class="attr">limits.cpu:</span> <span class="string">&quot;2&quot;</span> <span class="comment"># 限制最小CPU数量限制</span></span><br><span class="line">    <span class="attr">limits.memory:</span> <span class="string">2Gi</span> <span class="comment"># 限制最小内存限制</span></span><br></pre></td></tr></table></figure>

<h3 id="命名空间内默认资源配置"><a href="#命名空间内默认资源配置" class="headerlink" title="命名空间内默认资源配置"></a>命名空间内默认资源配置</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">LimitRange</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">limits</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">limits:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">default:</span></span><br><span class="line">      <span class="attr">cpu:</span> <span class="string">200m</span></span><br><span class="line">      <span class="attr">memory:</span> <span class="string">512Mi</span></span><br><span class="line">    <span class="attr">defaultRequest:</span></span><br><span class="line">      <span class="attr">cpu:</span> <span class="string">100m</span></span><br><span class="line">      <span class="attr">memory:</span> <span class="string">256Mi</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">Container</span></span><br></pre></td></tr></table></figure>

<h3 id="计算资源配额"><a href="#计算资源配额" class="headerlink" title="计算资源配额"></a>计算资源配额</h3><table>
<thead>
<tr>
<th>资源名称</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><code>limits.cpu</code></td>
<td>所有非终止状态的 Pod，其 CPU 限额总量不能超过该值</td>
</tr>
<tr>
<td><code>limits.memory</code></td>
<td>所有非终止状态的 Pod，其内存限额总量不能超过该值</td>
</tr>
<tr>
<td><code>requests.cpu</code></td>
<td>所有非终止状态的 Pod，其 CPU 需求总量不能超过该值</td>
</tr>
<tr>
<td><code>requests.memory</code></td>
<td>所有非终止状态的 Pod，其内存需求总量不能超过该值</td>
</tr>
<tr>
<td><code>hugepages-&lt;size&gt;</code></td>
<td>对于所有非终止状态的 Pod，针对指定尺寸的巨页请求总数不能超过此值</td>
</tr>
<tr>
<td><code>cpu</code></td>
<td>与 <code>requests.cpu</code> 相同</td>
</tr>
<tr>
<td><code>memory</code></td>
<td>与 <code>requests.memory</code> 相同</td>
</tr>
</tbody></table>
<h3 id="存储资源配额"><a href="#存储资源配额" class="headerlink" title="存储资源配额"></a>存储资源配额</h3><table>
<thead>
<tr>
<th>资源名称</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><code>requests.storage</code></td>
<td>所有 PVC，存储资源的需求总量不能超过该值</td>
</tr>
<tr>
<td><code>persistentvolumeclaims</code></td>
<td>在该命名空间中所允许的 PVC 总量</td>
</tr>
<tr>
<td><code>&lt;storage-class-name&gt;.storageclass.storage.k8s.io/requests.storage</code></td>
<td>在所有与 <code>&lt;storage-class-name&gt;</code> 相关的 PVC 中，存储请求的总和不能超过该值</td>
</tr>
<tr>
<td><code>&lt;storage-class-name&gt;.storageclass.storage.k8s.io/persistentvolumeclaims</code></td>
<td>在与 <code>&lt;storage-class-name&gt;</code> 相关的所有 PVC 中，命名空间中可以存在的 PVC 总数</td>
</tr>
</tbody></table>
<p>其他请参考官方文档：<a href="https://kubernetes.io/zh-cn/docs/concepts/policy/resource-quotas/">资源配额</a></p>
<h1 id="代理外部服务"><a href="#代理外部服务" class="headerlink" title="代理外部服务"></a>代理外部服务</h1><p>在 Kubernetes 中，使用 Service 和 Endpoints 可以代理外部的服务，让 K8S 集群内部的工作负载通过 Service 连接外部的服务</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">external-api</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">external</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">external-api</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Endpoints</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">external-api</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">external</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">external-api</span></span><br><span class="line"><span class="attr">subsets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">addresses:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">ip:</span> <span class="string">外部的IP</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CloudNative</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>DevOps</tag>
      </tags>
  </entry>
  <entry>
    <title>Useful Kubernetes Commands</title>
    <url>/en-us/useful-kubernetes-commands/</url>
    <content><![CDATA[<div class="note blue flat"><p>当前文档有中文版本：<a href="/useful-kubernetes-commands/">点击这里切换到中文</a></p>
</div>

<h1 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h1><h2 id="Get-resource-requests-and-limits-for-all-pods-in-namespace"><a href="#Get-resource-requests-and-limits-for-all-pods-in-namespace" class="headerlink" title="Get resource requests and limits for all pods in namespace"></a>Get resource requests and limits for all pods in namespace</h2><div class="note blue flat"><p>If you need to get all the resource requests and limits of cluster, just use <code>kubectl get pods -A ...</code></p>
</div>

<h3 id="CPU-Requests"><a href="#CPU-Requests" class="headerlink" title="CPU Requests"></a>CPU Requests</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get pods -n <span class="variable">$&#123;namespace&#125;</span> -o=jsonpath=<span class="string">&#x27;&#123;.items[*].spec.containers[*].resources.requests.cpu&#125;&#x27;</span> | \</span><br><span class="line"><span class="built_in">tr</span> -s <span class="string">&#x27;[:space:]&#x27;</span> <span class="string">&#x27;\n&#x27;</span> | \</span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;sum=0&#125;&#123;</span></span><br><span class="line"><span class="string">    if(tolower($1) ~ /mi?/) </span></span><br><span class="line"><span class="string">        sum += gensub(/[^0-9.]/, &quot;&quot;, &quot;g&quot;, $1)/1000; </span></span><br><span class="line"><span class="string">    else </span></span><br><span class="line"><span class="string">        sum += $1</span></span><br><span class="line"><span class="string">    &#125; </span></span><br><span class="line"><span class="string">    END&#123;print sum &quot; CPU Cores&quot;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="CPU-Limits"><a href="#CPU-Limits" class="headerlink" title="CPU Limits"></a>CPU Limits</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get pods -n <span class="variable">$&#123;namespace&#125;</span> -o=jsonpath=<span class="string">&#x27;&#123;.items[*].spec.containers[*].resources.limits.cpu&#125;&#x27;</span> | \</span><br><span class="line"><span class="built_in">tr</span> -s <span class="string">&#x27;[:space:]&#x27;</span> <span class="string">&#x27;\n&#x27;</span> | \</span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;sum=0&#125;&#123;</span></span><br><span class="line"><span class="string">    if(tolower($1) ~ /mi?/) </span></span><br><span class="line"><span class="string">        sum += gensub(/[^0-9.]/, &quot;&quot;, &quot;g&quot;, $1)/1000; </span></span><br><span class="line"><span class="string">    else </span></span><br><span class="line"><span class="string">        sum += $1</span></span><br><span class="line"><span class="string">    &#125; </span></span><br><span class="line"><span class="string">    END&#123;print sum &quot; CPU Cores&quot;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="Mem-Requests-Units-Gi"><a href="#Mem-Requests-Units-Gi" class="headerlink" title="Mem Requests (Units: Gi)"></a>Mem Requests (Units: Gi)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get pods -n <span class="variable">$&#123;namespace&#125;</span> -o=jsonpath=<span class="string">&#x27;&#123;.items[*].spec.containers[*].resources.requests.memory&#125;&#x27;</span> | \</span><br><span class="line"><span class="built_in">tr</span> -s <span class="string">&#x27;[:space:]&#x27;</span> <span class="string">&#x27;\n&#x27;</span> | \</span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;sum=0&#125;&#123;</span></span><br><span class="line"><span class="string">    if(tolower($1) ~ /ki?/) </span></span><br><span class="line"><span class="string">        sum += gensub(/[^0-9.]/, &quot;&quot;, &quot;g&quot;, $1)/1048576; </span></span><br><span class="line"><span class="string">    else if(tolower($1) ~ /mi?/) </span></span><br><span class="line"><span class="string">        sum += gensub(/[^0-9.]/, &quot;&quot;, &quot;g&quot;, $1)/1024; </span></span><br><span class="line"><span class="string">    else if(tolower($1) ~ /gi?/) </span></span><br><span class="line"><span class="string">        sum += gensub(/[^0-9.]/, &quot;&quot;, &quot;g&quot;, $1); </span></span><br><span class="line"><span class="string">    else if(tolower($1) ~ /ti?/) </span></span><br><span class="line"><span class="string">        sum += gensub(/[^0-9.]/, &quot;&quot;, &quot;g&quot;, $1)*1024; </span></span><br><span class="line"><span class="string">    else </span></span><br><span class="line"><span class="string">        sum += $1</span></span><br><span class="line"><span class="string">    &#125; </span></span><br><span class="line"><span class="string">    END&#123;print sum &quot; GiB&quot;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="Mem-Limits-Units-Gi"><a href="#Mem-Limits-Units-Gi" class="headerlink" title="Mem Limits (Units: Gi)"></a>Mem Limits (Units: Gi)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get pods -n <span class="variable">$&#123;namespace&#125;</span> -o=jsonpath=<span class="string">&#x27;&#123;.items[*].spec.containers[*].resources.limits.memory&#125;&#x27;</span> | \</span><br><span class="line"><span class="built_in">tr</span> -s <span class="string">&#x27;[:space:]&#x27;</span> <span class="string">&#x27;\n&#x27;</span> | \</span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;sum=0&#125;&#123;</span></span><br><span class="line"><span class="string">    if(tolower($1) ~ /ki?/) </span></span><br><span class="line"><span class="string">        sum += gensub(/[^0-9.]/, &quot;&quot;, &quot;g&quot;, $1)/1048576; </span></span><br><span class="line"><span class="string">    else if(tolower($1) ~ /mi?/) </span></span><br><span class="line"><span class="string">        sum += gensub(/[^0-9.]/, &quot;&quot;, &quot;g&quot;, $1)/1024; </span></span><br><span class="line"><span class="string">    else if(tolower($1) ~ /gi?/) </span></span><br><span class="line"><span class="string">        sum += gensub(/[^0-9.]/, &quot;&quot;, &quot;g&quot;, $1); </span></span><br><span class="line"><span class="string">    else if(tolower($1) ~ /ti?/) </span></span><br><span class="line"><span class="string">        sum += gensub(/[^0-9.]/, &quot;&quot;, &quot;g&quot;, $1)*1024; </span></span><br><span class="line"><span class="string">    else </span></span><br><span class="line"><span class="string">        sum += $1</span></span><br><span class="line"><span class="string">    &#125; </span></span><br><span class="line"><span class="string">    END&#123;print sum &quot; GiB&quot;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="Get-the-resources-for-each-namespace"><a href="#Get-the-resources-for-each-namespace" class="headerlink" title="Get the resources for each namespace"></a>Get the resources for each namespace</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line">namespaces=($(kubectl get ns --no-headers | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>))</span><br><span class="line"><span class="keyword">for</span> namespace <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;namespaces[@]&#125;</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line">    request_cpu=$(</span><br><span class="line">        kubectl get pods -n <span class="variable">$&#123;namespace&#125;</span> -o=jsonpath=<span class="string">&#x27;&#123;.items[*].spec.containers[*].resources.requests.cpu&#125;&#x27;</span> | \</span><br><span class="line">        <span class="built_in">tr</span> -s <span class="string">&#x27;[:space:]&#x27;</span> <span class="string">&#x27;\n&#x27;</span> | \</span><br><span class="line">        awk <span class="string">&#x27;BEGIN&#123;sum=0&#125;&#123;</span></span><br><span class="line"><span class="string">            if(tolower($1) ~ /mi?/) </span></span><br><span class="line"><span class="string">                sum += gensub(/[^0-9.]/, &quot;&quot;, &quot;g&quot;, $1)/1000; </span></span><br><span class="line"><span class="string">            else </span></span><br><span class="line"><span class="string">                sum += $1</span></span><br><span class="line"><span class="string">            &#125; </span></span><br><span class="line"><span class="string">            END&#123;print sum &quot; CPU Cores&quot;&#125;&#x27;</span></span><br><span class="line">    )</span><br><span class="line">    request_memory=$(</span><br><span class="line">        kubectl get pods -n <span class="variable">$&#123;namespace&#125;</span> -o=jsonpath=<span class="string">&#x27;&#123;.items[*].spec.containers[*].resources.requests.memory&#125;&#x27;</span> | \</span><br><span class="line">        <span class="built_in">tr</span> -s <span class="string">&#x27;[:space:]&#x27;</span> <span class="string">&#x27;\n&#x27;</span> | \</span><br><span class="line">        awk <span class="string">&#x27;BEGIN&#123;sum=0&#125;&#123;</span></span><br><span class="line"><span class="string">            if(tolower($1) ~ /ki?/) </span></span><br><span class="line"><span class="string">                sum += gensub(/[^0-9.]/, &quot;&quot;, &quot;g&quot;, $1)/1048576; </span></span><br><span class="line"><span class="string">            else if(tolower($1) ~ /mi?/) </span></span><br><span class="line"><span class="string">                sum += gensub(/[^0-9.]/, &quot;&quot;, &quot;g&quot;, $1)/1024; </span></span><br><span class="line"><span class="string">            else if(tolower($1) ~ /gi?/) </span></span><br><span class="line"><span class="string">                sum += gensub(/[^0-9.]/, &quot;&quot;, &quot;g&quot;, $1); </span></span><br><span class="line"><span class="string">            else if(tolower($1) ~ /ti?/) </span></span><br><span class="line"><span class="string">                sum += gensub(/[^0-9.]/, &quot;&quot;, &quot;g&quot;, $1)*1024; </span></span><br><span class="line"><span class="string">            else </span></span><br><span class="line"><span class="string">                sum += $1</span></span><br><span class="line"><span class="string">            &#125; </span></span><br><span class="line"><span class="string">            END&#123;print sum &quot; GiB&quot;&#125;&#x27;</span></span><br><span class="line">    )</span><br><span class="line">    limit_cpu=$(</span><br><span class="line">        kubectl get pods -n <span class="variable">$&#123;namespace&#125;</span> -o=jsonpath=<span class="string">&#x27;&#123;.items[*].spec.containers[*].resources.limits.cpu&#125;&#x27;</span> | \</span><br><span class="line">        <span class="built_in">tr</span> -s <span class="string">&#x27;[:space:]&#x27;</span> <span class="string">&#x27;\n&#x27;</span> | \</span><br><span class="line">        awk <span class="string">&#x27;BEGIN&#123;sum=0&#125;&#123;</span></span><br><span class="line"><span class="string">            if(tolower($1) ~ /mi?/) </span></span><br><span class="line"><span class="string">                sum += gensub(/[^0-9.]/, &quot;&quot;, &quot;g&quot;, $1)/1000; </span></span><br><span class="line"><span class="string">            else </span></span><br><span class="line"><span class="string">                sum += $1</span></span><br><span class="line"><span class="string">            &#125; </span></span><br><span class="line"><span class="string">            END&#123;print sum &quot; CPU Cores&quot;&#125;&#x27;</span></span><br><span class="line">    )</span><br><span class="line">    limit_memory=$(</span><br><span class="line">        kubectl get pods -n <span class="variable">$&#123;namespace&#125;</span> -o=jsonpath=<span class="string">&#x27;&#123;.items[*].spec.containers[*].resources.limits.memory&#125;&#x27;</span> | \</span><br><span class="line">        <span class="built_in">tr</span> -s <span class="string">&#x27;[:space:]&#x27;</span> <span class="string">&#x27;\n&#x27;</span> | \</span><br><span class="line">        awk <span class="string">&#x27;BEGIN&#123;sum=0&#125;&#123;</span></span><br><span class="line"><span class="string">            if(tolower($1) ~ /ki?/) </span></span><br><span class="line"><span class="string">                sum += gensub(/[^0-9.]/, &quot;&quot;, &quot;g&quot;, $1)/1048576; </span></span><br><span class="line"><span class="string">            else if(tolower($1) ~ /mi?/) </span></span><br><span class="line"><span class="string">                sum += gensub(/[^0-9.]/, &quot;&quot;, &quot;g&quot;, $1)/1024; </span></span><br><span class="line"><span class="string">            else if(tolower($1) ~ /gi?/) </span></span><br><span class="line"><span class="string">                sum += gensub(/[^0-9.]/, &quot;&quot;, &quot;g&quot;, $1); </span></span><br><span class="line"><span class="string">            else if(tolower($1) ~ /ti?/) </span></span><br><span class="line"><span class="string">                sum += gensub(/[^0-9.]/, &quot;&quot;, &quot;g&quot;, $1)*1024; </span></span><br><span class="line"><span class="string">            else </span></span><br><span class="line"><span class="string">                sum += $1</span></span><br><span class="line"><span class="string">            &#125; </span></span><br><span class="line"><span class="string">            END&#123;print sum &quot; GiB&quot;&#125;&#x27;</span></span><br><span class="line">    )</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;namespace&#125;</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;request cpu：<span class="variable">$&#123;request_cpu&#125;</span> request mem：<span class="variable">$&#123;request_memory&#125;</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;limit cpu：<span class="variable">$&#123;limit_cpu&#125;</span> limit mem：<span class="variable">$&#123;limit_memory&#125;</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;------------------------------------------&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h1 id="Storage"><a href="#Storage" class="headerlink" title="Storage"></a>Storage</h1><h2 id="Get-the-total-request-size-for-all-PVCs"><a href="#Get-the-total-request-size-for-all-PVCs" class="headerlink" title="Get the total request size for all PVCs"></a>Get the total request size for all PVCs</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get pvc --no-headers -A | awk <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    size = $5</span></span><br><span class="line"><span class="string">    unit = substr(size, length(size))</span></span><br><span class="line"><span class="string">    value = substr(size, 1, length(size) - 1)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    if (unit == &quot;Ki&quot;) value /= 1024 * 1024</span></span><br><span class="line"><span class="string">    else if (unit == &quot;Mi&quot;) value /= 1024</span></span><br><span class="line"><span class="string">    else if (unit == &quot;Gi&quot;) value = value</span></span><br><span class="line"><span class="string">    else if (unit == &quot;Ti&quot;) value *= 1024</span></span><br><span class="line"><span class="string">    else if (unit == &quot;Pi&quot;) value *= 1024 * 1024</span></span><br><span class="line"><span class="string">    else if (unit == &quot;Ei&quot;) value *= 1024 * 1024 * 1024</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    total += value</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">END &#123;print &quot;Total PVC Size (Gi):&quot;, total&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="Get-the-total-request-size-for-all-PVCs-in-namespace"><a href="#Get-the-total-request-size-for-all-PVCs-in-namespace" class="headerlink" title="Get the total request size for all PVCs in namespace"></a>Get the total request size for all PVCs in namespace</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get pvc --no-headers -n <span class="variable">$&#123;namespace&#125;</span> | awk <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    size = $4</span></span><br><span class="line"><span class="string">    unit = substr(size, length(size))</span></span><br><span class="line"><span class="string">    value = substr(size, 1, length(size) - 1)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    # convert to Gi</span></span><br><span class="line"><span class="string">    if (unit == &quot;Ki&quot;) value /= 1024 * 1024</span></span><br><span class="line"><span class="string">    else if (unit == &quot;Mi&quot;) value /= 1024</span></span><br><span class="line"><span class="string">    else if (unit == &quot;Gi&quot;) value = value</span></span><br><span class="line"><span class="string">    else if (unit == &quot;Ti&quot;) value *= 1024</span></span><br><span class="line"><span class="string">    else if (unit == &quot;Pi&quot;) value *= 1024 * 1024</span></span><br><span class="line"><span class="string">    else if (unit == &quot;Ei&quot;) value *= 1024 * 1024 * 1024</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    total += value</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">END &#123;print &quot;Total PVC Size (Gi):&quot;, total&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h1 id="Container-Images"><a href="#Container-Images" class="headerlink" title="Container Images"></a>Container Images</h1><h2 id="List-all-container-images-used-by-PODs-in-namespace"><a href="#List-all-container-images-used-by-PODs-in-namespace" class="headerlink" title="List all container images used by PODs in namespace"></a>List all container images used by PODs in namespace</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get pods -n <span class="variable">$&#123;namespace&#125;</span> -o jsonpath=<span class="string">&#x27;&#123;range .items[*]&#125;&#123;&quot;\n&quot;&#125;&#123;.metadata.name&#125;&#123;&quot;:\t&quot;&#125;&#123;range .spec.containers[*]&#125;&#123;.image&#125;&#123;&quot;, &quot;&#125;&#123;end&#125;&#123;end&#125;&#x27;</span> | <span class="built_in">sort</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CloudNative</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>DevOps</tag>
      </tags>
  </entry>
  <entry>
    <title>Spark Operator</title>
    <url>/en-us/spark-operator/</url>
    <content><![CDATA[<div class="note red flat"><p>Sorry, the current document does not have an English version. Click to switch to <a href="/spark-operator/">Chinese</a>.</p>
</div>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在 Kubernetes 中运行 Spark 有很多种方式</p>
<p>如直接部署 Deployment 运行 Spark 集群容器（这种方式相当于只是使用 Kubernetes 托管了运行 Spark 集群的容器，本身 Kubernetes 与 Spark 集群无任何交互）</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span>  <span class="string">spark-cluster-master</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">spark</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span>  <span class="string">spark-cluster-master</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">spark-cluster-master</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span>  <span class="string">spark-cluster-master</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">securityContext:</span></span><br><span class="line">        <span class="attr">runAsUser:</span> <span class="number">0</span></span><br><span class="line">        <span class="attr">runAsGroup:</span> <span class="number">0</span></span><br><span class="line">        <span class="attr">fsGroup:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span>  <span class="string">spark-cluster-master</span></span><br><span class="line">        <span class="attr">image:</span>  <span class="string">apache/spark:v3.1.3</span></span><br><span class="line">        <span class="attr">workingDir:</span> <span class="string">/opt/spark</span></span><br><span class="line">        <span class="attr">command:</span> [<span class="string">&quot;/bin/bash&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;/opt/spark/sbin/start-master.sh &amp;&amp; tail -f /opt/spark/logs/*.out&quot;</span>]</span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">tcpSocket:</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">60</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">1000m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">2Gi</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">1000m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">2Gi</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">ui</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">7077</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">rpc</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span>  <span class="string">spark-cluster-worker</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">spark</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span>  <span class="string">spark-cluster-worker</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">spark-cluster-worker</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span>  <span class="string">spark-cluster-worker</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">securityContext:</span></span><br><span class="line">        <span class="attr">runAsUser:</span> <span class="number">0</span></span><br><span class="line">        <span class="attr">runAsGroup:</span> <span class="number">0</span></span><br><span class="line">        <span class="attr">fsGroup:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span>  <span class="string">spark-cluster-worker</span></span><br><span class="line">        <span class="attr">image:</span>  <span class="string">apache/spark:v3.1.3</span></span><br><span class="line">        <span class="attr">workingDir:</span> <span class="string">/opt/spark</span></span><br><span class="line">        <span class="attr">command:</span> [<span class="string">&quot;/bin/bash&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;/opt/spark/sbin/start-worker.sh spark://spark-cluster-master.spark:7077 &amp;&amp; tail -f /opt/spark/logs/*.out&quot;</span>]</span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">2000m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">4Gi</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">2000m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">4Gi</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">spark-cluster-master</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">spark</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">spark-cluster-master</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">rpc</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">7077</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ui</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>或者是用 spark-submit，官方文档地址：<a href="https://spark.apache.org/docs/latest/running-on-kubernetes.html">spark-on-k8s</a></p>
<p>但是对于以上方式来说，我还是更喜欢使用 <a href="https://github.com/GoogleCloudPlatform/spark-on-k8s-operator">spark-operator</a></p>
<h1 id="Spark-Operator-介绍"><a href="#Spark-Operator-介绍" class="headerlink" title="Spark Operator 介绍"></a>Spark Operator 介绍</h1><div class="note blue flat"><p>在 Spark Operator 中，Spark Job 属于一次性的执行任务，即执行完毕后会销毁容器，Spark-Operator 提供了两种关于 Spark Job 的 CRD：<br>SparkApplication 和 ScheduledSparkApplication<br>其中 SparkApplication 为一次性任务，即本次运行完毕后，将会不再运行<br>ScheduledSparkApplication 为定时任务，会根据对应配置的时间，定时启动 SparkApplication</p>
</div>

<h1 id="安装-Spark-Operator"><a href="#安装-Spark-Operator" class="headerlink" title="安装 Spark Operator"></a>安装 Spark Operator</h1><p>安装 Spark Operator 我们可以通过官方提供的 helm charts 进行安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加 helm repo</span></span><br><span class="line">helm repo add spark-operator https://googlecloudplatform.github.io/spark-on-k8s-operator</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">helm install spark-operator spark-operator/spark-operator \</span><br><span class="line">  --namespace spark \</span><br><span class="line">  --create-namespace \</span><br><span class="line">  --<span class="built_in">set</span> metrics.enable=<span class="literal">true</span> \</span><br><span class="line">  --<span class="built_in">set</span> webhook.enable=<span class="literal">true</span></span><br></pre></td></tr></table></figure>

<div class="note tip flat"><p>PS：<br>默认情况下 Operator 将会监视并处理每个命名空间中的 CRD，如果想要限制对应的命名空间，可以添加 –set sparkJobNamespace&#x3D;namespace 设置<br>–set webhook.enable&#x3D;true 是为了开启 mutating admission webhook，使 CRD 具有额外的功能，例如可以将 ConfigMap 挂载到 SparkApplication 和 ScheduledSparkApplication</p>
</div>

<h1 id="Spark-CRD-配置示例"><a href="#Spark-CRD-配置示例" class="headerlink" title="Spark CRD 配置示例"></a>Spark CRD 配置示例</h1><h2 id="SparkApplication"><a href="#SparkApplication" class="headerlink" title="SparkApplication"></a>SparkApplication</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">&quot;sparkoperator.k8s.io/v1beta2&quot;</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">SparkApplication</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">spark-app</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">spark</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">Scala</span></span><br><span class="line">  <span class="attr">mode:</span> <span class="string">cluster</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">&quot;your.repo.com/spark/spark-test:v1&quot;</span> <span class="comment"># 配置 spark 的镜像，镜像的构建需要 apache/spark 镜像 + jar 包进行构建</span></span><br><span class="line">  <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">  <span class="attr">imagePullSecrets:</span> <span class="comment"># 这里配置镜像仓库对应的 Secret</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">your-repo-secret</span></span><br><span class="line">  <span class="attr">mainClass:</span> <span class="string">com.fs.MySpark</span> <span class="comment"># spark jar 包的 main 执行类</span></span><br><span class="line">  <span class="attr">mainApplicationFile:</span> <span class="string">&quot;local:///opt/spark/examples/jars/my-spark.jar&quot;</span> <span class="comment"># spark jar包所在位置</span></span><br><span class="line">  <span class="attr">sparkVersion:</span> <span class="string">&quot;3.1.3&quot;</span> <span class="comment"># spark 对应的版本</span></span><br><span class="line">  <span class="attr">restartPolicy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">Never</span></span><br><span class="line">  <span class="attr">driver:</span> <span class="comment"># driver 对应的配置</span></span><br><span class="line">    <span class="attr">cores:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">memory:</span> <span class="string">&quot;4096m&quot;</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">version:</span> <span class="number">3.1</span><span class="number">.3</span></span><br><span class="line">    <span class="attr">serviceAccount:</span> <span class="string">spark</span></span><br><span class="line">    <span class="attr">env:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">TZ</span></span><br><span class="line">      <span class="attr">value:</span> <span class="string">&quot;Asia/Shanghai&quot;</span></span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">spark-properties</span> <span class="comment"># 之前使用 helm 安装 operator 时配置了 --set webhook.enable=true 的话，就可以配置挂载 ConfigMap</span></span><br><span class="line">      <span class="attr">mountPath:</span> <span class="string">/opt/spark/examples/jars/conf</span></span><br><span class="line">  <span class="attr">executor:</span> <span class="comment"># executor 对应的配置</span></span><br><span class="line">    <span class="attr">cores:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">instances:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">memory:</span> <span class="string">&quot;4g&quot;</span></span><br><span class="line">    <span class="attr">memoryOverhead:</span> <span class="string">&quot;4g&quot;</span></span><br><span class="line">    <span class="attr">env:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">TZ</span></span><br><span class="line">      <span class="attr">value:</span> <span class="string">&quot;Asia/Shanghai&quot;</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">version:</span> <span class="number">3.1</span><span class="number">.3</span></span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">spark-properties</span></span><br><span class="line">      <span class="attr">mountPath:</span> <span class="string">/opt/spark/examples/jars/conf</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">spark-properties</span></span><br><span class="line">      <span class="attr">configMap:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">spark-properties</span></span><br></pre></td></tr></table></figure>

<h2 id="ScheduledSparkApplication"><a href="#ScheduledSparkApplication" class="headerlink" title="ScheduledSparkApplication"></a>ScheduledSparkApplication</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">&quot;sparkoperator.k8s.io/v1beta2&quot;</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ScheduledSparkApplication</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">spark-scheduled-app</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">spark</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">schedule:</span> <span class="string">&quot;00 16 * * *&quot;</span> <span class="comment"># 定时配置</span></span><br><span class="line">  <span class="attr">concurrencyPolicy:</span> <span class="string">Allow</span> <span class="comment"># 允许并发</span></span><br><span class="line">  <span class="attr">successfulRunHistoryLimit:</span> <span class="number">1</span> <span class="comment"># 成功的保存历史次数</span></span><br><span class="line">  <span class="attr">failedRunHistoryLimit:</span> <span class="number">3</span>  <span class="comment"># 失败的保存历史次数</span></span><br><span class="line">  <span class="attr">template:</span> <span class="comment"># 这里的模板配置与 SparkApplication 一致</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">Scala</span></span><br><span class="line">    <span class="attr">mode:</span> <span class="string">cluster</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&quot;your.repo.com/spark/spark-test:v1&quot;</span></span><br><span class="line">    <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">    <span class="attr">imagePullSecrets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">your-repo-secret</span></span><br><span class="line">    <span class="attr">mainClass:</span> <span class="string">com.fs.MySpark</span></span><br><span class="line">    <span class="attr">mainApplicationFile:</span> <span class="string">&quot;local:///opt/spark/examples/jars/my-spark.jar&quot;</span></span><br><span class="line">    <span class="attr">sparkVersion:</span> <span class="string">&quot;3.1.1&quot;</span></span><br><span class="line">    <span class="attr">restartPolicy:</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">Never</span></span><br><span class="line">    <span class="attr">driver:</span></span><br><span class="line">      <span class="string">...</span></span><br><span class="line">    <span class="attr">executor:</span></span><br><span class="line">      <span class="string">...</span></span><br></pre></td></tr></table></figure>

<h1 id="构建-Spark-Job-容器"><a href="#构建-Spark-Job-容器" class="headerlink" title="构建 Spark Job 容器"></a>构建 Spark Job 容器</h1><h2 id="打包-Jar"><a href="#打包-Jar" class="headerlink" title="打包 Jar"></a>打包 Jar</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn clean package -Dfile.encoding=UTF-8 -DskipTests=<span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h2 id="构建容器"><a href="#构建容器" class="headerlink" title="构建容器"></a>构建容器</h2><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> apache/spark:v3.<span class="number">1.3</span></span><br><span class="line"><span class="keyword">ARG</span> JAR_FILE</span><br><span class="line"><span class="keyword">ENV</span> JAR_FILE=$&#123;JAR_FILE&#125;</span><br><span class="line"><span class="keyword">USER</span> root</span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./target/<span class="variable">$JAR_FILE</span> /opt/spark/examples/jars</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">chmod</span> -R +r /opt/spark/examples/jars</span></span><br><span class="line"><span class="keyword">USER</span> <span class="number">185</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 找到 target 文件夹下，带有 with-dependencies.jar 的 jar 包</span></span><br><span class="line">docker build --build-arg JAR_FILE=`<span class="built_in">ls</span> ./target/*with-dependencies.jar | <span class="built_in">cut</span> -d <span class="string">&#x27;/&#x27;</span> -f3<span class="string">&quot;` -t your.repo.com/spark/myspark-app:v1 .</span></span><br></pre></td></tr></table></figure>

<h1 id="接入-Prometheus"><a href="#接入-Prometheus" class="headerlink" title="接入 Prometheus"></a>接入 Prometheus</h1><h2 id="配置-Service"><a href="#配置-Service" class="headerlink" title="配置 Service"></a>配置 Service</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">spark-operator</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">spark-operator</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">spark-operator-metrics-service</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">spark</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http-metrics</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">10254</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">10254</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">spark-operator</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">spark-operator</span></span><br></pre></td></tr></table></figure>

<h2 id="配置-ServiceMonitor"><a href="#配置-ServiceMonitor" class="headerlink" title="配置 ServiceMonitor"></a>配置 ServiceMonitor</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">monitoring.coreos.com/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceMonitor</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">spark-operator-metrics</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">monitoring</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">spark-operator</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">spark-operator</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="string">http-metrics</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="string">10s</span> </span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/instance:</span> <span class="string">spark-operator</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/name:</span> <span class="string">spark-operator</span></span><br><span class="line">  <span class="attr">namespaceSelector:</span></span><br><span class="line">    <span class="attr">matchNames:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">spark</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>Spark</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes 接入基于 Cephadm 部署的 Ceph 集群</title>
    <url>/en-us/deploy-ceph-by-cephadm/</url>
    <content><![CDATA[<div class="note red flat"><p>Sorry, the current document does not have an English version. Click to switch to <a href="/deploy-ceph-by-cephadm/">Chinese</a>.</p>
</div>

<h1 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol>
<li>部署完毕的 Kubernetes 集群</li>
<li>在 Ceph 集群节点上安装：docker，cephadm，并且更新 cephadm 到最新版本，以及配置 Ceph 节点之间的 ssh 互信</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成公钥并导入到注册到每台服务器</span></span><br><span class="line">ssh-keygen</span><br><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub</span><br><span class="line">vim ~/.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 互相连接测试</span></span><br><span class="line">ssh root@10.0.16.33</span><br><span class="line">ssh root@10.0.16.34</span><br><span class="line">ssh root@10.0.16.35</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 /etc/hosts</span></span><br><span class="line">10.0.16.33 ceph1</span><br><span class="line">10.0.16.34 ceph2</span><br><span class="line">10.0.16.35 ceph3</span><br><span class="line"></span><br><span class="line"><span class="comment"># docker 安装</span></span><br><span class="line">apt-get update</span><br><span class="line">apt-get install -y \</span><br><span class="line">    apt-transport-https \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    gnupg-agent \</span><br><span class="line">    software-properties-common</span><br><span class="line">curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line">add-apt-repository -y \</span><br><span class="line">   <span class="string">&quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/ \</span></span><br><span class="line"><span class="string">  <span class="subst">$(lsb_release -cs)</span> \</span></span><br><span class="line"><span class="string">  stable&quot;</span></span><br><span class="line">apt-get update</span><br><span class="line">apt-get install -y docker-ce docker-ce-cli containerd.io</span><br><span class="line"></span><br><span class="line"><span class="comment"># cephadm 安装</span></span><br><span class="line">apt-get install -y cephadm</span><br><span class="line">cephadm add-repo --release reef</span><br><span class="line">cephadm install</span><br><span class="line">cephadm version</span><br></pre></td></tr></table></figure>

<div class="note red flat"><p><strong>最好不要修改 ceph 集群服务器的 ssh 默认端口，否则会导致 ceph 集群引导失败，如果修改了 ssh 的默认端口，则需要创建对应的 ssh 配置</strong><br>如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -pv /etc/ceph/</span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/ceph/ceph.ssh_config &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">Host *</span></span><br><span class="line"><span class="string">  Port 2222</span></span><br><span class="line"><span class="string">  StrictHostKeyChecking no</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<p>并在启动引导指定对应的 config</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cephadm bootstrap --ssh-config /etc/ceph/ceph.ssh_config ......</span><br></pre></td></tr></table></figure>
</div>

<h2 id="集群信息"><a href="#集群信息" class="headerlink" title="集群信息"></a>集群信息</h2><table>
<thead>
<tr>
<th><strong>主机名</strong></th>
<th><strong>IP</strong></th>
<th><strong>系统版本</strong></th>
<th><strong>备注</strong></th>
</tr>
</thead>
<tbody><tr>
<td>ceph1</td>
<td>10.0.16.33</td>
<td>ubuntu 22.04.3</td>
<td>Ceph 集群管理节点+osd节点</td>
</tr>
<tr>
<td>ceph2</td>
<td>10.0.16.34</td>
<td>ubuntu 22.04.3</td>
<td>Ceph 集群节点+osd节点</td>
</tr>
<tr>
<td>ceph3</td>
<td>10.0.16.35</td>
<td>ubuntu 22.04.3</td>
<td>Ceph 集群节点+osd节点</td>
</tr>
<tr>
<td>master1</td>
<td>10.0.16.36</td>
<td>ubuntu 22.04.3</td>
<td>K8S 控制平面</td>
</tr>
<tr>
<td>node1</td>
<td>10.0.16.37</td>
<td>ubuntu 22.04.3</td>
<td>K8S 工作节点</td>
</tr>
<tr>
<td>node2</td>
<td>10.0.16.38</td>
<td>ubuntu 22.04.3</td>
<td>K8S 工作节点</td>
</tr>
<tr>
<td>node3</td>
<td>10.0.16.39</td>
<td>ubuntu 22.04.3</td>
<td>K8S 工作节点</td>
</tr>
</tbody></table>
<h1 id="Ceph-集群部署"><a href="#Ceph-集群部署" class="headerlink" title="Ceph 集群部署"></a>Ceph 集群部署</h1><h2 id="在节点-ceph1-初始化整个集群"><a href="#在节点-ceph1-初始化整个集群" class="headerlink" title="在节点 ceph1 初始化整个集群"></a>在节点 ceph1 初始化整个集群</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cephadm bootstrap --log-to-file --mon-ip 10.0.16.33 --ssh-private-key /root/.ssh/id_rsa --ssh-public-key /root/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>

<div class="note blue flat"><h1 id="引导完毕后会出现默认配置，可以登录dashboard修改密码"><a href="#引导完毕后会出现默认配置，可以登录dashboard修改密码" class="headerlink" title="引导完毕后会出现默认配置，可以登录dashboard修改密码"></a>引导完毕后会出现默认配置，可以登录dashboard修改密码</h1><p>Ceph Dashboard is now available at:</p>
<p>  URL: <a href="https://ceph1:8443/">https://ceph1:8443/</a><br>  User: admin<br>  Password: 8ega86tepk</p>
<p>Enabling client.admin keyring and conf on hosts with “admin” label<br>Saving cluster configuration to &#x2F;var&#x2F;lib&#x2F;ceph&#x2F;80285dea-af83-11ee-83b8-23d931c2e040&#x2F;config directory<br>Enabling autotune for osd_memory_target<br>You can access the Ceph CLI as following in case of multi-cluster or non-default config:</p>
<p>  sudo &#x2F;usr&#x2F;sbin&#x2F;cephadm shell –fsid 80285dea-af83-11ee-83b8-23d931c2e040 -c &#x2F;etc&#x2F;ceph&#x2F;ceph.conf -k &#x2F;etc&#x2F;ceph&#x2F;ceph.client.admin.keyring</p>
<p>Or, if you are only running a single cluster on this host:</p>
<p>  sudo &#x2F;usr&#x2F;sbin&#x2F;cephadm shell</p>
<p>Please consider enabling telemetry to help improve Ceph:</p>
<p>  ceph telemetry on</p>
<p>For more information see:</p>
<p>  <a href="https://docs.ceph.com/en/latest/mgr/telemetry/">https://docs.ceph.com/en/latest/mgr/telemetry/</a></p>
<p>Bootstrap complete.</p>
</div>

<h2 id="在节点一上安装-ceph-相关管理工具"><a href="#在节点一上安装-ceph-相关管理工具" class="headerlink" title="在节点一上安装 ceph 相关管理工具"></a>在节点一上安装 ceph 相关管理工具</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cephadm install ceph-volume ceph-common ceph-osd ceph-mon</span><br></pre></td></tr></table></figure>

<h2 id="添加其他节点"><a href="#添加其他节点" class="headerlink" title="添加其他节点"></a>添加其他节点</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ceph orch host add ceph2 10.0.16.34</span><br><span class="line">ceph orch host add ceph3 10.0.16.35</span><br><span class="line">ceph orch apply mon --placement=<span class="string">&quot;ceph1,ceph2,ceph3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看集群 host 列表</span></span><br><span class="line">ceph orch host <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>

<h2 id="添加磁盘"><a href="#添加磁盘" class="headerlink" title="添加磁盘"></a>添加磁盘</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ceph orch daemon add osd ceph1:/dev/sdb</span><br><span class="line">ceph orch daemon add osd ceph1:/dev/sdc</span><br><span class="line">ceph orch daemon add osd ceph2:/dev/sdb</span><br><span class="line">ceph orch daemon add osd ceph2:/dev/sdc</span><br><span class="line">ceph orch daemon add osd ceph3:/dev/sdb</span><br><span class="line">ceph orch daemon add osd ceph3:/dev/sdc</span><br></pre></td></tr></table></figure>

<h2 id="创建-CephFS"><a href="#创建-CephFS" class="headerlink" title="创建 CephFS"></a>创建 CephFS</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建文件系统</span></span><br><span class="line">ceph fs volume create cephfs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在每个节点都配置 mds</span></span><br><span class="line">ceph orch apply mds cephfs --placement=<span class="string">&quot;ceph1,ceph2,ceph3&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="创建-RBD-存储池"><a href="#创建-RBD-存储池" class="headerlink" title="创建 RBD 存储池"></a>创建 RBD 存储池</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果是直接给 Kubernetes 用只需要创建存储池即可</span></span><br><span class="line">ceph osd pool create rbd.data 64 64 replicated</span><br><span class="line">rbd pool init rbd.data</span><br></pre></td></tr></table></figure>

<h1 id="性能测试"><a href="#性能测试" class="headerlink" title="性能测试"></a>性能测试</h1><h2 id="测试命令"><a href="#测试命令" class="headerlink" title="测试命令"></a>测试命令</h2><p>每次测试时间为三分钟</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 测试写入性能且不清理测试数据，后续用于测试读取性能</span></span><br><span class="line">rados bench -p rbd.data 180 write --no-cleanup</span><br><span class="line"></span><br><span class="line"><span class="comment"># 顺序读</span></span><br><span class="line">rados bench -p rbd.data 180 <span class="built_in">seq</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#随机读</span></span><br><span class="line">rados bench -p rbd.data 180 rand</span><br></pre></td></tr></table></figure>

<h2 id="写入性能"><a href="#写入性能" class="headerlink" title="写入性能"></a>写入性能</h2><p>  Total time run:         180.162     # 总体运行时间 (Total time run): 180.162秒，表示从测试开始到结束的总时间。<br>  Total writes made:      9728        # 总写入次数 (Total writes made): 9728次，表示在整个测试期间执行的总写入操作次数。<br>  Write size:             4194304     # 写入大小 (Write size): 4194304字节，每个写入操作的数据块大小，等于4MB。<br>  Object size:            4194304     # 对象大小 (Object size): 4194304字节，每个存储对象的大小，等于4MB。<br>  Bandwidth (MB&#x2F;sec):     215.984     # 平均带宽 (Average Bandwidth): 215.984 MB&#x2F;秒，表示平均每秒写入数据的量。<br>  Stddev Bandwidth:       34.9424     # 带宽标准差 (Stddev Bandwidth): 34.9424 MB&#x2F;秒，表示带宽测量值的波动程度。这个数字较大，表明带宽数据在测试期间波动了不少。<br>  Max bandwidth (MB&#x2F;sec): 400         # 最大带宽 (Max Bandwidth): 400 MB&#x2F;秒，测试期间的最高带宽记录。<br>  Min bandwidth (MB&#x2F;sec): 140         # 最小带宽 (Min Bandwidth): 140 MB&#x2F;秒，测试期间的最低带宽记录。<br>  Average IOPS:           53          # 平均IOPS (Average IOPS): 53，基于4MB写入操作的对象，平均每秒完成53个IOPS。<br>  Stddev IOPS:            8.73561     # IOPS标准差 (Stddev IOPS): 8.73561，IOPS数值的波动程度。<br>  Max IOPS:               100         # 最大IOPS (Max IOPS): 100，测试期间的最高IOPS记录。<br>  Min IOPS:               35          # 最小IOPS (Min IOPS): 35，测试期间的最低IOPS记录。<br>  Average Latency(s):     0.296262    # 平均延迟 (Average Latency): 0.296262秒，一次写入操作的平均完成时间。<br>  Stddev Latency(s):      0.211683    # 延迟标准差 (Stddev Latency): 0.211683秒，延迟测量值的波动程度。较低的标准差通常意味着延迟比较一致。<br>  Max latency(s):         0.83413     # 最大延迟 (Max Latency): 0.83413秒，测试期间的最高延迟。<br>  Min latency(s):         0.0194977   # 最小延迟 (Min Latency): 0.0194977秒，测试期间的最低延迟。</p>
<h2 id="顺序读取性能"><a href="#顺序读取性能" class="headerlink" title="顺序读取性能"></a>顺序读取性能</h2><p>这里因为读取速度较快，60秒就完成了读取</p>
<p>  Total time run:       60.2536<br>  Total reads made:     9728<br>  Read size:            4194304<br>  Object size:          4194304<br>  Bandwidth (MB&#x2F;sec):   645.804<br>  Average IOPS:         161<br>  Stddev IOPS:          31.5648<br>  Max IOPS:             331<br>  Min IOPS:             112<br>  Average Latency(s):   0.0982576<br>  Max latency(s):       1.32703<br>  Min latency(s):       0.00750698</p>
<h2 id="随机读取性能"><a href="#随机读取性能" class="headerlink" title="随机读取性能"></a>随机读取性能</h2><p>  Total time run:       180.251<br>  Total reads made:     29233<br>  Read size:            4194304<br>  Object size:          4194304<br>  Bandwidth (MB&#x2F;sec):   648.717<br>  Average IOPS:         162<br>  Stddev IOPS:          25.9462<br>  Max IOPS:             331<br>  Min IOPS:             104<br>  Average Latency(s):   0.0980925<br>  Max latency(s):       1.49632<br>  Min latency(s):       0.00163233</p>
<h2 id="清理数据"><a href="#清理数据" class="headerlink" title="清理数据"></a>清理数据</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rados -p rbd.data cleanup</span><br></pre></td></tr></table></figure>

<h1 id="使用-Rook-接入外部-Ceph"><a href="#使用-Rook-接入外部-Ceph" class="headerlink" title="使用 Rook 接入外部 Ceph"></a>使用 Rook 接入外部 Ceph</h1><div class="note yellow flat"><p><strong>K8S 接入外部 ceph 集群的最低要求为，外部 ceph 建立了 CephFS 以及 RBD 的相关存储池，需要存储池创建完毕并且集群健康状态处于 Healthy 的时候接入</strong></p>
</div>

<h2 id="导出当前-Ceph-的相关数据"><a href="#导出当前-Ceph-的相关数据" class="headerlink" title="导出当前 Ceph 的相关数据"></a>导出当前 Ceph 的相关数据</h2><div class="note tip flat"><p>Rook 官方提供了接入外部 Ceph 集群的相关脚本：<a href="https://github.com/rook/rook/blob/master/deploy/examples/">https://github.com/rook/rook/blob/master/deploy/examples/</a><br>其中 <code>create-external-cluster-resources.py</code> 为导出当前 Ceph 集群相关配置数据的脚本<br>执行完脚本会出现导出数据，需要留存</p>
</div>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在 ceph1 节点运行</span></span><br><span class="line">python3 create-external-cluster-resources.py --rbd-data-pool-name rbd.data --cephfs-filesystem-name cephfs --namespace rook-ceph-external --format bash</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> NAMESPACE=rook-ceph-external</span><br><span class="line"><span class="built_in">export</span> ROOK_EXTERNAL_FSID=6b6d577c-b035-11ee-8b7f-e51965640d97</span><br><span class="line"><span class="built_in">export</span> ROOK_EXTERNAL_USERNAME=client.healthchecker</span><br><span class="line"><span class="built_in">export</span> ROOK_EXTERNAL_CEPH_MON_DATA=ceph1=10.0.16.33:6789</span><br><span class="line"><span class="built_in">export</span> ROOK_EXTERNAL_USER_SECRET=AQAUnp9loTImDxAAYZiXyoTfPBO8v96/K+hj4Q==</span><br><span class="line"><span class="built_in">export</span> ROOK_EXTERNAL_DASHBOARD_LINK=https://10.0.16.33:8443/</span><br><span class="line"><span class="built_in">export</span> CSI_RBD_NODE_SECRET=AQAUnp9lkPeFFhAAviD9KRUZPQK0mjJ3Cr0bpA==</span><br><span class="line"><span class="built_in">export</span> CSI_RBD_NODE_SECRET_NAME=csi-rbd-node</span><br><span class="line"><span class="built_in">export</span> CSI_RBD_PROVISIONER_SECRET=AQAUnp9lZqecGxAA2aGz/HlFX4pW1suQjJXmGA==</span><br><span class="line"><span class="built_in">export</span> CSI_RBD_PROVISIONER_SECRET_NAME=csi-rbd-provisioner</span><br><span class="line"><span class="built_in">export</span> CEPHFS_POOL_NAME=cephfs.cephfs.data</span><br><span class="line"><span class="built_in">export</span> CEPHFS_METADATA_POOL_NAME=cephfs.cephfs.meta</span><br><span class="line"><span class="built_in">export</span> CEPHFS_FS_NAME=cephfs</span><br><span class="line"><span class="built_in">export</span> CSI_CEPHFS_NODE_SECRET=AQAUnp9lbdkFIBAAq1d4PMi0GDJP4G7uQrcHnA==</span><br><span class="line"><span class="built_in">export</span> CSI_CEPHFS_PROVISIONER_SECRET=AQAUnp9le2PSIxAAcgvsxgZ+GPJXYkv+u8B4vQ==</span><br><span class="line"><span class="built_in">export</span> CSI_CEPHFS_NODE_SECRET_NAME=csi-cephfs-node</span><br><span class="line"><span class="built_in">export</span> CSI_CEPHFS_PROVISIONER_SECRET_NAME=csi-cephfs-provisioner</span><br><span class="line"><span class="built_in">export</span> MONITORING_ENDPOINT=10.0.16.33</span><br><span class="line"><span class="built_in">export</span> MONITORING_ENDPOINT_PORT=9283</span><br><span class="line"><span class="built_in">export</span> RBD_POOL_NAME=rbd.data</span><br><span class="line"><span class="built_in">export</span> RGW_POOL_PREFIX=default</span><br></pre></td></tr></table></figure>

<h2 id="执行外部集群数据导入脚本"><a href="#执行外部集群数据导入脚本" class="headerlink" title="执行外部集群数据导入脚本"></a>执行外部集群数据导入脚本</h2><div class="note tip flat"><p><a href="https://github.com/rook/rook/blob/master/deploy/examples/">https://github.com/rook/rook/blob/master/deploy/examples/</a><br>其中 <code>import-external-cluster.sh</code> 为导入当前 Ceph 集群相关配置数据到 Kubernetes 的脚本，注意使用与当前 Kubernetes 集群部署的相同版本的 Rook，需要切换 tag 下载对应版本的脚本，如果没有部署过 Rook，可以直接使用最新的</p>
</div>

<p>当前 Kubernetes 集群使用的 Rook 版本为 1.10.2，故使用版本为：<a href="https://github.com/rook/rook/blob/release-1.10/deploy/examples/import-external-cluster.sh">https://github.com/rook/rook/blob/release-1.10/deploy/examples/import-external-cluster.sh</a></p>
<p>下载完脚本后，需要按照图示将之前导出的数据写入脚本</p>
<img src="/en-us/deploy-ceph-by-cephadm/script.webp" class="">

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --single-branch --branch release-1.10 https://github.com/rook/rook.git</span><br><span class="line"><span class="built_in">cd</span> rook</span><br><span class="line">git checkout v1.10.2</span><br><span class="line"><span class="built_in">cd</span> deploy/examples/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果之前没有安装过 Rook 则 apply 下面的配置文件先安装 Rook，如果已安装过 Rook，则不需要执行</span></span><br><span class="line">kubectl apply -f common.yaml</span><br><span class="line">kubectl apply -f crds.yaml</span><br><span class="line">kubectl apply -f operator.yaml</span><br></pre></td></tr></table></figure>

<h3 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f common-external.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在这一步修改 import-external-cluster.sh，添加 ceph 集群导出数据</span></span><br><span class="line">bash import-external-cluster.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待所有服务启动</span></span><br><span class="line">kubectl apply -f cluster-external.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看创建的存储类</span></span><br><span class="line">kubectl get sc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看集群状态</span></span><br><span class="line">kubectl -n rook-ceph-external  get CephCluster</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 csi 容器状态</span></span><br><span class="line">kubectl get pod -n rook-ceph</span><br></pre></td></tr></table></figure>

<img src="/en-us/deploy-ceph-by-cephadm/cluster.png" class="">

<h3 id="创建-PVC-测试"><a href="#创建-PVC-测试" class="headerlink" title="创建 PVC 测试"></a>创建 PVC 测试</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">rbd-pvc</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">ceph-rbd</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cephfs-pvc</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteMany</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">cephfs</span></span><br></pre></td></tr></table></figure>

<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="Prometheus"><a href="#Prometheus" class="headerlink" title="Prometheus"></a>Prometheus</h2><p>Cephadm 集群会自动启动一套 Prometheus 监控集群，相关配置如下（这里的端口不一定一致）：</p>
<table>
<thead>
<tr>
<th><strong>服务</strong></th>
<th><strong>地址</strong></th>
<th><strong>配置文件</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Alertmanager</td>
<td><a href="http://10.0.16.33:9093/">http://10.0.16.33:9093/</a></td>
<td>&#x2F;var&#x2F;lib&#x2F;ceph&#x2F;【集群ID】&#x2F;alertmanager.【所在host】&#x2F;etc&#x2F;alertmanager</td>
</tr>
<tr>
<td>Prometheus</td>
<td><a href="http://10.0.16.33:9095/">http://10.0.16.33:9095/</a></td>
<td>&#x2F;var&#x2F;lib&#x2F;ceph&#x2F;【集群ID】&#x2F;prometheus.【所在host】&#x2F;etc&#x2F;prometheus</td>
</tr>
<tr>
<td>Grafana</td>
<td><a href="https://10.0.16.33:3000/">https://10.0.16.33:3000/</a></td>
<td>&#x2F;var&#x2F;lib&#x2F;ceph&#x2F;【集群ID】&#x2F;grafana.【所在host】&#x2F;etc&#x2F;grafana</td>
</tr>
</tbody></table>
<h3 id="如果修改了对应配置，直接重启服务"><a href="#如果修改了对应配置，直接重启服务" class="headerlink" title="如果修改了对应配置，直接重启服务"></a>如果修改了对应配置，直接重启服务</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart ceph-【集群ID】@alertmanager.【所在host】.service</span><br><span class="line">systemctl restart ceph-【集群ID】@prometheus.【所在host】.service</span><br><span class="line">systemctl restart ceph-【集群ID】@grafana.【所在host】.service</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CloudNative</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>Storage</tag>
        <tag>Ceph</tag>
      </tags>
  </entry>
  <entry>
    <title>云原生体系下的CI/CD介绍</title>
    <url>/en-us/cicd-in-cloud-native/</url>
    <content><![CDATA[<div class="note red flat"><p>Sorry, the current document does not have an English version. Click to switch to <a href="/cicd-in-cloud-native/">Chinese</a>.</p>
</div>

<h1 id="CI-CD介绍"><a href="#CI-CD介绍" class="headerlink" title="CI&#x2F;CD介绍"></a>CI&#x2F;CD介绍</h1><h2 id="什么是CI-CD"><a href="#什么是CI-CD" class="headerlink" title="什么是CI&#x2F;CD"></a>什么是CI&#x2F;CD</h2><p>CI&#x2F;CD 是持续集成&#x2F;持续交付（Continuous Integration &#x2F; Continuous Delivery）的缩写，是一种开发流程和技术实践。CI&#x2F;CD 将软件开发过程中的自动化和快速迭代理念贯穿始终，并通过自动化工具、流程和原则来实现。</p>
<h2 id="DevOps-工作流程"><a href="#DevOps-工作流程" class="headerlink" title="DevOps 工作流程"></a>DevOps 工作流程</h2><p>典型的 DevOps 工作流程可以简化为 4 个阶段</p>
<ol>
<li>版本控制：这是存储和管理源代码的阶段，研发人员将代码通过版本控件（如 git，svn 等）保存到统一的代码管理仓库（github，gitlab 等），版本控件包含代码的不同版本。</li>
<li>持续集成：这是将源代码编译与验证的阶段，要求每当开发人员提交了新代码之后，就对整个应用进行构建，并对其执行全面的自动化测试集合。根据构建和测试结果，我们可以确定新代码和原有代码是否正确的集成在一起。</li>
<li>持续交付：持续交付是持续集成的延伸，修改后的代码可以通过自动构建工具来编译，并使其准备好交付给最终用户，它的目标在于让软件的构建、测试与发布变得更快以及更频繁。</li>
<li>持续部署：持续部署是在持续交付的基础上，把部署到生产环境的过程自动化。</li>
</ol>
<h2 id="CI-CD-相关工具介绍"><a href="#CI-CD-相关工具介绍" class="headerlink" title="CI&#x2F;CD 相关工具介绍"></a>CI&#x2F;CD 相关工具介绍</h2><ul>
<li>Gitlab：GitLab 是一个 Web-based 的 Git 代码仓库管理工具，它提供了 Git 托管、代码审查、问题跟踪、持续集成&#x2F;持续交付等功能。GitLab 分为社区版和企业版两个版本，可以自行部署在自己的服务器上或使用 GitLab 官方的 Cloud 版本；</li>
<li>Harbor：Harbor 是一个开源的容器镜像仓库，主要用于存储和分发 Docker 镜像，它支持“企业级”的功能，例如镜像签名、访问控制、LDAP 集成等。Harbor 提供了一个安全、可靠和可扩展的环境，帮助用户快速部署和管理 Docker 镜像；</li>
<li>Jenkins：开源的 CI&#x2F;CD 工具，可用于自动化软件构建、测试和部署，Jenkins 提供了各种插件和可扩展性，可以适应多种工作场景和技术栈；</li>
<li>Argo：Argo 是一个基于 Kubernetes 的开源工作流引擎，用于编排容器化应用的工作流，支持多个开发语言，可以帮助开发者更方便地创建和管理容器化应用；</li>
<li>CircleCI：CircleCI 是一个基于云计算的持续集成和持续交付 (CI&#x2F;CD) 平台，它能够使开发者无需花费大量时间在设置和维护构建管道上，只需要专注于代码编写和测试即可；</li>
<li>source-to-image(S2I)：S2I 是一个开源的工具，用于在源代码中构建可运行的镜像，它可以轻松地将源代码转换为镜像，将源代码和构建脚本打包在一起，并将其注入到基础镜像中，从而生成应用程序的可运行镜像。</li>
</ul>
<h1 id="云原生-Devops-工具链示意图"><a href="#云原生-Devops-工具链示意图" class="headerlink" title="云原生 Devops 工具链示意图"></a>云原生 Devops 工具链示意图</h1><img src="/en-us/cicd-in-cloud-native/cloud-native-devops.webp" class="">

<h1 id="流水线思想"><a href="#流水线思想" class="headerlink" title="流水线思想"></a>流水线思想</h1><p>流水线思想是指将软件开发、测试和部署等环节中的任务自动化，并将它们串联在一起形成一个流程。这个流程会在提交代码后触发，然后经过一系列的阶段，最终将代码从开发人员的环境中送到指定的环境中。<br>这个流程通常包括代码编译、自动化测试、代码静态分析、构建镜像、部署等多个步骤。流水线思想的目的是提高项目质量、加速发布周期和降低运行风险</p>
<h2 id="持续发布流水线"><a href="#持续发布流水线" class="headerlink" title="持续发布流水线"></a>持续发布流水线</h2><p>在云原生体系中持续交付的过程就是通过自动化工具将代码打包成可运行容器镜像的过程，我们使用 Jenkins 完成这些工作</p>
<h3 id="为程序编写-Dockerfile，用于构建镜像"><a href="#为程序编写-Dockerfile，用于构建镜像" class="headerlink" title="为程序编写 Dockerfile，用于构建镜像"></a>为程序编写 Dockerfile，用于构建镜像</h3><p>例如：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> golang:<span class="number">1.20</span>-alpine as Builder</span><br><span class="line"><span class="keyword">ARG</span> EXECUTABLE_APP</span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./ /app/</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app/</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> CGO_ENABLED=0 GOOS=linux go build -a -o <span class="variable">$&#123;EXECUTABLE_APP&#125;</span> ./main.go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> alpine:<span class="number">3</span></span><br><span class="line"><span class="keyword">ARG</span> EXECUTABLE_APP</span><br><span class="line"><span class="keyword">ENV</span> OPTIONS=<span class="string">&quot;&quot;</span> \</span><br><span class="line">    EXECUTABLE_APP=$&#123;EXECUTABLE_APP&#125;</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /opt/app</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> --from=0 /app/<span class="variable">$EXECUTABLE_APP</span> /opt/app/</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">chmod</span> +x /opt/app/<span class="variable">$&#123;EXECUTABLE_APP&#125;</span></span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">7000</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> <span class="built_in">exec</span> /opt/app/<span class="variable">$&#123;EXECUTABLE_APP&#125;</span> <span class="variable">$&#123;OPTIONS&#125;</span></span></span><br></pre></td></tr></table></figure>

<div class="note blue flat"><p>发生了什么？</p>
<ul>
<li>在此 Dockerfile 中，将源代码编译与运行镜像构建合在了一起，为多步构建<ul>
<li>拉取 <code>golang:1.20-alpine</code> 镜像作为源代码的 Builder</li>
<li>定义构建时参数 EXECUTABLE_APP：构建完后的二进制文件的名称</li>
<li>复制当前目录下的代码到 &#x2F;app 下</li>
<li>设定工作目录为 &#x2F;app</li>
<li>执行构建命令为 <code>CGO_ENABLED=0 GOOS=linux go build -a -o ${EXECUTABLE_APP} ./main.go</code></li>
<li>拉取 <code>alpine:3</code> 的镜像作为容器的运行环境</li>
<li>设置环境变量 OPTIONS 以及 EXECUTABLE_APP，将构建时参数赋值给对应的环境变量（因为构建时参数无法使用在 ENTRYPOINT 或 CMD 中）</li>
<li>设定工作目录为 &#x2F;opt&#x2F;app</li>
<li>将第一步构建好的二进制文件复制到 &#x2F;opt&#x2F;app&#x2F; 下</li>
<li>赋予构建完的二进制文件可执行权限</li>
<li>开放端口 7000</li>
<li>设置容器运行命令，使用 shell 模式，命令为：<code>/opt/app/${EXECUTABLE_APP} ${OPTIONS}</code></li>
</ul>
</li>
</ul>
</div>

<h3 id="构建容器并推送"><a href="#构建容器并推送" class="headerlink" title="构建容器并推送"></a>构建容器并推送</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker login -u 【镜像仓库用户名】 -p 【镜像仓库密码】 【镜像仓库地址】</span><br><span class="line"><span class="comment">#容器名称命名：镜像仓库地址/项目空间/名称:容器TAG : harbor.fs.com/sre/java-test:v1.0</span></span><br><span class="line">docker build --build-arg EXECUTABLE_APP=【构建后的可执行文件名称】 -t 【容器名称】 .</span><br><span class="line">docker push 【容器名称】</span><br></pre></td></tr></table></figure>

<h3 id="将以上流程自动化的Jenkins流水线写法"><a href="#将以上流程自动化的Jenkins流水线写法" class="headerlink" title="将以上流程自动化的Jenkins流水线写法"></a>将以上流程自动化的Jenkins流水线写法</h3><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">stage(<span class="string">&#x27;Prepare&#x27;</span>)&#123;</span><br><span class="line">  steps &#123;</span><br><span class="line">    container(<span class="string">&#x27;jnlp&#x27;</span>)&#123;</span><br><span class="line">      git <span class="attr">url:</span> <span class="string">&quot;【代码仓库地址】&quot;</span>,</span><br><span class="line">          <span class="symbol">credentialsId:</span> <span class="string">&#x27;【用于拉取代码的公钥】&#x27;</span>,</span><br><span class="line">          <span class="symbol">branch:</span> <span class="string">&quot;【对应的分支】&quot;</span>,</span><br><span class="line">          <span class="symbol">changelog:</span> <span class="literal">true</span></span><br><span class="line">      stash <span class="attr">includes:</span> <span class="string">&#x27;**/*&#x27;</span>, <span class="attr">name:</span> <span class="string">&#x27;app&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">stage(<span class="string">&#x27;Docker Build&#x27;</span>)&#123;</span><br><span class="line">  steps &#123;</span><br><span class="line">    container(<span class="string">&#x27;docker-cli&#x27;</span>)&#123;</span><br><span class="line">      unstash <span class="string">&#x27;app&#x27;</span></span><br><span class="line">      sh <span class="string">&quot;docker login -u 【镜像仓库用户名】 -p 【镜像仓库密码】 【镜像仓库地址】&quot;</span></span><br><span class="line">      sh <span class="string">&quot;docker build --build-arg EXECUTABLE_APP=【构建后的可执行文件名称】 -t 【容器名称】 .&quot;</span></span><br><span class="line">      sh <span class="string">&quot;docker push 【容器名称】&quot;</span></span><br><span class="line">      sh <span class="string">&quot;docker rmi 【容器名称】&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<div class="note blue flat"><p>发生了什么？</p>
<ul>
<li>在 Prepare 阶段，使用了 jenkins 的 git 插件拉取代码</li>
<li>使用 stash 插件压缩了当前目录（源代码目录）</li>
<li>在 Docker Build 阶段，解压了源代码目录并执行了构建</li>
</ul>
</div>

<h2 id="持续部署流水线"><a href="#持续部署流水线" class="headerlink" title="持续部署流水线"></a>持续部署流水线</h2><p>在云原生体系中持续部署的过程就是将已经打包好的可运行容器镜像，部署到我们的对应环境中，我们也可以使用 Jenkins 完成</p>
<h3 id="在-k8s-中提交-yaml-配置，生成对应的资源"><a href="#在-k8s-中提交-yaml-配置，生成对应的资源" class="headerlink" title="在 k8s 中提交 yaml 配置，生成对应的资源"></a>在 k8s 中提交 yaml 配置，生成对应的资源</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">【应用名称】</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">【应用名称】</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">      <span class="attr">port:</span> <span class="string">【应用端口】</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="string">【应用端口】</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">【应用名称】</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">【应用名称】</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">【应用名称】</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">【应用名称】</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">【应用名称】</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">【应用名称】</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">【镜像名称】</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="string">【应用端口】</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">【镜像拉取secret】</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f 配置.yaml</span><br></pre></td></tr></table></figure>

<h3 id="将以上流程自动化的Jenkins流水线写法-1"><a href="#将以上流程自动化的Jenkins流水线写法-1" class="headerlink" title="将以上流程自动化的Jenkins流水线写法"></a>将以上流程自动化的Jenkins流水线写法</h3><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">stage(<span class="string">&#x27;Deploy&#x27;</span>)&#123;</span><br><span class="line">  steps &#123;</span><br><span class="line">    container(<span class="string">&#x27;kubectl&#x27;</span>)&#123;</span><br><span class="line">      sh <span class="string">&quot;mkdir -p ~/.kube&quot;</span></span><br><span class="line">      sh <span class="string">&quot;echo 【K8S配置详情】 | base64 -d &gt; ~/.kube/config&quot;</span></span><br><span class="line">      script &#123;</span><br><span class="line">        writeFile <span class="attr">file:</span> <span class="string">&#x27;deploy.yaml&#x27;</span>, <span class="attr">text:</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">kind: Service</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    app: 【应用名称】</span></span><br><span class="line"><span class="string">  name: 【应用名称】</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  ports:</span></span><br><span class="line"><span class="string">    - name: http</span></span><br><span class="line"><span class="string">      port: 【应用端口】</span></span><br><span class="line"><span class="string">      protocol: TCP</span></span><br><span class="line"><span class="string">      targetPort: 【应用端口】</span></span><br><span class="line"><span class="string">  selector:</span></span><br><span class="line"><span class="string">    app: 【应用名称】</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: apps/v1</span></span><br><span class="line"><span class="string">kind: Deployment</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: 【应用名称】</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    app: 【应用名称】</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  replicas: 1</span></span><br><span class="line"><span class="string">  revisionHistoryLimit: 3</span></span><br><span class="line"><span class="string">  selector:</span></span><br><span class="line"><span class="string">    matchLabels:</span></span><br><span class="line"><span class="string">      app: 【应用名称】</span></span><br><span class="line"><span class="string">  template:</span></span><br><span class="line"><span class="string">    metadata:</span></span><br><span class="line"><span class="string">      labels:</span></span><br><span class="line"><span class="string">        app: 【应用名称】</span></span><br><span class="line"><span class="string">    spec:</span></span><br><span class="line"><span class="string">      containers:</span></span><br><span class="line"><span class="string">        - name: 【应用名称】</span></span><br><span class="line"><span class="string">          image: 【镜像名称】</span></span><br><span class="line"><span class="string">          imagePullPolicy: IfNotPresent</span></span><br><span class="line"><span class="string">          ports:</span></span><br><span class="line"><span class="string">            - containerPort: 【应用端口】</span></span><br><span class="line"><span class="string">      imagePullSecrets:</span></span><br><span class="line"><span class="string">        - name: 【镜像拉取secret】</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">      sh <span class="string">&quot;kubectl apply -f deploy.yaml&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<div class="note blue flat"><p>发生了什么？</p>
<ul>
<li>在 Deploy 阶段，将 k8s config 保存到当前用户的 ~&#x2F;.kube&#x2F;config 下，用于连接 k8s 集群</li>
<li>使用 writeFile 插件，生成了对应资源的 yaml 配置</li>
<li>将 yaml 配置应用到 k8s 集群</li>
</ul>
</div>

<h2 id="流水线解决了什么问题"><a href="#流水线解决了什么问题" class="headerlink" title="流水线解决了什么问题"></a>流水线解决了什么问题</h2><ol>
<li>避免环境差异<br>解决本地开发环境与线上环境不一致出现的问题，通过流水线来解耦，保持代码编译环境和打包环境一致，研发人员只需关注被打包好的容器镜像即可。</li>
<li>自动化<br>使用自动化的流水线来完成编译，发布和部署的过程，比起人工来说可以更加快速、准确地完成任务，防止人工因为粗心产生的错误。</li>
<li>阶段性任务<br>支持不同的构建或发布频率，可以以每周，每天，每小时为细粒度运行流水线，且构建与发布可以解耦，实现随时构建随时发布；<br>支持不同交付环境，随时选择对应的交付环境，在不同的环境上，执行不同的测试和验证。</li>
</ol>
<p>基于 kubernetes 的 CI&#x2F;CD 电子书：<a href="https://thenewstack.io/ebooks/kubernetes/ci-cd-with-kubernetes/">https://thenewstack.io/ebooks/kubernetes/ci-cd-with-kubernetes/</a></p>
]]></content>
      <categories>
        <category>CloudNative</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>DevOps</tag>
        <tag>Jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>从零实现CI/CD（一）- Jenkins的安装部署的多种方式</title>
    <url>/en-us/cicd-in-kubernetes-based-jenkins-1/</url>
    <content><![CDATA[<div class="note red flat"><p>Sorry, the current document does not have an English version. Click to switch to <a href="/cicd-in-kubernetes-based-jenkins-1/">Chinese</a>.</p>
</div>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>| <a href="https://jenkins.io/">Jenkins</a> 是一个开源的自动化服务器，主要用于自动化构建、测试和部署软件。它是基于Java开发的，可以在多种环境中运行，如 Linux，Windows 及其他类Unix操作系统。<br>| Jenkins 非常灵活，提供了丰富的插件系统，通过安装和配置这些插件，可以使 Jenkins 支持多种工具和平台，从而适应各种不同的 CI&#x2F;CD（持续集成&#x2F;持续部署）需求。<br>| Jenkins 能够帮助团队实现自动化构建、测试和部署，加速软件交付的速度。尽管 Jenkins 本身不是云原生产品，但通过与现代云技术的集成，它能够有效支持云原生应用的开发和运维工作。</p>
<h1 id="裸机部署"><a href="#裸机部署" class="headerlink" title="裸机部署"></a>裸机部署</h1><h2 id="基于-war-包的安装"><a href="#基于-war-包的安装" class="headerlink" title="基于 war 包的安装"></a>基于 war 包的安装</h2><h3 id="安装-java-环境"><a href="#安装-java-环境" class="headerlink" title="安装 java 环境"></a>安装 java 环境</h3><p>运行 jenkins 需要安装 java 环境，可选择使用 oracle-jdk 或 openjdk，此处采用安装 oracle-jdk 的方式<br>oracle-jdk 需要在 <a href="https://www.oracle.com/java/technologies/downloads/#java8">Oracle官网</a> 下载，下载后需要将对应的压缩包上传至服务器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#解压</span></span><br><span class="line">tar -zxvf jdk-8u321-linux-x64.tar.gz</span><br><span class="line"><span class="built_in">mv</span> jdk1.8.0_321 /usr/local/java8</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置环境变量</span></span><br><span class="line"><span class="built_in">cat</span> &gt;&gt; /etc/profile &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">#java env</span></span><br><span class="line"><span class="string">export JAVA_HOME=/usr/local/java8</span></span><br><span class="line"><span class="string">export JRE_HOME=\$JAVA_HOME/jre</span></span><br><span class="line"><span class="string">export CLASSPATH=.:\$JAVA_HOME/lib:\$JRE_HOME/lib</span></span><br><span class="line"><span class="string">export PATH=\$JAVA_HOME/bin:\$PATH</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#测试环境</span></span><br><span class="line">java -version</span><br><span class="line">javac</span><br><span class="line">java</span><br></pre></td></tr></table></figure>

<h3 id="下载-Jenkins-war-包"><a href="#下载-Jenkins-war-包" class="headerlink" title="下载 Jenkins war 包"></a>下载 Jenkins war 包</h3><p>可在 <a href="https://get.jenkins.io/">这个网站</a> 选择对应不同 war 版本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /data/jenkins</span><br><span class="line"><span class="built_in">cd</span> /data/jenkins</span><br><span class="line"><span class="comment"># 将下载完的 war 包上传至文件夹内</span></span><br></pre></td></tr></table></figure>

<p>使用supervisor托管</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[program:jenkins]</span></span><br><span class="line"><span class="attr">command</span>=/usr/local/java8/bin/java -jar /data/jenkins/jenkins.war</span><br><span class="line"><span class="attr">directory</span>=/data/jenkins</span><br><span class="line"><span class="attr">autostart</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">autorestart</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">user</span>=root</span><br><span class="line"><span class="attr">log_stdout</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">log_stderr</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">logfile</span>=/data/logs/jenkins/jenkins.log</span><br><span class="line"><span class="attr">logfile_maxbytes</span>=<span class="number">1</span>MB</span><br><span class="line"><span class="attr">logfile_backups</span>=<span class="number">10</span> </span><br><span class="line"><span class="attr">stdout_logfile</span> = /data/logs/jenkins/jenkins_stdout.log</span><br><span class="line"><span class="attr">stdout_logfile_maxbytes</span>=<span class="number">10</span>MB</span><br><span class="line"><span class="attr">stdout_logfile_backups</span>=<span class="number">3</span></span><br><span class="line"><span class="attr">environment</span>=JENKINS_HOME=<span class="string">&quot;/data/jenkins&quot;</span></span><br></pre></td></tr></table></figure>

<p>配置完成后，启动jenkins</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">supervisorctl reread</span><br><span class="line">supervisorctl start jenkins</span><br></pre></td></tr></table></figure>

<h2 id="基于-Docker-安装-Jenkins"><a href="#基于-Docker-安装-Jenkins" class="headerlink" title="基于 Docker 安装 Jenkins"></a>基于 Docker 安装 Jenkins</h2><h3 id="编写配置"><a href="#编写配置" class="headerlink" title="编写配置"></a>编写配置</h3><p>创建文件夹保存持久化数据</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -pv /data/jenkins/&#123;data,home&#125;</span><br></pre></td></tr></table></figure>

<p>编写 docker compose 配置</p>
<div class="note blue flat"><p>这里将 docker 的 sock 文件同步挂载是因为需要让 jenkins 的 docker 插件能够操作宿主机上的 docker</p>
</div>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.9&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">blueocean:</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&#x27;jenkinsci/blueocean:1.25.5&#x27;</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;/data/jenkins/home:/root&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;/var/run/docker.sock:/var/run/docker.sock&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;/data/jenkins/data:/var/jenkins_home&#x27;</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;50000:50000&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8080:8080&#x27;</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">jenkins</span></span><br><span class="line">        <span class="attr">user:</span> <span class="string">root</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure>

<h3 id="启动-jenkins"><a href="#启动-jenkins" class="headerlink" title="启动 jenkins"></a>启动 jenkins</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">compose-v1</button><button type="button" class="tab">compose-v2</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>

<h2 id="编写-nginx-配置"><a href="#编写-nginx-配置" class="headerlink" title="编写 nginx 配置"></a>编写 nginx 配置</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">upstream</span> jenkins &#123;</span><br><span class="line">  <span class="attribute">keepalive</span> <span class="number">32</span>; <span class="comment">#保持连接</span></span><br><span class="line">  <span class="attribute">server</span> <span class="number">127.0.0.1:8080</span>; <span class="comment">#代理地址</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#Jenkins websocket代理需要</span></span><br><span class="line"><span class="attribute">map</span> <span class="variable">$http_upgrade</span> <span class="variable">$connection_upgrade</span> &#123;</span><br><span class="line">  <span class="attribute">default</span> upgrade;</span><br><span class="line">  &#x27;&#x27; close;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="comment">#注意修改域名</span></span><br><span class="line">  <span class="attribute">server_name</span> [域名];</span><br><span class="line"></span><br><span class="line">  <span class="comment">#传递来自Jenkins的Nginx认为无效的头文件</span></span><br><span class="line">  <span class="attribute">ignore_invalid_headers</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">return</span> <span class="number">301</span> https://<span class="variable">$server_name</span><span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">  <span class="comment">#注意修改域名</span></span><br><span class="line">  <span class="attribute">server_name</span> [域名];</span><br><span class="line"></span><br><span class="line">  <span class="comment">#Jenkins的数据目录</span></span><br><span class="line">  <span class="attribute">root</span>            /data/jenkins/war/;</span><br><span class="line"></span><br><span class="line">  <span class="comment">#ssl配置</span></span><br><span class="line">  <span class="attribute">add_header</span> Strict-Transport-Security <span class="string">&quot;max-age=31536000&quot;</span>;</span><br><span class="line">  <span class="attribute">ssl_certificate</span>  [证书];</span><br><span class="line">  <span class="attribute">ssl_certificate_key</span>  [证书];</span><br><span class="line">  <span class="attribute">ssl_ciphers</span> <span class="string">&quot;ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4!3DES!ADH&quot;</span>;</span><br><span class="line">  <span class="attribute">ssl_protocols</span> TLSv1.<span class="number">2</span>;</span><br><span class="line">  <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">access_log</span>      /data/logs/nginx/jenkins-access.log;</span><br><span class="line">  <span class="attribute">error_log</span>       /data/logs/nginx/jenkins-<span class="literal">error</span>.log;</span><br><span class="line"></span><br><span class="line">  <span class="comment">#传递来自Jenkins的Nginx认为无效的头文件</span></span><br><span class="line">  <span class="attribute">ignore_invalid_headers</span> <span class="literal">off</span>;</span><br><span class="line"></span><br><span class="line">  <span class="section">location</span> <span class="regexp">~ &quot;^/static/[0-9a-fA-F]</span>&#123;8&#125;\/(.*)$&quot; &#123;</span><br><span class="line">    <span class="comment">#将所有静态文件重写为对根目录的请求</span></span><br><span class="line">    <span class="attribute">rewrite</span> <span class="string">&quot;^/static/[0-9a-fA-F]&#123;8&#125;\/(.*)&quot;</span> /<span class="variable">$1</span> <span class="literal">last</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line">      <span class="attribute">sendfile</span> <span class="literal">off</span>;</span><br><span class="line">      <span class="attribute">proxy_pass</span>         http://jenkins;</span><br><span class="line">      <span class="attribute">proxy_redirect</span>     default;</span><br><span class="line">      <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">#Jenkins websocket代理需要</span></span><br><span class="line">      <span class="attribute">proxy_set_header</span>   Connection        <span class="variable">$connection_upgrade</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span>   Upgrade           <span class="variable">$http_upgrade</span>;</span><br><span class="line"></span><br><span class="line">      <span class="attribute">proxy_set_header</span>   Host              <span class="variable">$host</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span>   X-Real-IP         <span class="variable">$remote_addr</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span>   X-Forwarded-For   <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span>   X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">      <span class="attribute">proxy_max_temp_file_size</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">#设置上传限制</span></span><br><span class="line">      <span class="attribute">client_max_body_size</span>       <span class="number">10m</span>;</span><br><span class="line">      <span class="attribute">client_body_buffer_size</span>    <span class="number">128k</span>;</span><br><span class="line"></span><br><span class="line">      <span class="attribute">proxy_connect_timeout</span>      <span class="number">90</span>;</span><br><span class="line">      <span class="attribute">proxy_send_timeout</span>         <span class="number">90</span>;</span><br><span class="line">      <span class="attribute">proxy_read_timeout</span>         <span class="number">90</span>;</span><br><span class="line">      <span class="attribute">proxy_buffering</span>            <span class="literal">off</span>;</span><br><span class="line">      <span class="attribute">proxy_request_buffering</span>    <span class="literal">off</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span> Connection <span class="string">&quot;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="基于-Kubernetes-Deployment-的-Jenkins-部署"><a href="#基于-Kubernetes-Deployment-的-Jenkins-部署" class="headerlink" title="基于 Kubernetes Deployment 的 Jenkins 部署"></a>基于 Kubernetes Deployment 的 Jenkins 部署</h1><h2 id="deployment-yaml"><a href="#deployment-yaml" class="headerlink" title="deployment.yaml"></a>deployment.yaml</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span>  <span class="string">jenkins-deployment</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">cicd</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span>  <span class="string">jenkins-deployment</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">jenkins-deployment</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span>  <span class="string">jenkins-deployment</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span>  <span class="string">jenkins-deployment</span></span><br><span class="line">        <span class="attr">image:</span>  <span class="string">jenkinsci/blueocean:1.25.5</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="number">2</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">4Gi</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="number">2</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">4Gi</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span>  <span class="number">8080</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">50000</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">agent</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">localtime</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/etc/localtime</span></span><br><span class="line">          <span class="comment">#持久化jenkins数据</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">jenkins-storage</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/var/jenkins_home</span></span><br><span class="line">          <span class="attr">subPath:</span> <span class="string">jenkins_home</span></span><br><span class="line">          <span class="comment">#把home目录挂载出来，防止容器重载后密钥丢失</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">jenkins-storage</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/root</span></span><br><span class="line">          <span class="attr">subPath:</span> <span class="string">root</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">docker-sock</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/var/run/docker.sock</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">localtime</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/etc/localtime</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">jenkins-storage</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">jenkins-storage</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">docker-sock</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/var/run/docker.sock</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line">      <span class="attr">securityContext:</span></span><br><span class="line">        <span class="attr">runAsUser:</span> <span class="number">0</span></span><br><span class="line">        <span class="attr">runAsGroup:</span> <span class="number">0</span></span><br><span class="line">        <span class="attr">fsGroup:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>

<h2 id="pvc-yaml"><a href="#pvc-yaml" class="headerlink" title="pvc.yaml"></a>pvc.yaml</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">jenkins-storage</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">cicd</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">jenkins-storage</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">ceph-rbd</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">50Gi</span></span><br></pre></td></tr></table></figure>

<h2 id="service-yaml"><a href="#service-yaml" class="headerlink" title="service.yaml"></a>service.yaml</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">jenkins</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">cicd</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">jenkins</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">jenkins-agent</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">50000</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">50000</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">jenkins-deployment</span></span><br></pre></td></tr></table></figure>

<h2 id="ingress-yaml"><a href="#ingress-yaml" class="headerlink" title="ingress.yaml"></a>ingress.yaml</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">jenkins.example.com</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">cicd</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ingressClassName:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">jenkins.example.com</span></span><br><span class="line">      <span class="attr">secretName:</span> [<span class="string">证书名称</span>]</span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">jenkins.example.com</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">pathType:</span> <span class="string">Prefix</span></span><br><span class="line">            <span class="attr">backend:</span></span><br><span class="line">              <span class="attr">service:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">jenkins</span></span><br><span class="line">                <span class="attr">port:</span></span><br><span class="line">                  <span class="attr">number:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure>

<div class="note red flat"><p>PS：注意配置文件中的存储类相关配置和ingress域名配置和证书配置</p>
</div>

<h2 id="启动-Jenkins"><a href="#启动-Jenkins" class="headerlink" title="启动 Jenkins"></a>启动 Jenkins</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f ./</span><br></pre></td></tr></table></figure>

<h1 id="初始化-jenkins"><a href="#初始化-jenkins" class="headerlink" title="初始化 jenkins"></a>初始化 jenkins</h1><h2 id="修改插件国内源下载（可选）"><a href="#修改插件国内源下载（可选）" class="headerlink" title="修改插件国内源下载（可选）"></a>修改插件国内源下载（可选）</h2><p>如果当前 Jenkins 部署在国内服务器时，下载插件会非常慢，需要我们替换成国内源下载</p>
<div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">war包或docker</button><button type="button" class="tab">kubernetes</button></div><div class="tab-contents"><div class="tab-item-content active"><p>找到 Jenkins 相关数据文件夹下的 hudson.model.UpdateCenter.xml 文件，将其中默认的源，修改为其他源</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&#x27;1.1&#x27; encoding=&#x27;UTF-8&#x27;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sites</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">site</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>default<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://updates.jenkins.io/update-center.json<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">site</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">sites</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>修改为</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&#x27;1.1&#x27; encoding=&#x27;UTF-8&#x27;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sites</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">site</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>default<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">site</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">sites</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><p>在 kubernetes 中，直接使用命令进入容器使用 sed 命令修改</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl <span class="built_in">exec</span> -it -n cicd pod 【jenkins pod名字】 -- sed -i <span class="string">&#x27;s#https://updates.jenkins.io/update-center.json#https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json#&#x27;</span> /var/jenkins_home/hudson.model.UpdateCenter.xml</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>
<div class="note blue flat"><p>这里使用的是清华源，也可以根据需要换成其他的源</p>
</div>

<h2 id="获取初始密码登录jenkins"><a href="#获取初始密码登录jenkins" class="headerlink" title="获取初始密码登录jenkins"></a>获取初始密码登录jenkins</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">war包或docker</button><button type="button" class="tab">kubernetes</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入对应的数据文件夹，获取 /secrets/initialAdminPassword 文件的内容</span></span><br><span class="line"><span class="built_in">cd</span> /data/jenkins/data</span><br><span class="line"><span class="built_in">cat</span> ./secrets/initialAdminPassword</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl <span class="built_in">exec</span> -it -n cicd pod 【jenkins pod名字】 -- <span class="built_in">cat</span> /var/jenkins_home/secrets/initialAdminPassword</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>

<h2 id="使用获取的密码登录，并初始化-Jenkins"><a href="#使用获取的密码登录，并初始化-Jenkins" class="headerlink" title="使用获取的密码登录，并初始化 Jenkins"></a>使用获取的密码登录，并初始化 Jenkins</h2><img src="/en-us/cicd-in-kubernetes-based-jenkins-1/jenkins-1.webp" class="">

<h2 id="选择安装推荐的插件"><a href="#选择安装推荐的插件" class="headerlink" title="选择安装推荐的插件"></a>选择安装推荐的插件</h2><img src="/en-us/cicd-in-kubernetes-based-jenkins-1/jenkins-2.webp" class="">

<h2 id="等待插件安装完毕设置管理员账号密码和邮箱"><a href="#等待插件安装完毕设置管理员账号密码和邮箱" class="headerlink" title="等待插件安装完毕设置管理员账号密码和邮箱"></a>等待插件安装完毕设置管理员账号密码和邮箱</h2><img src="/en-us/cicd-in-kubernetes-based-jenkins-1/jenkins-3.webp" class="">

<h2 id="安装完毕"><a href="#安装完毕" class="headerlink" title="安装完毕"></a>安装完毕</h2><img src="/en-us/cicd-in-kubernetes-based-jenkins-1/jenkins-4.webp" class="">
]]></content>
      <categories>
        <category>CloudNative</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>DevOps</tag>
        <tag>Jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>Ceph 常用命令</title>
    <url>/en-us/common-command-lines-for-ceph/</url>
    <content><![CDATA[<div class="note red flat"><p>Sorry, the current document does not have an English version. Click to switch to <a href="/common-command-lines-for-ceph/">Chinese</a>.</p>
</div>

<h1 id="Cluster"><a href="#Cluster" class="headerlink" title="Cluster"></a>Cluster</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 显示集群的状态</span></span><br><span class="line">ceph status 或 ceph -s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示集群健康状况</span></span><br><span class="line">ceph health</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看集群磁盘空间的使用情况</span></span><br><span class="line">ceph <span class="built_in">df</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示集群中正在运行的 Ceph 版本</span></span><br><span class="line">ceph version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有认证密钥</span></span><br><span class="line">ceph auth list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用于部署一个或多个集群服务实例，例如 MGR、MON、OSD、RGW 等</span></span><br><span class="line">ceph orch apply &lt;service_type&gt; [options]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示集群中当前运行的所有服务及其状态</span></span><br><span class="line">ceph orch ps</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出集群中配置的所有服务</span></span><br><span class="line">ceph orch <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加一个或多个 OSD 守护进程</span></span><br><span class="line">ceph orch daemon add osd &lt;host&gt;:&lt;path&gt; [--data-devices &lt;devices&gt;]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除一个 OSD 守护进程</span></span><br><span class="line">ceph orch daemon <span class="built_in">rm</span> osd &lt;osd_id&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出集群中每个主机上的所有设备及其状态</span></span><br><span class="line">ceph orch device <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  向集群中添加特定类型的守护进程</span></span><br><span class="line">ceph orch daemon add &lt;daemon_type&gt; &lt;host&gt; [options]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从集群中删除特定类型的守护进程</span></span><br><span class="line">ceph orch daemon <span class="built_in">rm</span> &lt;daemon_type&gt; &lt;host&gt; [options]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启特定类型的守护进程</span></span><br><span class="line">ceph orch daemon restart &lt;daemon_type&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新配置特定类型的守护进程</span></span><br><span class="line">ceph orch daemon reconfig &lt;daemon_type&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用指定的容器镜像开始升级集群</span></span><br><span class="line">ceph orch upgrade start --image &lt;container_image&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止正在进行的集群升级</span></span><br><span class="line">ceph orch upgrade stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取当前集群升级的状态信息</span></span><br><span class="line">ceph orch upgrade status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 Orchestrator 的状态和当前在用的后端</span></span><br><span class="line">ceph orch status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出集群中已知的主机</span></span><br><span class="line">ceph orch host <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将新主机添加到集群</span></span><br><span class="line">ceph orch host add &lt;hostname&gt; &lt;ip&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从集群中删除一个主机</span></span><br><span class="line">ceph orch host <span class="built_in">rm</span> &lt;hostname&gt;</span><br></pre></td></tr></table></figure>

<h1 id="OSD"><a href="#OSD" class="headerlink" title="OSD"></a>OSD</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看每个 OSD 的上线/下线状态</span></span><br><span class="line">ceph osd status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看集群 OSD 映射和状态</span></span><br><span class="line">ceph osd tree</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将指定的 OSD 设置为 out 状态，启动数据迁移</span></span><br><span class="line">ceph osd out &lt;osd.?&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将指定的 OSD 设置为 in 状态</span></span><br><span class="line">ceph osd <span class="keyword">in</span> &lt;osd.?&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除指定的 OSD</span></span><br><span class="line">ceph osd <span class="built_in">rm</span> &lt;osd.?&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新设置 OSD 的权重</span></span><br><span class="line">ceph osd reweight &lt;osd.?&gt; &lt;weight&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 OSD 的特定标志，例如 noout, noscrub 等</span></span><br><span class="line">ceph osd <span class="built_in">set</span> &lt;flag&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有存储池</span></span><br><span class="line">ceph osd lspools</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个新的存储池</span></span><br><span class="line">ceph osd pool create &lt;pool_name&gt; &lt;pg_num&gt; &lt;pgp_num&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除存储池</span></span><br><span class="line">ceph osd pool delete &lt;pool_name&gt; &lt;pool_name&gt; --yes-i-really-really-mean-it</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置存储池的参数</span></span><br><span class="line">ceph osd pool <span class="built_in">set</span> &lt;pool_name&gt; &lt;key&gt; &lt;value&gt;</span><br></pre></td></tr></table></figure>

<h1 id="MON"><a href="#MON" class="headerlink" title="MON"></a>MON</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 显示监控守护进程状态</span></span><br><span class="line">ceph mon <span class="built_in">stat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加新的监控守护进程</span></span><br><span class="line">ceph mon add &lt;name&gt; &lt;ip:port&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除监控守护进程</span></span><br><span class="line">ceph mon <span class="built_in">rm</span> &lt;name&gt;</span><br></pre></td></tr></table></figure>

<h1 id="MDS"><a href="#MDS" class="headerlink" title="MDS"></a>MDS</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 显示元数据服务器状态</span></span><br><span class="line">ceph mds <span class="built_in">stat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有 Ceph 文件系统</span></span><br><span class="line">ceph fs <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新的 Ceph 文件系统</span></span><br><span class="line">ceph fs new &lt;fs_name&gt; &lt;metadata_pool&gt; &lt;data_pool&gt;</span><br></pre></td></tr></table></figure>

<h1 id="Crash"><a href="#Crash" class="headerlink" title="Crash"></a>Crash</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看最近组件崩溃的历史</span></span><br><span class="line">ceph crash ls-new</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有组件崩溃的历史</span></span><br><span class="line">ceph crash <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看对应崩溃的详情</span></span><br><span class="line">ceph crash info &lt;<span class="built_in">id</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 归档对应的崩溃</span></span><br><span class="line">ceph crash archive &lt;<span class="built_in">id</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 归档所有</span></span><br><span class="line">ceph crash archive-all</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CloudNative</category>
      </categories>
      <tags>
        <tag>Storage</tag>
        <tag>Ceph</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes 日志收集（一）- 基于 SideCar 模式的日志收集</title>
    <url>/en-us/kubernetes-logging-collection-1/</url>
    <content><![CDATA[<div class="note red flat"><p>Sorry, the current document does not have an English version. Click to switch to <a href="/kubernetes-logging-collection-1/">Chinese</a>.</p>
</div>

<h1 id="架构图"><a href="#架构图" class="headerlink" title="架构图"></a>架构图</h1><img src="/en-us/kubernetes-logging-collection-1/kubernetes-logging-stack.webp" class="">

<h1 id="FluentBit-配置"><a href="#FluentBit-配置" class="headerlink" title="FluentBit 配置"></a>FluentBit 配置</h1><p>我们规定所有的日志都输出到 &#x2F;applogs 下</p>
<h2 id="fluent-bit-conf"><a href="#fluent-bit-conf" class="headerlink" title="fluent-bit.conf"></a>fluent-bit.conf</h2><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[SERVICE]</span></span><br><span class="line">  Flush             1</span><br><span class="line">  Log_Level         info</span><br><span class="line">  Daemon            off</span><br><span class="line">  HTTP_Server       off</span><br><span class="line">  Parsers_File      parsers.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置输入日志位置及tag</span></span><br><span class="line"><span class="section">[INPUT]</span></span><br><span class="line">  Name               tail</span><br><span class="line">  tag                kube.*</span><br><span class="line">  path               /applogs/*.log</span><br><span class="line">  Exclude_Path       /applogs/gc.log</span><br><span class="line">  Multiline          On</span><br><span class="line">  Parser_Firstline   java_log</span><br><span class="line">  DB                 /var/log/flb_logs.db</span><br><span class="line">  Buffer_Max_Size    5MB</span><br><span class="line">  Mem_Buf_Limit      5MB</span><br><span class="line">  Buffer_Chunk_Size  100KB</span><br><span class="line">  Refresh_Interval   5</span><br><span class="line">  Ignore_Older       10s</span><br><span class="line">  Rotate_Wait        5</span><br><span class="line"></span><br><span class="line"><span class="section">[INPUT]</span></span><br><span class="line">  Name               tail</span><br><span class="line">  tag                gc.*</span><br><span class="line">  path               /applogs/gc.log</span><br><span class="line">  Parser             java_log</span><br><span class="line">  DB                 /var/log/flb_logs.db</span><br><span class="line">  Buffer_Max_Size    5MB</span><br><span class="line">  Mem_Buf_Limit      5MB</span><br><span class="line">  Refresh_Interval   5</span><br><span class="line">  Ignore_Older       10s</span><br><span class="line">  Rotate_Wait        5</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加相关K8S环境字段，通过环境变量传入</span></span><br><span class="line"><span class="section">[FILTER]</span></span><br><span class="line">  Name               record_modifier</span><br><span class="line">  Match              *</span><br><span class="line">  Record             app $&#123;APP&#125;</span><br><span class="line">  Record             namespace $&#123;POD_NAMESPACE&#125;</span><br><span class="line">  Record             nodename $&#123;NODE_NAME&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#es采集配置 </span></span><br><span class="line"><span class="section">[OUTPUT]</span></span><br><span class="line">  Name               es</span><br><span class="line">  Match              kube.*</span><br><span class="line">  Host               elastic.example.com</span><br><span class="line">  Port               9200</span><br><span class="line">  Index              k8s-java-$&#123;APP&#125;</span><br><span class="line">  Replace_Dots       On</span><br><span class="line">  Retry_Limit        2</span><br><span class="line">  Buffer_Size        1MB</span><br><span class="line">  tls                On</span><br><span class="line">  tls.verify         Off</span><br><span class="line">  HTTP_User          elastic</span><br><span class="line">  HTTP_Passwd        password</span><br><span class="line">  Suppress_Type_Name On</span><br><span class="line"></span><br><span class="line"><span class="section">[OUTPUT]</span></span><br><span class="line">  Name               es</span><br><span class="line">  Match              gc.*</span><br><span class="line">  Host               elastic.example.com</span><br><span class="line">  Port               9200</span><br><span class="line">  Index              k8s-gc-$&#123;APP&#125;</span><br><span class="line">  Replace_Dots       On</span><br><span class="line">  Retry_Limit        2</span><br><span class="line">  Buffer_Size        1MB</span><br><span class="line">  tls                On</span><br><span class="line">  tls.verify         Off</span><br><span class="line">  HTTP_User          elastic</span><br><span class="line">  HTTP_Passwd        password</span><br><span class="line">  Suppress_Type_Name On</span><br></pre></td></tr></table></figure>

<h2 id="parsers-conf"><a href="#parsers-conf" class="headerlink" title="parsers.conf"></a>parsers.conf</h2><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[PARSER]</span></span><br><span class="line">  Name               java_log</span><br><span class="line">  Format             regex</span><br><span class="line">  Regex              /^(?&lt;time&gt;\d+-\d+-\d+\s\S+)(\s+)(?&lt;loglevel&gt;\w+)(\s+)\<span class="section">[(?&lt;thread&gt;[^\]]</span>+)\](\s+)\<span class="section">[(?&lt;caller&gt;[^\]]</span>+)\](\s+)-(\s+)(?&lt;message&gt;.*)/</span><br><span class="line">  Time_Key           time</span><br><span class="line">  Time_Format        %Y-%m-%d %H:%M:%S.%L</span><br><span class="line">  Time_Keep          On</span><br></pre></td></tr></table></figure>

<h1 id="Kubernetes-配置"><a href="#Kubernetes-配置" class="headerlink" title="Kubernetes 配置"></a>Kubernetes 配置</h1><h2 id="ConfigMap"><a href="#ConfigMap" class="headerlink" title="ConfigMap"></a>ConfigMap</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">java-logging-config</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">fluent-bit.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    [SERVICE]</span></span><br><span class="line"><span class="string">      Flush             1</span></span><br><span class="line"><span class="string">      Log_Level         info</span></span><br><span class="line"><span class="string">      Daemon            off</span></span><br><span class="line"><span class="string">      HTTP_Server       off</span></span><br><span class="line"><span class="string">      Parsers_File      parsers.conf</span></span><br><span class="line"><span class="string"></span>    </span><br><span class="line">    [<span class="string">INPUT</span>]</span><br><span class="line">      <span class="string">Name</span>               <span class="string">tail</span></span><br><span class="line">      <span class="string">tag</span>                <span class="string">kube.*</span></span><br><span class="line">      <span class="string">path</span>               <span class="string">/applogs/*.log</span></span><br><span class="line">      <span class="string">Exclude_Path</span>       <span class="string">/applogs/gc.log</span></span><br><span class="line">      <span class="string">Multiline</span>          <span class="string">On</span></span><br><span class="line">      <span class="string">Parser_Firstline</span>   <span class="string">java_log</span></span><br><span class="line">      <span class="string">DB</span>                 <span class="string">/var/log/flb_logs.db</span></span><br><span class="line">      <span class="string">Buffer_Max_Size</span>    <span class="string">5MB</span></span><br><span class="line">      <span class="string">Mem_Buf_Limit</span>      <span class="string">5MB</span></span><br><span class="line">      <span class="string">Buffer_Chunk_Size</span>  <span class="string">100KB</span></span><br><span class="line">      <span class="string">Refresh_Interval</span>   <span class="number">5</span></span><br><span class="line">      <span class="string">Ignore_Older</span>       <span class="string">10s</span></span><br><span class="line">      <span class="string">Rotate_Wait</span>        <span class="number">5</span></span><br><span class="line">    </span><br><span class="line">    [<span class="string">INPUT</span>]</span><br><span class="line">      <span class="string">Name</span>               <span class="string">tail</span></span><br><span class="line">      <span class="string">tag</span>                <span class="string">gc.*</span></span><br><span class="line">      <span class="string">path</span>               <span class="string">/applogs/gc.log</span></span><br><span class="line">      <span class="string">Parser</span>             <span class="string">java_log</span></span><br><span class="line">      <span class="string">DB</span>                 <span class="string">/var/log/flb_logs.db</span></span><br><span class="line">      <span class="string">Buffer_Max_Size</span>    <span class="string">5MB</span></span><br><span class="line">      <span class="string">Mem_Buf_Limit</span>      <span class="string">5MB</span></span><br><span class="line">      <span class="string">Refresh_Interval</span>   <span class="number">5</span></span><br><span class="line">      <span class="string">Ignore_Older</span>       <span class="string">10s</span></span><br><span class="line">      <span class="string">Rotate_Wait</span>        <span class="number">5</span></span><br><span class="line">    </span><br><span class="line">    [<span class="string">FILTER</span>]</span><br><span class="line">      <span class="string">Name</span>               <span class="string">record_modifier</span></span><br><span class="line">      <span class="string">Match</span>              <span class="string">*</span></span><br><span class="line">      <span class="string">Record</span>             <span class="string">app</span> <span class="string">$&#123;APP&#125;</span></span><br><span class="line">      <span class="string">Record</span>             <span class="string">namespace</span> <span class="string">$&#123;POD_NAMESPACE&#125;</span></span><br><span class="line">      <span class="string">Record</span>             <span class="string">nodename</span> <span class="string">$&#123;NODE_NAME&#125;</span></span><br><span class="line">    </span><br><span class="line">    [<span class="string">OUTPUT</span>]</span><br><span class="line">      <span class="string">Name</span>               <span class="string">es</span></span><br><span class="line">      <span class="string">Match</span>              <span class="string">kube.*</span></span><br><span class="line">      <span class="string">Host</span>               <span class="string">elastic.example.com</span></span><br><span class="line">      <span class="string">Port</span>               <span class="number">9200</span></span><br><span class="line">      <span class="string">Index</span>              <span class="string">k8s-java-$&#123;APP&#125;</span></span><br><span class="line">      <span class="string">Replace_Dots</span>       <span class="string">On</span></span><br><span class="line">      <span class="string">Retry_Limit</span>        <span class="number">2</span></span><br><span class="line">      <span class="string">Buffer_Size</span>        <span class="string">1MB</span></span><br><span class="line">      <span class="string">tls</span>                <span class="string">On</span></span><br><span class="line">      <span class="string">tls.verify</span>         <span class="string">Off</span></span><br><span class="line">      <span class="string">HTTP_User</span>          <span class="string">elastic</span></span><br><span class="line">      <span class="string">HTTP_Passwd</span>        <span class="string">password</span></span><br><span class="line">      <span class="string">Suppress_Type_Name</span> <span class="string">On</span></span><br><span class="line">    </span><br><span class="line">    [<span class="string">OUTPUT</span>]</span><br><span class="line">      <span class="string">Name</span>               <span class="string">es</span></span><br><span class="line">      <span class="string">Match</span>              <span class="string">gc.*</span></span><br><span class="line">      <span class="string">Host</span>               <span class="string">elastic.example.com</span></span><br><span class="line">      <span class="string">Port</span>               <span class="number">9200</span></span><br><span class="line">      <span class="string">Index</span>              <span class="string">k8s-gc-$&#123;APP&#125;</span></span><br><span class="line">      <span class="string">Replace_Dots</span>       <span class="string">On</span></span><br><span class="line">      <span class="string">Retry_Limit</span>        <span class="number">2</span></span><br><span class="line">      <span class="string">Buffer_Size</span>        <span class="string">1MB</span></span><br><span class="line">      <span class="string">tls</span>                <span class="string">On</span></span><br><span class="line">      <span class="string">tls.verify</span>         <span class="string">Off</span></span><br><span class="line">      <span class="string">HTTP_User</span>          <span class="string">elastic</span></span><br><span class="line">      <span class="string">HTTP_Passwd</span>        <span class="string">password</span></span><br><span class="line">      <span class="string">Suppress_Type_Name</span> <span class="string">On</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">parsers.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    [PARSER]</span></span><br><span class="line"><span class="string">      Name               java_log</span></span><br><span class="line"><span class="string">      Format             regex</span></span><br><span class="line"><span class="string">      Regex              /^(?&lt;time&gt;\d+-\d+-\d+\s\S+)(\s+)(?&lt;loglevel&gt;\w+)(\s+)\[(?&lt;thread&gt;[^\]]+)\](\s+)\[(?&lt;caller&gt;[^\]]+)\](\s+)-(\s+)(?&lt;message&gt;.*)/</span></span><br><span class="line"><span class="string">      Time_Key           time</span></span><br><span class="line"><span class="string">      Time_Format        %Y-%m-%d %H:%M:%S.%L</span></span><br><span class="line"><span class="string">      Time_Keep          On</span></span><br></pre></td></tr></table></figure>

<h2 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-java-application</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">my-java-application</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">my-java-application</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">my-java-application</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="comment">#原始应用容器</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">my-java-application</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">my-java-application:test</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">          <span class="comment">#日志所在卷挂载</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/applogs</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">log-volume</span></span><br><span class="line">        <span class="comment">#fluentbit sidecar</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">fluentbit-logger</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">fluent/fluent-bit:1.9</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="comment">#传入k8s相关元数据到环境变量</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NODE_NAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">spec.nodeName</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">APP</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.labels[&#x27;app&#x27;]</span></span><br><span class="line">          <span class="comment">#配置和日志卷挂载</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/fluent-bit/etc</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/applogs</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">log-volume</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">java-logging-config</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">log-volume</span></span><br><span class="line">          <span class="attr">emptyDir:</span> &#123;&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CloudNative</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>Logging</tag>
      </tags>
  </entry>
  <entry>
    <title>Rook-ceph 开启卷快照功能</title>
    <url>/en-us/volume-snapshots-with-rook-ceph/</url>
    <content><![CDATA[<div class="note red flat"><p>Sorry, the current document does not have an English version. Click to switch to <a href="/volume-snapshots-with-rook-ceph/">Chinese</a>.</p>
</div>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>CSI Snapshotter 为 Kubernetes 容器存储接口（CSI）提供了创建卷快照（VolumeSnapshot）的功能。<br>它定义了三种容器自定义资源定义 (Custom Resource Definition)，分别为 VolumeSnapshot，VolumeSnapshotContent 和 VolumeSnapshotClass。<br>卷快照的功能在 Kubernetes v1.12 中作为 Alpha 功能引入，并在 Kubernetes 1.17 中提升为 Beta 功能。在 Kubernetes 1.20 中，卷快照功能移至 GA。<br>如果 Rook 所在的 Kubernetes 集群版本过低，可能需要使用低版本的 CSI Snapshotter，具体参考官方原文：</p>
<div class="note blue flat"><p>If only Alpha snapshots are available, enable snapshotter in rook-ceph-operator-config or helm chart values.yaml, change the external-snapshotter image to registry.k8s.io&#x2F;sig-storage&#x2F;csi-snapshotter:v1.2.2 and refer to the <a href="https://github.com/rook/rook/blob/release-1.3/Documentation/ceph-csi-drivers.md#rbd-snapshots">alpha snapshots documentation</a><br>VolumeSnapshot betav1 is deprecated in Kubernetes 1.20+ and removed in 1.24.0. If you still require betav1 snapshots, change the external-snapshotter image to registry.k8s.io&#x2F;sig-storage&#x2F;csi-snapshotter:v5.0.1 and refer to the <a href="https://rook.github.io/docs/rook/v1.8/ceph-csi-snapshot.html#rbd-snapshots">betav1 snapshots documentation</a></p>
<p>译：如果只有 Alpha 快照可用，请在 rook-ceph-operator-config 或 helm Chart values.yaml 中启用快照程序，将外部快照程序图像更改为 registry.k8s.io&#x2F;sig-storage&#x2F;csi-snapshotter:v1.2.2 并参考 <a href="https://github.com/rook/rook/blob/release-1.3/Documentation/ceph-csi-drivers.md#rbd-snapshots">alpha 快照文档</a><br>VolumeSnapshot betav1 在 Kubernetes 1.20+ 中已弃用，并在 1.24.0 中删除。如果您仍然需要 betav1 快照，请将外部快照映像更改为 registry.k8s.io&#x2F;sig-storage&#x2F;csi-snapshotter:v5.0.1 并参阅 <a href="https://rook.github.io/docs/rook/v1.8/ceph-csi-snapshot.html#rbd-snapshots">betav1 快照文档</a></p>
</div>

<p>本文基于 CSI Snapshotter 7.0.1、Rook Ceph 1.10.2、Kubernetes 1.23.8，如果没有安装过 Rook-ceph 可以参考：<a href="https://blog.2nfree.com/2023/02/17/deploy-rook-ceph-on-k8s/">安装 Rook Ceph 作为 K8S 的存储服务</a> 或 <a href="https://blog.2nfree.com/2024/01/12/deploy-ceph-by-cephadm/">Kubernetes 接入基于 Cephadm 部署的 Ceph 集群</a></p>
<h1 id="安装-Snapshot-Controller"><a href="#安装-Snapshot-Controller" class="headerlink" title="安装 Snapshot-Controller"></a>安装 Snapshot-Controller</h1><h2 id="导入-crd-与-安装-snapshot-controller"><a href="#导入-crd-与-安装-snapshot-controller" class="headerlink" title="导入 crd 与 安装 snapshot-controller"></a>导入 crd 与 安装 snapshot-controller</h2><p>Github：<a href="https://github.com/kubernetes-csi/external-snapshotter">Snapshotter</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b release-7.0 https://github.com/kubernetes-csi/external-snapshotter.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入 crd</span></span><br><span class="line">kubectl kustomize external-snapshotter/client/config/crd | kubectl create -f -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 snapshot-controller</span></span><br><span class="line">kubectl -n kube-system kustomize external-snapshotter/client/config/snapshot-controller| kubectl create -f -</span><br></pre></td></tr></table></figure>

<p>如果只需要使用基于 Rook-ceph 的卷快照的话，csi-snapshotter 不需要安装，Rook-ceph 的 csi 中已经包含了了这部分的功能</p>
<table>
<thead>
<tr>
<th>功能</th>
<th>CSI-Snapshotter</th>
<th>Rook-Ceph</th>
</tr>
</thead>
<tbody><tr>
<td>支持的卷类型</td>
<td>所有 CSI 卷</td>
<td>CephFS 卷和 RBD 卷等</td>
</tr>
<tr>
<td>快照管理</td>
<td>使用 Kubernetes 内置的快照 API</td>
<td>使用 Rook-Ceph 提供的原生工具</td>
</tr>
<tr>
<td>可扩展性</td>
<td>支持新的 CSI 卷驱动程序</td>
<td>支持新的 Ceph 功能</td>
</tr>
</tbody></table>
<h2 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get crd | grep snap</span><br><span class="line"></span><br><span class="line">kubectl get pod -n kube-system -l app.kubernetes.io/name=snapshot-controller</span><br></pre></td></tr></table></figure>

<h1 id="配置卷快照类"><a href="#配置卷快照类" class="headerlink" title="配置卷快照类"></a>配置卷快照类</h1><p>就像 StorageClass 为管理员提供了一种在配置卷时描述其提供的存储“类”的方法一样，VolumeSnapshotClass 也提供了一种在配置卷快照时描述存储“类”的方法。</p>
<h2 id="ceph-rbd-snapclass"><a href="#ceph-rbd-snapclass" class="headerlink" title="ceph-rbd-snapclass"></a>ceph-rbd-snapclass</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">snapshot.storage.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">VolumeSnapshotClass</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ceph-rbd-snapclass</span></span><br><span class="line"><span class="attr">driver:</span> <span class="string">rook-ceph.rbd.csi.ceph.com</span></span><br><span class="line"><span class="attr">parameters:</span></span><br><span class="line">  <span class="attr">clusterID:</span> <span class="string">rook-ceph-external</span></span><br><span class="line">  <span class="attr">csi.storage.k8s.io/snapshotter-secret-name:</span> <span class="string">rook-csi-rbd-provisioner</span></span><br><span class="line">  <span class="attr">csi.storage.k8s.io/snapshotter-secret-namespace:</span> <span class="string">rook-ceph-external</span></span><br><span class="line"><span class="attr">deletionPolicy:</span> <span class="string">Delete</span></span><br></pre></td></tr></table></figure>

<h2 id="cephfs-snapclass"><a href="#cephfs-snapclass" class="headerlink" title="cephfs-snapclass"></a>cephfs-snapclass</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">snapshot.storage.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">VolumeSnapshotClass</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cephfs-snapclass</span></span><br><span class="line"><span class="attr">driver:</span> <span class="string">rook-ceph.cephfs.csi.ceph.com</span></span><br><span class="line"><span class="attr">parameters:</span></span><br><span class="line">  <span class="attr">clusterID:</span> <span class="string">rook-ceph-external</span></span><br><span class="line">  <span class="attr">csi.storage.k8s.io/snapshotter-secret-name:</span> <span class="string">rook-csi-cephfs-provisioner</span></span><br><span class="line">  <span class="attr">csi.storage.k8s.io/snapshotter-secret-namespace:</span> <span class="string">rook-ceph-external</span></span><br><span class="line"><span class="attr">deletionPolicy:</span> <span class="string">Delete</span></span><br></pre></td></tr></table></figure>

<h2 id="配置解析"><a href="#配置解析" class="headerlink" title="配置解析"></a>配置解析</h2><p>每个 VolumeSnapshotClass 包含字段 driver 、 deletionPolicy 和 parameters ，当需要动态配置属于该类的 VolumeSnapshot 时使用这些字段。</p>
<ul>
<li>driver：卷快照类有一个驱动程序，用于确定使用什么 CSI 卷插件来配置 VolumeSnapshots。必须指定该字段；对于 Rook-ceph 来说，RBD 为：rook-ceph.rbd.csi.ceph.com、CephFS 为：rook-ceph.cephfs.csi.ceph.com</li>
<li>deletionPolicy：卷快照类具有删除策略。它使您能够配置当要删除与 VolumeSnapshotContent 绑定的 VolumeSnapshot 对象时，该内容会发生什么情况。卷快照类的deletionPolicy可以是 Retain 或 Delete 。必须指定该字段。如果删除策略为 Delete ，则底层存储快照将与 VolumeSnapshotContent 对象一起删除。如果删除策略为 Retain ，则底层快照和 VolumeSnapshotContent 都会保留。</li>
<li>parameters：这里的参数需要我们填写对应的 Ceph 集群的名称以及连接到集群的 secret 相关配置</li>
</ul>
<h2 id="查看配置的卷快照类"><a href="#查看配置的卷快照类" class="headerlink" title="查看配置的卷快照类"></a>查看配置的卷快照类</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get volumesnapshotclasses.snapshot.storage.k8s.io</span><br></pre></td></tr></table></figure>

<h1 id="创建快照测试"><a href="#创建快照测试" class="headerlink" title="创建快照测试"></a>创建快照测试</h1><p>格式：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">snapshot.storage.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">VolumeSnapshot</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">【快照名称】</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">volumeSnapshotClassName:</span> <span class="string">【快照存储类】</span></span><br><span class="line">  <span class="attr">source:</span></span><br><span class="line">    <span class="attr">persistentVolumeClaimName:</span> <span class="string">【需要备份的</span> <span class="string">PVC</span> <span class="string">名称，需要与快照存储类使用同一CSI】</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;<span class="string">&quot;EOF&quot;</span></span><br><span class="line">apiVersion: snapshot.storage.k8s.io/v1</span><br><span class="line">kind: VolumeSnapshot</span><br><span class="line">metadata:</span><br><span class="line">  name: mypvc-snap</span><br><span class="line">spec:</span><br><span class="line">  volumeSnapshotClassName: ceph-rbd-snapclass</span><br><span class="line">  <span class="built_in">source</span>:</span><br><span class="line">    persistentVolumeClaimName: mypvc</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<h1 id="恢复快照测试"><a href="#恢复快照测试" class="headerlink" title="恢复快照测试"></a>恢复快照测试</h1><p>格式：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">【PVC</span> <span class="string">名称】</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">【存储类】</span></span><br><span class="line">  <span class="attr">dataSource:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">【快照名称】</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">VolumeSnapshot</span></span><br><span class="line">    <span class="attr">apiGroup:</span> <span class="string">snapshot.storage.k8s.io</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">1Gi</span> <span class="comment"># 这里的大小可以大于原始快照的大小</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;<span class="string">&quot;EOF&quot;</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: mypvc-restore</span><br><span class="line">spec:</span><br><span class="line">  storageClassName: ceph-rbd-snapclass</span><br><span class="line">  dataSource:</span><br><span class="line">    name: mypvc-snap</span><br><span class="line">    kind: VolumeSnapshot</span><br><span class="line">    apiGroup: snapshot.storage.k8s.io</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 1Gi <span class="comment"># 这里的大小可以大于原始快照的大小</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CloudNative</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>Storage</tag>
        <tag>Ceph</tag>
      </tags>
  </entry>
  <entry>
    <title>KEDA - 基于 Kubernetes 的事件驱动自动缩放器</title>
    <url>/en-us/keda/</url>
    <content><![CDATA[<div class="note red flat"><p>Sorry, the current document does not have an English version. Click to switch to <a href="/keda/">Chinese</a>.</p>
</div>

<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>KEDA（全称：Kubernetes-based Event Driven Autoscaler）是一个基于 Kubernetes 的事件驱动自动缩放器。 借助 KEDA，可以根据需要处理的事件数量来驱动 Kubernetes 中任何容器的扩展。</p>
<p>KEDA 是一个单一用途的轻量级组件，可以添加到任何 Kubernetes 集群中。 KEDA 与 Horizontal Pod Autoscaler 等标准 Kubernetes 组件一起工作，可以扩展功能而无需覆盖或重复。</p>
<p>借助 KEDA，您可以明确映射要使用事件驱动规模的应用程序，而其他应用程序继续运行。</p>
<p>优点：</p>
<ul>
<li>为 Kubernetes 集群中的每个工作负载提供丰富的扩展能力</li>
<li>智能扩展您的事件驱动应用程序</li>
<li>适用于各种云平台、数据库、消息传递系统、遥测系统、CI&#x2F;CD 等的 50 多个内置触发器</li>
<li>支持各种工作负载类型</li>
<li>支持跨各种云提供商和产品的触发器</li>
</ul>
<h1 id="原理图"><a href="#原理图" class="headerlink" title="原理图"></a>原理图</h1><img src="/en-us/keda/keda.webp" class="">

<h1 id="部署-Keda"><a href="#部署-Keda" class="headerlink" title="部署 Keda"></a>部署 Keda</h1><h2 id="使用-helm-部署"><a href="#使用-helm-部署" class="headerlink" title="使用 helm 部署"></a>使用 helm 部署</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm repo add kedacore https://kedacore.github.io/charts</span><br><span class="line">helm repo update</span><br><span class="line">helm install keda kedacore/keda --namespace keda --create-namespace</span><br></pre></td></tr></table></figure>

<p>如果需要使用不同版本的 crd，可以访问 <a href="https://github.com/kedacore/keda/releases">Keda Release</a> 使用其中的 <code>keda-2.xx.x-crds.yaml</code> 文件</p>
<h2 id="使用-Manifest-文件"><a href="#使用-Manifest-文件" class="headerlink" title="使用 Manifest 文件"></a>使用 Manifest 文件</h2><p>访问 <a href="https://github.com/kedacore/keda/releases">Keda Release</a> 获取 Manifest 文件<br>其中 <code>keda-2.xx.x.yaml</code> 是包含所有功能的 Keda（包括Admission Webhooks）<br><code>keda-2.xx.x-core.yaml</code> 是安装所需的最少 KEDA 组件（不包含Admission Webhooks）</p>
<p>关于 <a href="https://keda.sh/docs/concepts/admission-webhooks/">Admission Webhooks</a></p>
<div class="note red flat"><p>注意事项：<br>如果在 apply manifest 文件过程中出现了报错，请参考 <a href="https://github.com/kedacore/keda/issues/4740">ISSUE</a> 使用 <code>kubectl apply --server-side -f ...</code></p>
</div>

<h1 id="CRD资源"><a href="#CRD资源" class="headerlink" title="CRD资源"></a>CRD资源</h1><p>安装 KEDA 时，它会创建四个自定义资源，这些自定义资源使您能够将事件源（以及对该事件源的身份验证）映射到 Deployment、StatefulSet、自定义资源或 Job 以进行扩展。</p>
<ul>
<li>scaledobjects.keda.sh：表示事件源（例如 Rabbit MQ）与 Kubernetes Deployment、StatefulSet 或定义 &#x2F;scale 子资源的任何自定义资源之间所需的映射。</li>
<li>scaledjobs.keda.sh：表示事件源和 Kubernetes Job 之间的映射。</li>
<li>triggerauthentications.keda.sh：包含用于监视事件源的身份验证配置或 Secret。</li>
<li>clustertriggerauthentications.keda.sh：包含用于监视事件源的身份验证配置或 Secret。</li>
</ul>
<p>其中调度事件源如下所示：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">keda.sh/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ScaledObject</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> &#123;<span class="string">scaled-object-name</span>&#125;</span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="comment"># 对目标资源的引用，如Deployment 、 StatefulSet 或自定义资源</span></span><br><span class="line">  <span class="attr">scaleTargetRef:</span></span><br><span class="line">    <span class="comment"># 可选值，目标资源的 api 版本，默认为 apps/v1</span></span><br><span class="line">    <span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line">    <span class="comment"># 可选值，目标资源的类型，默认为 Deployment</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line">    <span class="comment"># 必填值，目标资源的名称，必须和 ScaledObject 在同一个命名空间</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="comment"># 可选值，目标资源监听容器名称，默认为 .spec.template.spec.containers[0]</span></span><br><span class="line">    <span class="attr">envSourceContainerName:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="comment"># 可选值，轮询间隔，默认为 30 秒</span></span><br><span class="line">  <span class="attr">pollingInterval:</span>  <span class="number">30</span></span><br><span class="line">  <span class="comment"># 可选值，最后一个触发器报告活动后将资源缩放回 0 之前等待的时间，默认为 5 分钟</span></span><br><span class="line">  <span class="attr">cooldownPeriod:</span>   <span class="number">300</span></span><br><span class="line">  <span class="comment"># 可选值，空闲副本计数，默认为忽略改选项，该属性唯一支持的值为 0</span></span><br><span class="line">  <span class="comment"># 如果设置了此属性，KEDA 会将资源缩减至此副本数</span></span><br><span class="line">  <span class="comment"># 如果目标触发器上有一些活动，KEDA 会立即将目标资源扩展至minReplicaCount，然后由 HPA 处理扩展</span></span><br><span class="line">  <span class="attr">idleReplicaCount:</span> <span class="number">0</span></span><br><span class="line">  <span class="comment"># 可选值，最小副本数，默认值为 0</span></span><br><span class="line">  <span class="attr">minReplicaCount:</span>  <span class="number">1</span></span><br><span class="line">  <span class="comment"># 可选值，最大副本数，默认值为 100</span></span><br><span class="line">  <span class="attr">maxReplicaCount:</span>  <span class="number">100</span></span><br><span class="line">  <span class="comment"># 定义了在缩放器处于错误状态时要回退至多少副本数</span></span><br><span class="line">  <span class="attr">fallback:</span></span><br><span class="line">    <span class="comment"># 如果设置了 fallback 则 failureThreshold 和 replicas 必填</span></span><br><span class="line">    <span class="comment"># 如下示例为：当实例连续 3 次不可用时，KEDA 将更改 HPA 指标，以便部署将扩展到 2 个副本</span></span><br><span class="line">    <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">    <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">  <span class="comment"># 高级配置</span></span><br><span class="line">  <span class="attr">advanced:</span></span><br><span class="line">    <span class="comment"># 可选值，指定在删除了该 ScaledObject 时目标资源是否应缩减至原始副本计数</span></span><br><span class="line">    <span class="comment"># 默认为 false，即保持在 ScaledObject 删除时的相同数量</span></span><br><span class="line">    <span class="attr">restoreToOriginalReplicaCount:</span> <span class="literal">true</span><span class="string">/false</span></span><br><span class="line">    <span class="comment"># KEDA 将创建的 HPA 资源</span></span><br><span class="line">    <span class="attr">horizontalPodAutoscalerConfig:</span></span><br><span class="line">      <span class="comment"># # 可选值，默认为 keda-hpa-&#123;scaled-object-name&#125;</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">keda-hpa</span></span><br><span class="line">      <span class="comment"># 可选值，配置 HPA 的 behavior 字段</span></span><br><span class="line">      <span class="attr">behavior:</span></span><br><span class="line">        <span class="attr">scaleDown:</span></span><br><span class="line">          <span class="attr">stabilizationWindowSeconds:</span> <span class="number">300</span></span><br><span class="line">          <span class="attr">policies:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">Percent</span></span><br><span class="line">            <span class="attr">value:</span> <span class="number">100</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">15</span></span><br><span class="line">  <span class="comment"># 触发器，数组，配置触发扩容的触发器</span></span><br><span class="line">  <span class="attr">triggers:</span></span><br><span class="line">  <span class="comment"># 触发器的类型，当前以 CPU 触发器举例</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">cpu</span></span><br><span class="line">    <span class="comment">#要使用的指标类型，选项为 Utilization 或 AverageValue</span></span><br><span class="line">    <span class="attr">metricType:</span> <span class="string">Utilization</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="comment">#触发缩放操作的值</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">Utilization</span></span><br><span class="line">      <span class="attr">value:</span> <span class="string">&quot;60&quot;</span></span><br><span class="line">      <span class="comment"># 根据其 CPU 进行扩展的特定容器的名称，而不是整个 Pod。如果未指定则默认为空</span></span><br><span class="line">      <span class="attr">containerName:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="string">......</span></span><br></pre></td></tr></table></figure>

<h1 id="配置示例"><a href="#配置示例" class="headerlink" title="配置示例"></a>配置示例</h1><p>如下的配置规定了一个名为 nginx 的 Deployment 的弹性伸缩，其中最小分片为 4，最大分片为 6，触发弹性伸缩的条件为 CPU 使用率达到 50% 以上持续 30 秒以上<br>关于 CPU 及内存的相关缩放，需要提供节点监控数据才可以使用，如部署 prometheus 的 metrics-server</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">keda.sh/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ScaledObject</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-scale</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">scaleTargetRef:</span></span><br><span class="line">    <span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">envSourceContainerName:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">pollingInterval:</span>  <span class="number">30</span></span><br><span class="line">  <span class="attr">cooldownPeriod:</span>   <span class="number">300</span></span><br><span class="line">  <span class="attr">minReplicaCount:</span>  <span class="number">4</span></span><br><span class="line">  <span class="attr">maxReplicaCount:</span>  <span class="number">6</span></span><br><span class="line">  <span class="attr">fallback:</span></span><br><span class="line">    <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">    <span class="attr">replicas:</span> <span class="number">4</span></span><br><span class="line">  <span class="attr">triggers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">cpu</span></span><br><span class="line">    <span class="attr">metricType:</span> <span class="string">Utilization</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">value:</span> <span class="string">&quot;50&quot;</span></span><br><span class="line">      <span class="attr">containerName:</span> <span class="string">&quot;nginx&quot;</span></span><br></pre></td></tr></table></figure>

<h1 id="缩放器类别"><a href="#缩放器类别" class="headerlink" title="缩放器类别"></a>缩放器类别</h1><p>参考官方文档：<a href="https://keda.sh/docs/scalers/">Scalers</a></p>
]]></content>
      <categories>
        <category>CloudNative</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>HPA</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes 日志收集（三）- Logging operator 中使用 concat 多行合并相关问题</title>
    <url>/en-us/kubernetes-logging-collection-3/</url>
    <content><![CDATA[<div class="note red flat"><p>Sorry, the current document does not have an English version. Click to switch to <a href="/kubernetes-logging-collection-3/">Chinese</a>.</p>
</div>

<h1 id="多行合并出现的问题"><a href="#多行合并出现的问题" class="headerlink" title="多行合并出现的问题"></a>多行合并出现的问题</h1><p>之前讲到容器的标准输出日志会将每一行打印的日志拆分开<br>实际日志为：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">2024-03-20 06:31:44.934 ERROR log_test/main.go:19 main.main 日志测试 2024-03-20 06:31:44.934</span><br><span class="line">main.main</span><br><span class="line">        log_test/main.go:19</span><br><span class="line">runtime.main</span><br><span class="line">        runtime/proc.go:271</span><br></pre></td></tr></table></figure>

<p>会被拆分成：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&#123;&quot;log&quot;:&quot;2024-03-20 06:31:44.934 ERROR log_test/main.go:19 main.main 日志测试 2024-03-20 06:31:44.934\n&quot;,&quot;stream&quot;:&quot;stdout&quot;,&quot;time&quot;:&quot;2024-03-20T06:29:59.935462228Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;main.main\n&quot;,&quot;stream&quot;:&quot;stdout&quot;,&quot;time&quot;:&quot;2024-03-20T06:29:59.935581674Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;\u0009log_test/main.go:19\n&quot;,&quot;stream&quot;:&quot;stdout&quot;,&quot;time&quot;:&quot;2024-03-20T06:29:59.935610097Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;runtime.main\n&quot;,&quot;stream&quot;:&quot;stdout&quot;,&quot;time&quot;:&quot;2024-03-20T06:29:59.935633418Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;\u0009runtime/proc.go:271\n&quot;,&quot;stream&quot;:&quot;stdout&quot;,&quot;time&quot;:&quot;2024-03-20T06:29:59.93565774Z&quot;&#125;</span><br></pre></td></tr></table></figure>

<p>我们使用需要 concat 在日志转发器中先合并相同的 log，配置如下所示</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">logging.banzaicloud.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Flow</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-logging</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">match:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">select:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">logging:</span> <span class="string">golang</span></span><br><span class="line">  <span class="attr">filters:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">concat:</span></span><br><span class="line">      <span class="attr">key:</span> <span class="string">log</span></span><br><span class="line">      <span class="attr">multiline_start_regexp:</span> <span class="string">&#x27;/^\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;/&#x27;</span></span><br><span class="line">      <span class="attr">separator:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">      <span class="attr">flush_interval:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure>

<p>但是<br>如果我们只配置 multiline_start_regexp: ‘&#x2F;^\d{4}-\d{2}-\d{2}&#x2F;‘，在长时间没有新日志生成时，会出现如下错误：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">2024-05-13 03:10:16 +0000 [warn]: #0 send an error event to @ERROR: error_class=Fluent::Plugin::ConcatFilter::TimeoutError error=&quot;Timeout flush: kubernetes.var.log.containers.printorebi-test_print-logs-6fc021e614d408768bc84012f7ac34438bdb5d6d7ea8474a6307970e6af1ba66.log:default&quot; location=nil tag=&quot;kubernetes.var.log.containers.print-logs-64fb98db85-x2hnd_komo1e614d408768bc84012f7ac34438bdb5d6d7ea8474a6307970e6af1ba66.log&quot; time=2024-05-13 03:10:16.196873027 +0000</span><br></pre></td></tr></table></figure>

<p>这时我们有两种解决方案</p>
<h2 id="使用-multiline-end-regexp"><a href="#使用-multiline-end-regexp" class="headerlink" title="使用 multiline_end_regexp"></a>使用 multiline_end_regexp</h2><p>我们可以将 concat 的配置变为如下配置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">logging.banzaicloud.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Flow</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-logging</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">match:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">select:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">logging:</span> <span class="string">golang</span></span><br><span class="line">  <span class="attr">filters:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">concat:</span></span><br><span class="line">      <span class="attr">key:</span> <span class="string">log</span></span><br><span class="line">      <span class="attr">multiline_start_regexp:</span> <span class="string">&#x27;/^\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;/&#x27;</span></span><br><span class="line">      <span class="attr">multiline_end_regexp:</span> <span class="string">&#x27;/\Z/&#x27;</span></span><br><span class="line">      <span class="attr">separator:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">      <span class="attr">flush_interval:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure>

<p>multiline_end_regexp 用于匹配日志结尾的格式，使用正则 <code>/\Z/</code> 匹配字符串的结尾，这个方法并不能很好的适配所有的日志格式，还可以使用另一个方法</p>
<h2 id="使用-flowLabel-和-timeout-label"><a href="#使用-flowLabel-和-timeout-label" class="headerlink" title="使用 flowLabel 和 timeout_label"></a>使用 flowLabel 和 timeout_label</h2><p>在 fluentd 的 concat 插件中，timeout_label 配置可以让 concat 合并超时的日志通过其他 label 的相关 filter 进行处理<br>这个配置在 Logging Operator 中如下所示：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">logging.banzaicloud.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Flow</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-logging</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">komorebi-test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">match:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">select:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">logging:</span> <span class="string">golang</span></span><br><span class="line">  <span class="attr">filters:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">concat:</span></span><br><span class="line">      <span class="attr">key:</span> <span class="string">log</span></span><br><span class="line">      <span class="attr">multiline_start_regexp:</span> <span class="string">&#x27;/^\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;/&#x27;</span></span><br><span class="line">      <span class="attr">separator:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">      <span class="attr">flush_interval:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">timeout_label:</span> <span class="string">&#x27;@test-logging&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">parser:</span></span><br><span class="line">      <span class="attr">remove_key_name_field:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">reserve_data:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">parse:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">multi_format</span></span><br><span class="line">        <span class="attr">patterns:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">format:</span> <span class="string">regexp</span></span><br><span class="line">          <span class="attr">expression:</span> <span class="string">/^(?&lt;time&gt;\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;</span> <span class="string">\d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;.\d&#123;3&#125;)(\s+)(?&lt;loglevel&gt;\w+)(\s+)(?&lt;line&gt;[\w\.\:\/\-]+)(\s+)(?&lt;func&gt;[\w\.\:\/\-]+)/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">record_transformer:</span></span><br><span class="line">      <span class="attr">remove_keys:</span> <span class="string">&#x27;$.kubernetes.pod_id,$.kubernetes.annotations,$.kubernetes.labels,$.kubernetes.docker_id,$.kubernetes.container_hash,$.kubernetes.container_image&#x27;</span></span><br><span class="line">  <span class="attr">localOutputRefs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">test-receiver</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">logging.banzaicloud.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Flow</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-logging-timeout</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">komorebi-test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">flowLabel:</span> <span class="string">&#x27;@test-logging&#x27;</span></span><br><span class="line">  <span class="attr">filters:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">parser:</span></span><br><span class="line">      <span class="attr">remove_key_name_field:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">reserve_data:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">parse:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">multi_format</span></span><br><span class="line">        <span class="attr">patterns:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">format:</span> <span class="string">regexp</span></span><br><span class="line">          <span class="attr">expression:</span> <span class="string">/^(?&lt;time&gt;\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;</span> <span class="string">\d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;.\d&#123;3&#125;)(\s+)(?&lt;loglevel&gt;\w+)(\s+)(?&lt;line&gt;[\w\.\:\/\-]+)(\s+)(?&lt;func&gt;[\w\.\:\/\-]+)/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">record_transformer:</span></span><br><span class="line">      <span class="attr">remove_keys:</span> <span class="string">&#x27;$.kubernetes.pod_id,$.kubernetes.annotations,$.kubernetes.labels,$.kubernetes.docker_id,$.kubernetes.container_hash,$.kubernetes.container_image&#x27;</span></span><br><span class="line">  <span class="attr">localOutputRefs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">test-receiver</span></span><br></pre></td></tr></table></figure>

<p>这里我们将超时的日志直接走 parser 进行匹配，然后通过 output 传输</p>
]]></content>
      <categories>
        <category>CloudNative</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>Logging</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes 日志收集（二）- 基于 Logging operator 的日志收集</title>
    <url>/en-us/kubernetes-logging-collection-2/</url>
    <content><![CDATA[<div class="note red flat"><p>Sorry, the current document does not have an English version. Click to switch to <a href="/kubernetes-logging-collection-2/">Chinese</a>.</p>
</div>

<h1 id="Logging-Operator-介绍"><a href="#Logging-Operator-介绍" class="headerlink" title="Logging Operator 介绍"></a>Logging Operator 介绍</h1><p>Logging operator 基于 CRD 规定和管理日志收集架构，我们通过相关规定的资源可以在 K8S 中轻松的部署日志采集器、日志转发器与相关的日志路由规则</p>
<h2 id="自定义资源"><a href="#自定义资源" class="headerlink" title="自定义资源"></a>自定义资源</h2><p>每次修改完相关 CRD 时，对应的资源需要一段时间之后才会收到影响，需要等待一段时间</p>
<h3 id="Logging"><a href="#Logging" class="headerlink" title="Logging"></a>Logging</h3><blockquote>
<p><code>Logging</code> 定义用于收集和传输日志消息的集群的日志记录基础架构</p>
</blockquote>
<ul>
<li><code>Logging</code> 包含 <code>Fluent Bit</code> 日志收集器（基于 <code>DemonSet</code> 部署）以及 <code>Fluentd</code> 和 <code>Syslog-ng</code> 日志转发器（基于 <code>StatefulSet</code> 部署）的配置，在新版本中，可以使用 <code>FluentbitAgent</code> 代替 <code>Fluent Bit</code> 的配置，将其与日志转发器隔离开</li>
<li>日志收集器（<code>Fluent Bit</code>）作为 <code>Daemonset</code> 部署在节点上，主要用于收集节点上的日志并传入日志转发器</li>
<li>日志转发器可以接收、过滤和转换传入的日志，并将它们传输到一个或多个目标输出，Logging Operator 支持 <code>Fluentd</code> 和 <code>Syslog-ng</code> 作为日志转发器，<code>Syslog-ng</code> 支持多线程处理可提供更高的性能，<code>Fluentd</code> 支持丰富的输入输出源以及各种插件，可以根据各种需要选择不同的日志转发器</li>
<li>在创建 <code>Logging</code> 时，会建立 <code>controlNamespace</code>，即 Logging Operator 的管理命名空间，<code>Fluentd</code>|<code>Syslog-ng</code> 和 <code>Fluent Bit</code> 部署在此命名空间中，默认情况下，仅在此命名空间中评估诸如 <code>ClusterOutput</code> 和 <code>ClusterFlow</code> 之类的全局资源（即使它们在任何其他命名空间，除非 <code>allowClusterResourcesFromAllNamespaces</code> 设置为 true）</li>
</ul>
<h3 id="Flow"><a href="#Flow" class="headerlink" title="Flow"></a>Flow</h3><blockquote>
<p><code>Flow</code> 将选定的日志消息路由到指定的输出，它包含了 <code>Flow</code> 与 <code>ClusterFlow</code></p>
</blockquote>
<ul>
<li><code>Flow</code> 是一个 <code>namespaced</code> 资源，因此仅收集来自相同命名空间的日志。可以指定 <code>match</code> 语句根据 Kubernetes labels、容器和主机名来选择或排除日志（匹配语句按照定义和处理的顺序进行评估，直到第一个匹配的 select 或 exclude 规则应用为止）</li>
<li><code>ClusterFlow</code> 定义了一个没有命名空间限制的 <code>Flow</code>。它也只在 <code>controlNamespace</code> 中有效。 <code>ClusterFlow</code> 从所有命名空间中选择日志</li>
<li><code>Flow</code> 和 <code>ClusterFlow</code> 是针对 <code>Fluentd Forwarder</code> 的 CRD 资源，如果我们要使用 <code>Syslog-ng</code> 作为 <code>Forwarder</code>，需要将对应的名称改为：<code>SyslogNGFlow</code> 和 <code>SyslogNGClusterFlow</code></li>
</ul>
<h3 id="OutPut"><a href="#OutPut" class="headerlink" title="OutPut"></a>OutPut</h3><blockquote>
<p><code>OutPut</code> 是日志转发器将日志消息发送到的目的地，如常用的 Elasticsearch、Loki 或 Kafka 等</p>
</blockquote>
<ul>
<li><code>Output</code> 也是 <code>namespaced</code> 资源，定义了 <code>Flow</code> 可以发送日志消息的输出。意味着只有同一命名空间内的 <code>Flow</code> 可以访问它。可以在这些定义中使用 <code>secrets</code>，但它们也必须位于同一命名空间中。输出是日志转发的最后阶段</li>
<li><code>ClusterOutput</code> 定义没有命名空间限制的输出</li>
<li>同 <code>Flow</code>，如果要使用<code>Syslog-ng</code>，要将对应的名称改为：<code>SyslogNGFlow</code> 和 <code>SyslogNGClusterOutput</code></li>
</ul>
<h2 id="官方文档及架构图"><a href="#官方文档及架构图" class="headerlink" title="官方文档及架构图"></a>官方文档及架构图</h2><blockquote>
<p><a href="https://kube-logging.dev/docs/">https://kube-logging.dev/docs/</a></p>
</blockquote>
<h1 id="Logging-Operator-安装"><a href="#Logging-Operator-安装" class="headerlink" title="Logging Operator 安装"></a>Logging Operator 安装</h1><p>需要提前安装 helm</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm upgrade --install --<span class="built_in">wait</span> \</span><br><span class="line">     --create-namespace --namespace logging \</span><br><span class="line">     --<span class="built_in">set</span> testReceiver.enabled=<span class="literal">true</span> \</span><br><span class="line">     logging-operator oci://ghcr.io/kube-logging/helm-charts/logging-operator</span><br></pre></td></tr></table></figure>

<p>以上命令除了安装 Logging Operator 外，还会安装一个测试用的 deployment <code>logging-operator-test-receiver</code>，它侦听 HTTP 端口，接收 JSON 消息，并将它们写入标准输出 (stdout)，我们在配置日志转发器时，可以接入这个服务，一边检查我们的日志格式是否有问题。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看服务运行情况</span></span><br><span class="line">kubectl get deploy -n logging</span><br></pre></td></tr></table></figure>

<h1 id="配置日志收集器和日志转发器"><a href="#配置日志收集器和日志转发器" class="headerlink" title="配置日志收集器和日志转发器"></a>配置日志收集器和日志转发器</h1><div class="note red flat"><p>在本文中，我们使用 <code>Fluentd</code> 作为日志转发器</p>
</div>

<h2 id="Fluentd（CRD：Logging）"><a href="#Fluentd（CRD：Logging）" class="headerlink" title="Fluentd（CRD：Logging）"></a>Fluentd（CRD：Logging）</h2><p>这里配置了一个三分片的 <code>Fluentd</code> 并且配置了 pod 亲和性使其不调度在一个节点，使用 pvc 对 buffer 数据进行了持久化</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">logging.banzaicloud.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Logging</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">logging-collector</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">controlNamespace:</span> <span class="string">logging</span></span><br><span class="line">  <span class="attr">fluentd:</span></span><br><span class="line">    <span class="attr">scaling:</span></span><br><span class="line">      <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">    <span class="attr">bufferStorageVolume:</span></span><br><span class="line">      <span class="attr">pvc:</span></span><br><span class="line">        <span class="attr">spec:</span></span><br><span class="line">          <span class="attr">storageClassName:</span> <span class="string">【这里修改成集群的存储类】</span></span><br><span class="line">          <span class="attr">accessModes:</span> [ <span class="string">&quot;ReadWriteOnce&quot;</span> ]</span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">storage:</span> <span class="string">5Gi</span></span><br><span class="line">    <span class="attr">affinity:</span></span><br><span class="line">      <span class="attr">podAntiAffinity:</span></span><br><span class="line">        <span class="attr">requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">labelSelector:</span></span><br><span class="line">              <span class="attr">matchExpressions:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">app.kubernetes.io/name</span></span><br><span class="line">                <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                <span class="attr">values:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="string">fluentd</span></span><br><span class="line">            <span class="attr">topologyKey:</span> <span class="string">kubernetes.io/hostname</span></span><br></pre></td></tr></table></figure>

<h2 id="Fluent-bit（CRD：FluentbitAgent）"><a href="#Fluent-bit（CRD：FluentbitAgent）" class="headerlink" title="Fluent-bit（CRD：FluentbitAgent）"></a>Fluent-bit（CRD：FluentbitAgent）</h2><p>这里额外配置了 <code>/data/docker/containers</code> 是因为修改过 docker 的默认 <code>data-root</code> 文件夹，如果默认的 docker 数据保存在 <code>/var/lib/docker</code> 则不需要添加<br>配置 <code>tolerations</code> 使 <code>daemonset</code> 可以调度到 master 上让我们后续可以收集 <code>kube-system</code> 相关日志</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">logging.banzaicloud.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">FluentbitAgent</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">logging-collector-agent</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">extraVolumeMounts:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source:</span> <span class="string">/data/docker/containers/</span></span><br><span class="line">    <span class="attr">destination:</span> <span class="string">/data/docker/containers/</span></span><br><span class="line">    <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tolerations:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">&quot;node-role.kubernetes.io/master&quot;</span></span><br><span class="line">    <span class="attr">operator:</span> <span class="string">&quot;Exists&quot;</span></span><br><span class="line">    <span class="attr">effect:</span> <span class="string">&quot;NoSchedule&quot;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>当我们 apply <code>Logging</code> 和 <code>FluentbitAgent</code> 时，会启动名为 <code>logging-collector-fluentd</code> 的 <code>Fluentd</code>（statefulset）和名为 <code>logging-collector-agent-fluentbit</code> 的 <code>Fluent-Bit</code>（daemonset），此时 <code>Fluent-Bit</code> 就会采集节点上的日志到 <code>Fluentd</code> 中</p>
</blockquote>
<h1 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h1><h2 id="文件挂载检查"><a href="#文件挂载检查" class="headerlink" title="文件挂载检查"></a>文件挂载检查</h2><p>查看 <code>daemonset</code> 的详细信息查看我们配置的额外挂载是否生效</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl describe daemonsets.apps -n logging logging-collector-agent-fluentbit</span><br></pre></td></tr></table></figure>

<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">Volumes:</span><br><span class="line">  varlibcontainers:</span><br><span class="line">  Type:          HostPath (bare host directory volume)</span><br><span class="line">  Path:          /var/lib/docker/containers</span><br><span class="line">  HostPathType:</span><br><span class="line">  varlogs:</span><br><span class="line">  Type:          HostPath (bare host directory volume)</span><br><span class="line">  Path:          /var/log</span><br><span class="line">  HostPathType:</span><br><span class="line">  extravolumemount0:</span><br><span class="line">  Type:          HostPath (bare host directory volume)</span><br><span class="line">Path:          /data/docker/containers/</span><br><span class="line">HostPathType:</span><br><span class="line">  config:</span><br><span class="line">  Type:        Secret (a volume populated by a Secret)</span><br><span class="line">  SecretName:  logging-collector-agent-fluentbit</span><br><span class="line">  Optional:    false</span><br><span class="line">  positiondb:</span><br><span class="line">  Type:       EmptyDir (a temporary directory that shares a pod&#x27;s lifetime)</span><br><span class="line">  Medium:</span><br><span class="line">  SizeLimit:  &lt;unset&gt;</span><br><span class="line">  buffers:</span><br><span class="line">  Type:       EmptyDir (a temporary directory that shares a pod&#x27;s lifetime)</span><br><span class="line">  Medium:</span><br><span class="line">  SizeLimit:  &lt;unset&gt;</span><br></pre></td></tr></table></figure>

<h2 id="配置检查"><a href="#配置检查" class="headerlink" title="配置检查"></a>配置检查</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get secret logging-collector-agent-fluentbit -n logging -o jsonpath=<span class="string">&#x27;&#123;.data.fluent-bit\.conf&#125;&#x27;</span>|<span class="built_in">base64</span> --decode</span><br></pre></td></tr></table></figure>

<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[SERVICE]</span></span><br><span class="line">    Flush        1</span><br><span class="line">    Grace        5</span><br><span class="line">    Daemon       Off</span><br><span class="line">    Log_Level    info</span><br><span class="line">    Parsers_File /fluent-bit/etc/parsers.conf</span><br><span class="line">    Coro_Stack_Size    24576</span><br><span class="line">    storage.path  /buffers</span><br><span class="line"><span class="section">[INPUT]</span></span><br><span class="line">    Name         tail</span><br><span class="line">    DB  /tail-db/tail-containers-state.db</span><br><span class="line">    DB.locking  true</span><br><span class="line">    Mem_Buf_Limit  5MB</span><br><span class="line">    Parser  docker</span><br><span class="line">    Path  /var/log/containers/*.log</span><br><span class="line">    Refresh_Interval  5</span><br><span class="line">    Skip_Long_Lines  On</span><br><span class="line">    Tag  kubernetes.*</span><br><span class="line"><span class="section">[FILTER]</span></span><br><span class="line">    Name        kubernetes</span><br><span class="line">    Buffer_Size  0</span><br><span class="line">    K8S-Logging.Exclude  On</span><br><span class="line">    Kube_CA_File  /var/run/secrets/kubernetes.io/serviceaccount/ca.crt</span><br><span class="line">    Kube_Tag_Prefix  kubernetes.var.log.containers</span><br><span class="line">    Kube_Token_File  /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line">    Kube_Token_TTL  600</span><br><span class="line">    Kube_URL  https://kubernetes.default.svc:443</span><br><span class="line">    Match  kubernetes.*</span><br><span class="line">    Merge_Log  On</span><br><span class="line">    Use_Kubelet  Off</span><br><span class="line"><span class="section">[OUTPUT]</span></span><br><span class="line">    Name tcp</span><br><span class="line">    Match *</span><br><span class="line">    Host logging-collector-syslog-ng.logging.svc.cluster.local.</span><br><span class="line">    Port 601</span><br><span class="line">    Format json_lines</span><br><span class="line">    json_date_key ts</span><br><span class="line">    json_date_format iso8601</span><br></pre></td></tr></table></figure>

<h2 id="日志等级（可选）"><a href="#日志等级（可选）" class="headerlink" title="日志等级（可选）"></a>日志等级（可选）</h2><p>修改日志级别可以查看采集是否有问题，如下所示将 <code>logLevel</code> 配置为 <code>trace</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">logging.banzaicloud.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">FluentbitAgent</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">logging-collector-agent</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">logLevel:</span> <span class="string">trace</span></span><br><span class="line"><span class="string">......</span></span><br></pre></td></tr></table></figure>

<p><code>Fluentd</code> 同上</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">logging.banzaicloud.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Logging</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">logging-collector</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">controlNamespace:</span> <span class="string">logging</span></span><br><span class="line">  <span class="attr">fluentd:</span></span><br><span class="line">    <span class="attr">logLevel:</span> <span class="string">trace</span></span><br><span class="line">  <span class="string">......</span></span><br></pre></td></tr></table></figure>

<h1 id="Flow-和-OutPut"><a href="#Flow-和-OutPut" class="headerlink" title="Flow 和 OutPut"></a>Flow 和 OutPut</h1><h2 id="部署打印测试日志的容器"><a href="#部署打印测试日志的容器" class="headerlink" title="部署打印测试日志的容器"></a>部署打印测试日志的容器</h2><p>通过 golang 编写一个一直打印多行错误日志的 Deployment 用于测试，日志格式如下：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">2024-03-20 06:31:44.934 ERROR log_test/main.go:19 main.main 日志测试 2024-03-20 06:31:44.934</span><br><span class="line">main.main</span><br><span class="line">        log_test/main.go:19</span><br><span class="line">runtime.main</span><br><span class="line">        runtime/proc.go:271</span><br></pre></td></tr></table></figure>

<p>代码如下：</p>
<figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"> <span class="string">&quot;os&quot;</span></span><br><span class="line"> <span class="string">&quot;time&quot;</span></span><br><span class="line"></span><br><span class="line"> <span class="string">&quot;go.uber.org/zap&quot;</span></span><br><span class="line"> <span class="string">&quot;go.uber.org/zap/zapcore&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line"> InitZapLogger()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Logger *zap.Logger</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InitZapLogger</span><span class="params">()</span></span> &#123;</span><br><span class="line"> Logger = zap.New(</span><br><span class="line">  zapcore.NewTee(</span><br><span class="line">   zapcore.NewCore(</span><br><span class="line">    encoderConfig(),</span><br><span class="line">    zapcore.AddSync(os.Stdout),</span><br><span class="line">    zapcore.DebugLevel,</span><br><span class="line">   ),</span><br><span class="line">  ),</span><br><span class="line">  zap.Development(),</span><br><span class="line">  zap.AddCaller(),</span><br><span class="line">  zap.AddStacktrace(zap.ErrorLevel),</span><br><span class="line"> )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">encoderConfig</span><span class="params">()</span></span> zapcore.Encoder &#123;</span><br><span class="line"> zapEncode := zapcore.EncoderConfig&#123;</span><br><span class="line">  MessageKey:          <span class="string">&quot;Message&quot;</span>,</span><br><span class="line">  LevelKey:            <span class="string">&quot;Level&quot;</span>,</span><br><span class="line">  TimeKey:             <span class="string">&quot;Timestamp&quot;</span>,</span><br><span class="line">  NameKey:             <span class="string">&quot;Name&quot;</span>,</span><br><span class="line">  CallerKey:           <span class="string">&quot;Caller&quot;</span>,</span><br><span class="line">  FunctionKey:         <span class="string">&quot;Function&quot;</span>,</span><br><span class="line">  StacktraceKey:       <span class="string">&quot;Stacktrace&quot;</span>,</span><br><span class="line">  SkipLineEnding:      <span class="literal">false</span>,</span><br><span class="line">  LineEnding:          zapcore.DefaultLineEnding,</span><br><span class="line">  EncodeLevel:         zapcore.CapitalLevelEncoder,</span><br><span class="line">  EncodeTime:          encodeTime,</span><br><span class="line">  EncodeDuration:      zapcore.SecondsDurationEncoder,</span><br><span class="line">  EncodeCaller:        zapcore.ShortCallerEncoder,</span><br><span class="line">  EncodeName:          zapcore.FullNameEncoder,</span><br><span class="line">  NewReflectedEncoder: <span class="literal">nil</span>,</span><br><span class="line">  ConsoleSeparator:    <span class="string">&quot; &quot;</span>,</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> zapcore.NewConsoleEncoder(zapEncode)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">encodeTime</span><span class="params">(t time.Time, enc zapcore.PrimitiveArrayEncoder)</span></span> &#123;</span><br><span class="line"> enc.AppendString(t.Format(<span class="string">&quot;2006-01-02 15:04:05.000&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"> ticker := time.NewTicker(<span class="number">5</span> * time.Second)</span><br><span class="line"> <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">  ticker.Stop()</span><br><span class="line"> &#125;()</span><br><span class="line"> <span class="keyword">for</span> <span class="keyword">range</span> ticker.C &#123;</span><br><span class="line">  Logger.Sugar().Errorf(<span class="string">&quot;日志测试 %s&quot;</span>, time.Now().Format(<span class="string">&quot;2006-01-02 15:04:05.000&quot;</span>))</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">print-logs</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">print-logs</span></span><br><span class="line">    <span class="attr">logging:</span> <span class="string">golang</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">print-logs</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">print-logs</span></span><br><span class="line">        <span class="attr">logging:</span> <span class="string">golang</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">print-logs</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">print-test-log</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br></pre></td></tr></table></figure>

<h2 id="配置-Flow-和-OutPut-（使用logging-operator-test-receiver测试）"><a href="#配置-Flow-和-OutPut-（使用logging-operator-test-receiver测试）" class="headerlink" title="配置 Flow 和 OutPut （使用logging-operator-test-receiver测试）"></a>配置 Flow 和 OutPut （使用logging-operator-test-receiver测试）</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">logging.banzaicloud.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Flow</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-logging</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">match:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">select:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">logging:</span> <span class="string">golang</span></span><br><span class="line">  <span class="attr">localOutputRefs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">test-receiver</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">logging.banzaicloud.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Output</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-receiver</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">http:</span></span><br><span class="line">    <span class="attr">endpoint:</span> <span class="string">http://logging-operator-test-receiver:8080</span></span><br><span class="line">    <span class="attr">content_type:</span> <span class="string">application/json</span></span><br><span class="line">    <span class="attr">buffer:</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">memory</span></span><br><span class="line">      <span class="attr">tags:</span> <span class="string">time</span></span><br><span class="line">      <span class="attr">timekey:</span> <span class="string">1s</span></span><br><span class="line">      <span class="attr">timekey_wait:</span> <span class="string">0s</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>创建完毕后，会在 <code>default</code> 命名空间创建 <code>Flow：log-generator</code> 和 <code>OutPut：test-receiver</code>，并将 <code>kubernetes label</code> 为 <code>logging=golang</code> 的日志传输到<code>logging-operator-test-receiver</code>打印</p>
</blockquote>
<h1 id="日志的格式化"><a href="#日志的格式化" class="headerlink" title="日志的格式化"></a>日志的格式化</h1><h2 id="多行日志的初步合并"><a href="#多行日志的初步合并" class="headerlink" title="多行日志的初步合并"></a>多行日志的初步合并</h2><p>在使用 docker 作为 kubernetes 的容器运行时时，容器日志会将每一行打印的日志拆分开<br>实际日志为：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">2024-03-20 06:31:44.934 ERROR log_test/main.go:19 main.main 日志测试 2024-03-20 06:31:44.934</span><br><span class="line">main.main</span><br><span class="line">        log_test/main.go:19</span><br><span class="line">runtime.main</span><br><span class="line">        runtime/proc.go:271</span><br></pre></td></tr></table></figure>

<p>会被拆分成：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&#123;&quot;log&quot;:&quot;2024-03-20 06:31:44.934 ERROR log_test/main.go:19 main.main 日志测试 2024-03-20 06:31:44.934\n&quot;,&quot;stream&quot;:&quot;stdout&quot;,&quot;time&quot;:&quot;2024-03-20T06:29:59.935462228Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;main.main\n&quot;,&quot;stream&quot;:&quot;stdout&quot;,&quot;time&quot;:&quot;2024-03-20T06:29:59.935581674Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;\u0009log_test/main.go:19\n&quot;,&quot;stream&quot;:&quot;stdout&quot;,&quot;time&quot;:&quot;2024-03-20T06:29:59.935610097Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;runtime.main\n&quot;,&quot;stream&quot;:&quot;stdout&quot;,&quot;time&quot;:&quot;2024-03-20T06:29:59.935633418Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;\u0009runtime/proc.go:271\n&quot;,&quot;stream&quot;:&quot;stdout&quot;,&quot;time&quot;:&quot;2024-03-20T06:29:59.93565774Z&quot;&#125;</span><br></pre></td></tr></table></figure>

<p>需要在日志转发器中先合并相同的 log，再将对应的 log 进行格式化，这里仍然使用 <code>logging-operator-test-receiver</code> 测试</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">logging.banzaicloud.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Flow</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-logging</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">match:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">select:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">logging:</span> <span class="string">golang</span></span><br><span class="line">  <span class="attr">filters:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">concat:</span></span><br><span class="line">      <span class="attr">key:</span> <span class="string">log</span></span><br><span class="line">      <span class="attr">multiline_start_regexp:</span> <span class="string">&#x27;/^\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;/&#x27;</span></span><br><span class="line">      <span class="attr">multiline_end_regexp:</span> <span class="string">&#x27;/\Z/&#x27;</span></span><br><span class="line">      <span class="attr">separator:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">      <span class="attr">flush_interval:</span> <span class="number">5</span></span><br><span class="line">  <span class="attr">localOutputRefs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">test-receiver</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">logging.banzaicloud.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Output</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-receiver</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">http:</span></span><br><span class="line">    <span class="attr">endpoint:</span> <span class="string">http://logging-operator-test-receiver:8080</span></span><br><span class="line">    <span class="attr">content_type:</span> <span class="string">application/json</span></span><br><span class="line">    <span class="attr">buffer:</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">memory</span></span><br><span class="line">      <span class="attr">tags:</span> <span class="string">time</span></span><br><span class="line">      <span class="attr">timekey:</span> <span class="string">1s</span></span><br><span class="line">      <span class="attr">timekey_wait:</span> <span class="string">0s</span></span><br></pre></td></tr></table></figure>

<p>运行之后发现，日志已经被合并到了 <code>key</code> 为 <code>log</code> 的部分</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[0] http.0: [[1710923000.932884258, &#123;&#125;], &#123;&quot;log&quot;=&gt;&quot;2024-03-20 08:23:14.937 ERROR log_test/main.go:19 main.main 日志测试 2024-03-20 08:23:14.937</span><br><span class="line">main.main</span><br><span class="line">        D:/GolandProjects/log_test/main.go:19</span><br><span class="line">runtime.main</span><br><span class="line">        C:/Program Files/Go/src/runtime/proc.go:271</span><br><span class="line">&quot;, &quot;stream&quot;=&gt;&quot;stdout&quot;, &quot;time&quot;=&gt;&quot;2024-03-20T08:23:14.937900447Z&quot;, &quot;kubernetes&quot;=&gt;&#123;&quot;pod_name&quot;=&gt;&quot;print-logs-64fb98db85-c4zdz&quot;, &quot;namespace_name&quot;=&gt;&quot;default&quot;, &quot;pod_id&quot;=&gt;&quot;d72c4042-cb45-4fe1-a684-eb4e56861049&quot;, &quot;labels&quot;=&gt;&#123;&quot;app&quot;=&gt;&quot;print-logs&quot;, &quot;logging&quot;=&gt;&quot;golang&quot;, &quot;pod-template-hash&quot;=&gt;&quot;64fb98db85&quot;&#125;, &quot;annotations&quot;=&gt;&#123;&quot;cni.projectcalico.org/containerID&quot;=&gt;&quot;24c125288decf36a19b5d333569258a45b2f41b2dfbbef407854145234ec7323&quot;, &quot;cni.projectcalico.org/podIP&quot;=&gt;&quot;10.244.166.182/32&quot;, &quot;cni.projectcalico.org/podIPs&quot;=&gt;&quot;10.244.166.182/32&quot;&#125;, &quot;host&quot;=&gt;&quot;node1&quot;, &quot;container_name&quot;=&gt;&quot;print-logs&quot;, &quot;docker_id&quot;=&gt;&quot;ffb6313adb1347f828348f128852ba110f608124f3a8aca68b400f238bfde71a&quot;,&quot;container_hash&quot;=&gt;&quot;print-test-log@sha256:ad1a3e5bb60d81a6b13e8085c618244055c35807e7a05caabf50f77adc7a11e0&quot;, &quot;container_image&quot;=&gt;&quot;print-test-log&quot;&#125;&#125;]</span><br></pre></td></tr></table></figure>

<div class="note red flat"><p>如果使用的容器运行时为 containerd，则需要对应的日志为：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">2024-04-10T02:15:17.527436711Z stdout F 2024-04-10 02:15:17.527 ERROR log_test/main.go:19 main.main 日志测试 2024-04-10 02:15:17.527</span><br><span class="line">2024-04-10T02:15:17.527496993Z stdout F main.main</span><br><span class="line">2024-04-10T02:15:17.527501224Z stdout F         D:/GolandProjects/log_test/main.go:19</span><br><span class="line">2024-04-10T02:15:17.527503316Z stdout F runtime.main</span><br><span class="line">2024-04-10T02:15:17.527505153Z stdout F         C:/Program Files/Go/src/runtime/proc.go:271</span><br></pre></td></tr></table></figure>

<p>这时，fluentbit 会将后面的部分收集到 key 为 message 中，需要修改 Flow 的合并配置合并的 key 为 message</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">filters:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">concat:</span></span><br><span class="line">    <span class="attr">key:</span> <span class="string">message</span></span><br></pre></td></tr></table></figure>
</div>

<h2 id="日志的字段格式化"><a href="#日志的字段格式化" class="headerlink" title="日志的字段格式化"></a>日志的字段格式化</h2><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">2024-03-20 06:31:44.934 ERROR log_test/main.go:19 main.main 日志测试 2024-03-20 06:31:44.934</span><br><span class="line">main.main</span><br><span class="line">        log_test/main.go:19</span><br><span class="line">runtime.main</span><br><span class="line">        runtime/proc.go:271</span><br></pre></td></tr></table></figure>

<p>使用上述日志格式的作为参考编写正则表达式，将我们的数据使用正则命令将其拆分为如下部分</p>
<ul>
<li>time：2024-03-20 08:23:14.937</li>
<li>loglevel：ERROR</li>
<li>line：log_test&#x2F;main.go:19</li>
<li>func：main.main</li>
<li>log部分保持不变</li>
</ul>
<p>正则表达式如下：(正则测试网站：<a href="https://regex101.com/">https://regex101.com/</a>)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/^(?&lt;time&gt;\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125; \d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;.\d&#123;3&#125;)(\s+)(?&lt;loglevel&gt;\w+)(\s+)(?&lt;line&gt;[\w\.\:\/\-]+)(\s+)(?&lt;func&gt;[\w\.\:\/\-]+)/</span><br></pre></td></tr></table></figure>

<p>配置日志字段格式化</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">logging.banzaicloud.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Flow</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-logging</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">match:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">select:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">logging:</span> <span class="string">golang</span></span><br><span class="line">  <span class="attr">filters:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">concat:</span></span><br><span class="line">      <span class="attr">key:</span> <span class="string">log</span></span><br><span class="line">      <span class="attr">multiline_start_regexp:</span> <span class="string">&#x27;/^\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;/&#x27;</span></span><br><span class="line">      <span class="attr">multiline_end_regexp:</span> <span class="string">&#x27;/\Z/&#x27;</span></span><br><span class="line">      <span class="attr">separator:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">      <span class="attr">flush_interval:</span> <span class="number">5</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">parser:</span></span><br><span class="line">      <span class="attr">remove_key_name_field:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">reserve_data:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">parse:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">multi_format</span></span><br><span class="line">        <span class="attr">patterns:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">format:</span> <span class="string">regexp</span></span><br><span class="line">          <span class="attr">expression:</span> <span class="string">/^(?&lt;time&gt;\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;</span> <span class="string">\d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;.\d&#123;3&#125;)(\s+)(?&lt;loglevel&gt;\w+)(\s+)(?&lt;line&gt;[\w\.\:\/\-]+)(\s+)(?&lt;func&gt;[\w\.\:\/\-]+)/</span></span><br><span class="line">  <span class="attr">localOutputRefs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">test-receiver</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">logging.banzaicloud.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Output</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-receiver</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">http:</span></span><br><span class="line">    <span class="attr">endpoint:</span> <span class="string">http://logging-operator-test-receiver:8080</span></span><br><span class="line">    <span class="attr">content_type:</span> <span class="string">application/json</span></span><br><span class="line">    <span class="attr">buffer:</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">memory</span></span><br><span class="line">      <span class="attr">tags:</span> <span class="string">time</span></span><br><span class="line">      <span class="attr">timekey:</span> <span class="string">1s</span></span><br><span class="line">      <span class="attr">timekey_wait:</span> <span class="string">0s</span></span><br></pre></td></tr></table></figure>

<p>运行效果：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[0] http.0: [[1710928830.558128299, &#123;&#125;], &#123;&quot;log&quot;=&gt;&quot;2024-03-20 10:00:24.938 ERROR log_test/main.go:19 main.main 日志测试 2024-03-20 10:00:24.938</span><br><span class="line">main.main</span><br><span class="line">  D:/GolandProjects/log_test/main.go:19</span><br><span class="line">runtime.main</span><br><span class="line">  C:/Program Files/Go/src/runtime/proc.go:271</span><br><span class="line">&quot;, &quot;stream&quot;=&gt;&quot;stdout&quot;, &quot;time&quot;=&gt;&quot;2024-03-20T10:00:24.939195916Z&quot;, &quot;kubernetes&quot;=&gt;&#123;&quot;pod_name&quot;=&gt;&quot;print-logs-64fb98db85-c4zdz&quot;, &quot;namespace_name&quot;=&gt;&quot;default&quot;, &quot;pod_id&quot;=&gt;&quot;d72c4042-cb45-4fe1-a684-eb4e56861049&quot;, &quot;labels&quot;=&gt;&#123;&quot;app&quot;=&gt;&quot;print-logs&quot;, &quot;logging&quot;=&gt;&quot;golang&quot;, &quot;pod-template-hash&quot;=&gt;&quot;64fb98db85&quot;&#125;, &quot;annotations&quot;=&gt;&#123;&quot;cni.projectcalico.org/containerID&quot;=&gt;&quot;24c125288decf36a19b5d333569258a45b2f41b2dfbbef407854145234ec7323&quot;, &quot;cni.projectcalico.org/podIP&quot;=&gt;&quot;10.244.166.182/32&quot;, &quot;cni.projectcalico.org/podIPs&quot;=&gt;&quot;10.244.166.182/32&quot;&#125;, &quot;host&quot;=&gt;&quot;node1&quot;, &quot;container_name&quot;=&gt;&quot;print-logs&quot;, &quot;docker_id&quot;=&gt;&quot;ffb6313adb1347f828348f128852ba110f608124f3a8aca68b400f238bfde71a&quot;, &quot;container_hash&quot;=&gt;&quot;print-test-log@sha256:ad1a3e5bb60d81a6b13e8085c618244055c35807e7a05caabf50f77adc7a11e0&quot;, &quot;container_image&quot;=&gt;&quot;print-test-log&quot;&#125;, &quot;loglevel&quot;=&gt;&quot;ERROR&quot;, &quot;line&quot;=&gt;&quot;log_test/main.go:19&quot;, &quot;func&quot;=&gt;&quot;main.main&quot;&#125;]</span><br></pre></td></tr></table></figure>

<h2 id="删除不需要的字段"><a href="#删除不需要的字段" class="headerlink" title="删除不需要的字段"></a>删除不需要的字段</h2><p>看上述日志发现其中有很多数据我们都不需要，可以使用 <code>record_transformer</code> 删除不需要的字段</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">logging.banzaicloud.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Flow</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-logging</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">match:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">select:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">logging:</span> <span class="string">golang</span></span><br><span class="line">  <span class="attr">filters:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">concat:</span></span><br><span class="line">      <span class="attr">key:</span> <span class="string">log</span></span><br><span class="line">      <span class="attr">multiline_start_regexp:</span> <span class="string">&#x27;/^\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;/&#x27;</span></span><br><span class="line">      <span class="attr">multiline_end_regexp:</span> <span class="string">&#x27;/\Z/&#x27;</span></span><br><span class="line">      <span class="attr">separator:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">      <span class="attr">flush_interval:</span> <span class="number">5</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">parser:</span></span><br><span class="line">      <span class="attr">remove_key_name_field:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">reserve_data:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">parse:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">multi_format</span></span><br><span class="line">        <span class="attr">patterns:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">format:</span> <span class="string">regexp</span></span><br><span class="line">          <span class="attr">expression:</span> <span class="string">/^(?&lt;time&gt;\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;</span> <span class="string">\d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;.\d&#123;3&#125;)(\s+)(?&lt;loglevel&gt;\w+)(\s+)(?&lt;line&gt;[\w\.\:\/\-]+)(\s+)(?&lt;func&gt;[\w\.\:\/\-]+)/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">record_transformer:</span></span><br><span class="line">      <span class="attr">remove_keys:</span> <span class="string">&#x27;$.kubernetes.pod_id,$.kubernetes.annotations,$.kubernetes.labels,$.kubernetes.docker_id,$.kubernetes.container_hash,$.kubernetes.container_image&#x27;</span></span><br><span class="line">  <span class="attr">localOutputRefs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">test-receiver</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">logging.banzaicloud.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Output</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-receiver</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">http:</span></span><br><span class="line">    <span class="attr">endpoint:</span> <span class="string">http://logging-operator-test-receiver:8080</span></span><br><span class="line">    <span class="attr">content_type:</span> <span class="string">application/json</span></span><br><span class="line">    <span class="attr">buffer:</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">memory</span></span><br><span class="line">      <span class="attr">tags:</span> <span class="string">time</span></span><br><span class="line">      <span class="attr">timekey:</span> <span class="string">1s</span></span><br><span class="line">      <span class="attr">timekey_wait:</span> <span class="string">0s</span></span><br></pre></td></tr></table></figure>

<h1 id="日志输出到-ElasticSearch"><a href="#日志输出到-ElasticSearch" class="headerlink" title="日志输出到 ElasticSearch"></a>日志输出到 ElasticSearch</h1><h2 id="ElasticSearch-OutPut-配置"><a href="#ElasticSearch-OutPut-配置" class="headerlink" title="ElasticSearch OutPut 配置"></a>ElasticSearch OutPut 配置</h2><p>在 default 命名空间创建 elastic 密码的 <code>secret</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create secret generic elastic-password --from-literal=password=<span class="string">&#x27;密码&#x27;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">logging.banzaicloud.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Flow</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-logging</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">match:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">select:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">logging:</span> <span class="string">golang</span></span><br><span class="line">  <span class="attr">filters:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">concat:</span></span><br><span class="line">      <span class="attr">key:</span> <span class="string">log</span></span><br><span class="line">      <span class="attr">multiline_start_regexp:</span> <span class="string">&#x27;/^\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;/&#x27;</span></span><br><span class="line">      <span class="attr">multiline_end_regexp:</span> <span class="string">&#x27;/\Z/&#x27;</span></span><br><span class="line">      <span class="attr">separator:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">      <span class="attr">flush_interval:</span> <span class="number">5</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">parser:</span></span><br><span class="line">      <span class="attr">remove_key_name_field:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">reserve_data:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">parse:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">multi_format</span></span><br><span class="line">        <span class="attr">patterns:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">format:</span> <span class="string">regexp</span></span><br><span class="line">          <span class="attr">expression:</span> <span class="string">/^(?&lt;time&gt;\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;</span> <span class="string">\d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;.\d&#123;3&#125;)(\s+)(?&lt;loglevel&gt;\w+)(\s+)(?&lt;line&gt;[\w\.\:\/\-]+)(\s+)(?&lt;func&gt;[\w\.\:\/\-]+)/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">record_transformer:</span></span><br><span class="line">      <span class="attr">remove_keys:</span> <span class="string">&#x27;$.kubernetes.pod_id,$.kubernetes.annotations,$.kubernetes.labels,$.kubernetes.docker_id,$.kubernetes.container_hash,$.kubernetes.container_image&#x27;</span></span><br><span class="line">  <span class="attr">localOutputRefs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">elastic-receiver</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">logging.banzaicloud.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Output</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">elastic-receiver</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">elasticsearch:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">10.0</span><span class="number">.16</span><span class="number">.2</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9200</span></span><br><span class="line">    <span class="attr">logstash_format:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">logstash_prefix:</span> <span class="string">my-test</span></span><br><span class="line">    <span class="attr">scheme:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">elastic</span></span><br><span class="line">    <span class="attr">password:</span></span><br><span class="line">      <span class="attr">valueFrom:</span></span><br><span class="line">        <span class="attr">secretKeyRef:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">elastic-password</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">password</span></span><br><span class="line">    <span class="attr">buffer:</span></span><br><span class="line">      <span class="attr">timekey:</span> <span class="string">1m</span></span><br><span class="line">      <span class="attr">timekey_wait:</span> <span class="string">30s</span></span><br><span class="line">      <span class="attr">timekey_use_utc:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h2 id="使用动态的索引名称"><a href="#使用动态的索引名称" class="headerlink" title="使用动态的索引名称"></a>使用动态的索引名称</h2><p>如果需要配置动态索引名称，需要在 buffer 中添加对应的 key 值，如我们需要在索引名称中添加命名空间与容器名称，配置如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">logging.banzaicloud.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Flow</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-logging</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">match:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">select:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">logging:</span> <span class="string">golang</span></span><br><span class="line">  <span class="attr">filters:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">concat:</span></span><br><span class="line">      <span class="attr">key:</span> <span class="string">log</span></span><br><span class="line">      <span class="attr">multiline_start_regexp:</span> <span class="string">&#x27;/^\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;/&#x27;</span></span><br><span class="line">      <span class="attr">multiline_end_regexp:</span> <span class="string">&#x27;/\Z/&#x27;</span></span><br><span class="line">      <span class="attr">separator:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">      <span class="attr">flush_interval:</span> <span class="number">5</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">parser:</span></span><br><span class="line">      <span class="attr">remove_key_name_field:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">reserve_data:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">parse:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">multi_format</span></span><br><span class="line">        <span class="attr">patterns:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">format:</span> <span class="string">regexp</span></span><br><span class="line">          <span class="attr">expression:</span> <span class="string">/^(?&lt;time&gt;\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;</span> <span class="string">\d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;.\d&#123;3&#125;)(\s+)(?&lt;loglevel&gt;\w+)(\s+)(?&lt;line&gt;[\w\.\:\/\-]+)(\s+)(?&lt;func&gt;[\w\.\:\/\-]+)/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">record_transformer:</span></span><br><span class="line">      <span class="attr">remove_keys:</span> <span class="string">&#x27;$.kubernetes.pod_id,$.kubernetes.annotations,$.kubernetes.labels,$.kubernetes.docker_id,$.kubernetes.container_hash,$.kubernetes.container_image&#x27;</span></span><br><span class="line">  <span class="attr">localOutputRefs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">elastic-receiver</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">logging.banzaicloud.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Output</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">elastic-receiver</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">elasticsearch:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">10.0</span><span class="number">.16</span><span class="number">.2</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9200</span></span><br><span class="line">    <span class="attr">logstash_format:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">logstash_prefix:</span> <span class="string">my-test-$&#123;$.kubernetes.namespace_name&#125;-$&#123;$.kubernetes.container_name&#125;</span></span><br><span class="line">    <span class="attr">scheme:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">elastic</span></span><br><span class="line">    <span class="attr">password:</span></span><br><span class="line">      <span class="attr">valueFrom:</span></span><br><span class="line">        <span class="attr">secretKeyRef:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">elastic-password</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">password</span></span><br><span class="line">    <span class="attr">buffer:</span></span><br><span class="line">      <span class="attr">tags:</span> <span class="string">tag,time,$.kubernetes.namespace_name,$.kubernetes.container_name</span></span><br><span class="line">      <span class="attr">timekey:</span> <span class="string">1m</span></span><br><span class="line">      <span class="attr">timekey_wait:</span> <span class="string">30s</span></span><br><span class="line">      <span class="attr">timekey_use_utc:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h2 id="ElasticSearch-使用数据流模式"><a href="#ElasticSearch-使用数据流模式" class="headerlink" title="ElasticSearch 使用数据流模式"></a>ElasticSearch 使用数据流模式</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">logging.banzaicloud.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Output</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">elastic-receiver</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">elasticsearch:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">10.0</span><span class="number">.16</span><span class="number">.2</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9200</span></span><br><span class="line">    <span class="attr">logstash_format:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">index_name:</span> <span class="string">my-test-$&#123;$.kubernetes.namespace_name&#125;-$&#123;$.kubernetes.container_name&#125;</span></span><br><span class="line">    <span class="attr">include_timestamp:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">data_stream_enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">data_stream_name:</span> <span class="string">my-test-$&#123;$.kubernetes.namespace_name&#125;-$&#123;$.kubernetes.container_name&#125;</span></span><br><span class="line">    <span class="attr">data_stream_ilm_name:</span> <span class="string">my-test</span></span><br><span class="line">    <span class="attr">data_stream_template_name:</span> <span class="string">my-test</span></span><br><span class="line">    <span class="attr">scheme:</span> <span class="string">https</span></span><br><span class="line">    <span class="attr">ssl_verify:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">ssl_version:</span> <span class="string">TLSv1_2</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">elastic</span></span><br><span class="line">    <span class="attr">log_es_400_reason:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">default_elasticsearch_version:</span> <span class="string">&quot;8.10.4&quot;</span></span><br><span class="line">    <span class="attr">password:</span></span><br><span class="line">      <span class="attr">valueFrom:</span></span><br><span class="line">        <span class="attr">secretKeyRef:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">elastic-password</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">password</span></span><br><span class="line">    <span class="attr">buffer:</span></span><br><span class="line">      <span class="attr">tags:</span> <span class="string">tag,time,$.kubernetes.namespace_name,$.kubernetes.container_name</span></span><br><span class="line">      <span class="attr">timekey:</span> <span class="string">1m</span></span><br><span class="line">      <span class="attr">timekey_wait:</span> <span class="string">1m</span></span><br><span class="line">      <span class="attr">timekey_use_utc:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>CloudNative</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>Logging</tag>
      </tags>
  </entry>
  <entry>
    <title>从零实现CI/CD（二）- Jenkins 配置流水线</title>
    <url>/en-us/cicd-in-kubernetes-based-jenkins-2/</url>
    <content><![CDATA[<div class="note red flat"><p>Sorry, the current document does not have an English version. Click to switch to <a href="/cicd-in-kubernetes-based-jenkins-2/">Chinese</a>.</p>
</div>

<h1 id="简单的-CICD-流程"><a href="#简单的-CICD-流程" class="headerlink" title="简单的 CICD 流程"></a>简单的 CICD 流程</h1><img src="/en-us/cicd-in-kubernetes-based-jenkins-2/cicd.webp" class="">

<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>在配置流水线之前需要进行一些准备工作</p>
<h2 id="下载插件"><a href="#下载插件" class="headerlink" title="下载插件"></a>下载插件</h2><p>需要下载以下插件：</p>
<ul>
<li>Kubernetes</li>
<li>Docker</li>
<li>Docker Pipeline</li>
<li>Gitlab</li>
</ul>
<p>如图所示：</p>
<img src="/en-us/cicd-in-kubernetes-based-jenkins-2/jenkins-plugin-kubernetes.webp" class="">
<img src="/en-us/cicd-in-kubernetes-based-jenkins-2/jenkins-plugin-docker.webp" class="">
<img src="/en-us/cicd-in-kubernetes-based-jenkins-2/jenkins-plugin-gitlab.webp" class="">

<h2 id="在-jenkins-容器中生成密钥对并注册到-gitlab-中"><a href="#在-jenkins-容器中生成密钥对并注册到-gitlab-中" class="headerlink" title="在 jenkins 容器中生成密钥对并注册到 gitlab 中"></a>在 jenkins 容器中生成密钥对并注册到 gitlab 中</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it jenkins /bin/bash</span><br><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure>

<img src="/en-us/cicd-in-kubernetes-based-jenkins-2/sshkey.webp" class="">

<h2 id="创建全局凭据"><a href="#创建全局凭据" class="headerlink" title="创建全局凭据"></a>创建全局凭据</h2><p>Jenkins可以创建以下凭据</p>
<ul>
<li>秘密文本：令牌，例如 API 令牌（例如 GitHub 个人访问令牌），</li>
<li>用户名和密码：可以作为单独的组件或格式中的冒号分隔字符串处理username:password</li>
<li>秘密文件：本质上是文件中的秘密内容</li>
<li>带有私钥的 SSH 用户名：SSH 公钥&#x2F;私钥对</li>
<li>证书：PKCS#12 证书文件和可选密码</li>
<li>Docker 主机证书身份验证凭据</li>
</ul>
<p>选择系统管理-&gt;凭据-&gt;系统-&gt;全局凭据 (unrestricted)</p>
<img src="/en-us/cicd-in-kubernetes-based-jenkins-2/unrestricted.webp" class="">

<h3 id="创建全局-Gitlab-SSH-凭据"><a href="#创建全局-Gitlab-SSH-凭据" class="headerlink" title="创建全局 Gitlab SSH 凭据"></a>创建全局 Gitlab SSH 凭据</h3><ul>
<li>类型为：SSH Username with private key</li>
<li>范围选择全局</li>
<li>ID为凭据的唯一标识，这里设置为<code>global-sshkey</code></li>
<li>配置username</li>
<li>设置容器内生成的私钥</li>
</ul>
<img src="/en-us/cicd-in-kubernetes-based-jenkins-2/ssh-username-with-private-key.webp" class="">

<h3 id="创建全局镜像仓库凭据"><a href="#创建全局镜像仓库凭据" class="headerlink" title="创建全局镜像仓库凭据"></a>创建全局镜像仓库凭据</h3><ul>
<li>类型为：Username with password</li>
<li>范围选择全局</li>
<li>用户名为仓库的用户名</li>
<li>密码为仓库的密码</li>
<li>ID为凭据的唯一标识，这里设置为<code>harbor-secret</code></li>
</ul>
<img src="/en-us/cicd-in-kubernetes-based-jenkins-2/username-with-password.webp" class="">

<h3 id="创建全局K8S集群凭据"><a href="#创建全局K8S集群凭据" class="headerlink" title="创建全局K8S集群凭据"></a>创建全局K8S集群凭据</h3><p>K8S 集群凭据需要创建两个，一个用于 Jenkins Kubernetes Cloud 插件连接至 Kubernetes 集群启动 Jenkins Agent 容器，另一个用于 Jenkinsfile 中部署应用到 Kubernetes（如果不需要部署可以略过）</p>
<h4 id="用于插件的-Secret"><a href="#用于插件的-Secret" class="headerlink" title="用于插件的 Secret"></a>用于插件的 Secret</h4><ul>
<li>类型为：Secret file</li>
<li>范围选择全局</li>
<li>直接上传 ~&#x2F;.kube&#x2F;config 文件</li>
<li>ID为凭据的唯一标识，这里设置为<code>k8s-config-file</code></li>
</ul>
<img src="/en-us/cicd-in-kubernetes-based-jenkins-2/secret-file.webp" class="">

<h4 id="用于部署的-Secret"><a href="#用于部署的-Secret" class="headerlink" title="用于部署的 Secret"></a>用于部署的 Secret</h4><ul>
<li>类型为：Secret text</li>
<li>范围选择全局</li>
<li>Secret 为 ~&#x2F;.kube&#x2F;config 内容的 base64 加密（<code>base64 ~/.kube/config &gt; ~/k8s-config.txt</code>）</li>
<li>ID为凭据的唯一标识，这里设置为<code>k8s-config</code></li>
</ul>
<img src="/en-us/cicd-in-kubernetes-based-jenkins-2/secret-text.webp" class="">

<div class="note blue flat"><p>PS : 如果当前 jenkins 服务器不能直接连接内网 K8S 配置，需要修改 ~&#x2F;.kube&#x2F;config 中的 server 地址为 api-service 的代理地址</p>
</div>

<h1 id="流水线的-Jenkinsfile-配置"><a href="#流水线的-Jenkinsfile-配置" class="headerlink" title="流水线的 Jenkinsfile 配置"></a>流水线的 Jenkinsfile 配置</h1><h2 id="基于-Docker-容器的构建"><a href="#基于-Docker-容器的构建" class="headerlink" title="基于 Docker 容器的构建"></a>基于 Docker 容器的构建</h2><p>在每个 stage 中，使用不同的 docker agent 容器运行命令：</p>
<ul>
<li>image 为用于构建的镜像</li>
<li>args 为 docker 参数</li>
<li>steps 中编写需要执行的命令</li>
</ul>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">stages &#123;</span><br><span class="line">  stage(<span class="string">&#x27;Node Build&#x27;</span>) &#123;</span><br><span class="line">    agent &#123;</span><br><span class="line">      docker &#123;</span><br><span class="line">        image <span class="string">&#x27;node:14&#x27;</span></span><br><span class="line">        args <span class="string">&#x27;-v $HOME/node_modules:/node_modules -p 3000:3000&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    steps &#123;</span><br><span class="line">    ....</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="基于-Kubernetes-Cloud-的构建"><a href="#基于-Kubernetes-Cloud-的构建" class="headerlink" title="基于 Kubernetes Cloud 的构建"></a>基于 Kubernetes Cloud 的构建</h2><p>等待更新</p>
<h2 id="全量-Jenkinsfile-参考"><a href="#全量-Jenkinsfile-参考" class="headerlink" title="全量 Jenkinsfile 参考"></a>全量 Jenkinsfile 参考</h2><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    # 这里设置默认使用 Jenkins 本身的 master 节点作为运行节点</span><br><span class="line">    agent &#123;</span><br><span class="line">        label <span class="string">&quot;master&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    # 这里通过读取我们配置的凭据，将其读取到环境变量中</span><br><span class="line">    environment &#123;</span><br><span class="line">        HARBOR_SECRET = credentials(<span class="string">&#x27;harbor-secret&#x27;</span>)</span><br><span class="line">        K8S_CONFIG = credentials(<span class="string">&#x27;k8s-config&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    # 这里可以配置 gitlab 触发器，用于配置推送代码后自动运行 jenkins 流水线</span><br><span class="line">    triggers &#123;</span><br><span class="line">        gitlab(</span><br><span class="line">            <span class="symbol">triggerOnPush:</span> <span class="literal">true</span>,</span><br><span class="line">            <span class="symbol">triggerOnMergeRequest:</span> <span class="literal">false</span>,</span><br><span class="line">            <span class="symbol">branchFilterType:</span> <span class="string">&#x27;All&#x27;</span>,</span><br><span class="line">            <span class="symbol">secretToken:</span><span class="string">&quot;【触发器的 token】&quot;</span></span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">    # 这里配置运行前可以修改的参数</span><br><span class="line">    parameters &#123;</span><br><span class="line">        string(<span class="attr">name:</span> <span class="string">&#x27;HARBOR_HOST&#x27;</span>, <span class="attr">defaultValue:</span> <span class="string">&#x27;&#x27;</span>, <span class="attr">description:</span> <span class="string">&#x27;harbor 镜像仓库地址&#x27;</span>)</span><br><span class="line">        string(<span class="attr">name:</span> <span class="string">&#x27;APP_NAME&#x27;</span>, <span class="attr">defaultValue:</span> <span class="string">&#x27;&#x27;</span>, <span class="attr">description:</span> <span class="string">&#x27;应用名称&#x27;</span>)</span><br><span class="line">        string(<span class="attr">name:</span> <span class="string">&#x27;BRANCH_NAME&#x27;</span>, <span class="attr">defaultValue:</span> <span class="string">&#x27;&#x27;</span>, <span class="attr">description:</span> <span class="string">&#x27;分支名称&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(<span class="string">&#x27;Node Build&#x27;</span>) &#123;</span><br><span class="line">            # 这里使用 nodejs 的容器用于编译代码</span><br><span class="line">            agent &#123;</span><br><span class="line">                docker &#123;</span><br><span class="line">                    image <span class="string">&#x27;node:14&#x27;</span></span><br><span class="line">                    args <span class="string">&#x27;-v $HOME/node_modules:/node_modules&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            steps &#123;</span><br><span class="line">                # 这里使用 git 插件以及之前配置的全局凭据拉取代码</span><br><span class="line">                git <span class="attr">url:</span> <span class="string">&quot;【仓库的地址，使用ssh模式】&quot;</span>,</span><br><span class="line">                    <span class="symbol">credentialsId:</span> <span class="string">&#x27;global-sshkey&#x27;</span>,</span><br><span class="line">                    <span class="symbol">branch:</span> <span class="string">&quot;$&#123;params.BRANCH_NAME&#125;&quot;</span>,</span><br><span class="line">                    <span class="symbol">changelog:</span> <span class="literal">true</span></span><br><span class="line">                # 这里可以将提交 hash 读取到环境变量中</span><br><span class="line">                script&#123;</span><br><span class="line">                    env.COMMIT_ID = sh(<span class="attr">returnStdout:</span> <span class="literal">true</span>,<span class="attr">script:</span> <span class="string">&#x27;git rev-parse --short HEAD&#x27;</span>).trim()</span><br><span class="line">                &#125;</span><br><span class="line">                sh <span class="string">&#x27;echo npm_version:$(npm -v)&#x27;</span></span><br><span class="line">                sh <span class="string">&#x27;echo node_version:$(node -v)&#x27;</span></span><br><span class="line">                sh <span class="string">&#x27;npm config get registry&#x27;</span></span><br><span class="line">                sh <span class="string">&#x27;npm install&#x27;</span></span><br><span class="line">                sh <span class="string">&#x27;npm run build&#x27;</span></span><br><span class="line">                # 这里将编译后的代码打包为一个名为 app 的包，可以在后续的 step 中使用</span><br><span class="line">                stash <span class="attr">includes:</span> <span class="string">&#x27;dist/**/*&#x27;</span>, <span class="attr">name:</span> <span class="string">&#x27;app&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(<span class="string">&#x27;Docker Build&#x27;</span>)&#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                # 解压 app 包</span><br><span class="line">                unstash <span class="string">&#x27;app&#x27;</span></span><br><span class="line">                # 登录容器仓库并且构建和推送容器，如果使用 username with password 的凭据作为环境变量，后缀添加 _USR 和 _PSW 是分别获取用户名和密码</span><br><span class="line">                sh <span class="string">&quot;docker login -u $&#123;HARBOR_SECRET_USR&#125; -p $&#123;HARBOR_SECRET_PSW&#125; $&#123;params.HARBOR_HOST&#125;&quot;</span></span><br><span class="line">                sh <span class="string">&quot;docker build -t 【这里写对应的镜像 TAG】 .&quot;</span></span><br><span class="line">                sh <span class="string">&quot;docker push 【这里写对应的镜像 TAG】&quot;</span></span><br><span class="line">                sh <span class="string">&quot;docker rmi 【这里写对应的镜像 TAG】&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(<span class="string">&#x27;Deploy&#x27;</span>)&#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                ......</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="配置流水线"><a href="#配置流水线" class="headerlink" title="配置流水线"></a>配置流水线</h1><ol>
<li>创建任务，选择类型为流水线</li>
</ol>
<img src="/en-us/cicd-in-kubernetes-based-jenkins-2/pipeline.webp" class="">

<ol start="2">
<li>将写好的 Jenkinsfile 放入下方</li>
</ol>
<img src="/en-us/cicd-in-kubernetes-based-jenkins-2/pipeline-jenkinsfile.webp" class="">

<p>这里也可以选择 pipeline script from scm ，使用代码仓库中保存的 Jenkinsfile</p>
<img src="/en-us/cicd-in-kubernetes-based-jenkins-2/pipeline-jenkinsfile-with-scm.webp" class="">

<p>保存后，直接运行流水线即可</p>
]]></content>
      <categories>
        <category>CloudNative</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>DevOps</tag>
        <tag>Jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes 日志收集（四）- 基于 Fluent-bit Daemonset 的日志收集</title>
    <url>/en-us/kubernetes-logging-collection-4/</url>
    <content><![CDATA[<div class="note red flat"><p>Sorry, the current document does not have an English version. Click to switch to <a href="/kubernetes-logging-collection-4/">Chinese</a>.</p>
</div>

<h1 id="架构图"><a href="#架构图" class="headerlink" title="架构图"></a>架构图</h1><img src="/en-us/kubernetes-logging-collection-4/fluentbit-daemonset.webp" class="">

<ul>
<li>使用 DaemonSet 模式部署 Fluent Bit，使每个 Kubernetes 集群节点都运行一个 Fluent-Bit 容器</li>
<li>将 Kubernetes 容器运行时的日志文件夹挂载到 Fluent-Bit 容器中以供采集</li>
<li>通过 Kubernetes 提供的相关接口获取采集日志的相关元数据</li>
</ul>
<h1 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h1><h2 id="容器运行时日志解析"><a href="#容器运行时日志解析" class="headerlink" title="容器运行时日志解析"></a>容器运行时日志解析</h2><p>通过 Fluent-Bit 的多行日志分析进行日志解析与合并，相关配置如下</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[INPUT]</span></span><br><span class="line">  name             tail</span><br><span class="line">  tag              kube.*</span><br><span class="line">  db               /tail-db/tail-containers-state.db</span><br><span class="line">  db.locking       true</span><br><span class="line">  mem_buf_limit    10mb</span><br><span class="line">  multiline.parser multiline_docker</span><br><span class="line">  path             /var/log/containers/*.log</span><br><span class="line">  refresh_interval 5</span><br><span class="line"></span><br><span class="line"><span class="section">[FILTER]</span></span><br><span class="line">  name             kubernetes</span><br><span class="line">  match            kube.*</span><br><span class="line">  buffer_size      0</span><br><span class="line">  kube_token_ttl   600</span><br><span class="line">  kube_url         https://kubernetes.default.svc:443</span><br><span class="line">  use_kubelet      off</span><br><span class="line">  merge_log        on</span><br></pre></td></tr></table></figure>

<p>在该配置中通过 tail input 配置获取容器的日志，并通过 kubernetes filter 插件对日志添加 k8s 元数据</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[MULTILINE_PARSER]</span></span><br><span class="line">  name          multiline_docker</span><br><span class="line">  parser        docker</span><br><span class="line">  key_content   log</span><br><span class="line">  type          regex</span><br><span class="line">  flush_timeout 2000</span><br><span class="line">  rule          &quot;start_state&quot;  &quot;/^\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125; \d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;(\.|\,)\d&#123;3&#125;(\s*)\w+/&quot;  &quot;cont_state&quot;</span><br><span class="line">  rule          &quot;cont_state&quot;  &quot;/^(?!\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125; \d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;(\.|\,)\d&#123;3&#125;\s+\w+).*/&quot;  &quot;cont_state&quot;</span><br><span class="line"></span><br><span class="line"><span class="section">[PARSER]</span></span><br><span class="line">  Name   json</span><br><span class="line">  Format json</span><br><span class="line">  Time_Key time</span><br><span class="line">  Time_Format %Y-%m-%dT%H:%M:%S.%LZ</span><br><span class="line"></span><br><span class="line"><span class="section">[PARSER]</span></span><br><span class="line">  name        docker</span><br><span class="line">  format      json</span><br><span class="line">  decode_field_as  escaped_utf8  log  do_next</span><br></pre></td></tr></table></figure>

<p>在该配置中定义了多行匹配规则 multiline_docker，匹配逻辑为：<br>先对原始容器日志进行 docker 的匹配规则解析（如果使用的是 containerd，需要将 docker json格式修改为对应的 cri 格式）<br>开始部分 -》 开始部分正则匹配（这里的正则匹配的是时间戳+日志等级的格式）-》合并部分<br>合并部分 -》 合并规则正则匹配（这里的正则匹配的是非时间戳+日志等级的格式）-》合并部分<br>如下格式类型</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">2024-05-22 02:29:29.781 ERROR log_test/main.go:64 main.main 打印测试日志： 2024-05-22 02:29:29.781</span><br><span class="line">main.main</span><br><span class="line">        D:/GolandProjects/log_test/main.go:64</span><br><span class="line">runtime.main</span><br><span class="line">        C:/Program Files/Go/src/runtime/proc.go:271</span><br><span class="line">2024-05-22 02:29:29.781 ERROR log_test/main.go:65 main.main</span><br><span class="line">        select</span><br><span class="line">        m.id,</span><br><span class="line">        m.parent_id,</span><br><span class="line">        m.menu_type,</span><br><span class="line">        .....</span><br></pre></td></tr></table></figure>

<p>其中每部分日志的开头都为 “2024-05-22 02:29:29.781 ERROR”，而其余部分都为其他多行日志，那么在日志匹配规则下，“2024-05-22 02:29:29.781 ERROR” 该格式会视为所有日志的开头部分</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">main.main</span><br><span class="line">        D:/GolandProjects/log_test/main.go:64</span><br><span class="line">runtime.main</span><br><span class="line">        C:/Program Files/Go/src/runtime/proc.go:271</span><br></pre></td></tr></table></figure>

<p>此部分视为日志延续行内容直到匹配到下一个 “2024-05-22 02:29:29.781 ERROR” 部分对日志进行拆分</p>
<h2 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h2><p>因为基于 DaemonSet 的模式采集了 K8S 集群所有的日志，所以需要使用标签选择器对不同的标签进行分类，保留需要的日志，舍弃不需要的日志，配置如下：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[FILTER]</span></span><br><span class="line">  name      lua</span><br><span class="line">  match     kube.*</span><br><span class="line">  script    scripts.lua</span><br><span class="line">  call      label_filter</span><br><span class="line"></span><br><span class="line"><span class="section">[FILTER]</span></span><br><span class="line">  name      rewrite_tag</span><br><span class="line">  match     kube.*</span><br><span class="line">  rule      $log_tag ^(.*)$ $log_tag true</span><br><span class="line"></span><br><span class="line"><span class="section">[FILTER]</span></span><br><span class="line">  name      lua</span><br><span class="line">  match     *</span><br><span class="line">  script    scripts.lua</span><br><span class="line">  call      remove_key_field</span><br></pre></td></tr></table></figure>

<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">label_filter</span><span class="params">(tag, timestamp, record)</span></span></span><br><span class="line">    <span class="keyword">if</span> record[<span class="string">&quot;kubernetes&quot;</span>] == <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>, timestamp, record</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> namespace = record[<span class="string">&quot;kubernetes&quot;</span>][<span class="string">&quot;namespace_name&quot;</span>]</span><br><span class="line">    <span class="keyword">local</span> labels = record[<span class="string">&quot;kubernetes&quot;</span>][<span class="string">&quot;labels&quot;</span>]</span><br><span class="line">    <span class="keyword">local</span> app = record[<span class="string">&quot;kubernetes&quot;</span>][<span class="string">&quot;labels&quot;</span>][<span class="string">&quot;app&quot;</span>]</span><br><span class="line">    <span class="keyword">local</span> log_tag = <span class="literal">nil</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> labels ~= <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span> labels[<span class="string">&quot;logging&quot;</span>] == <span class="string">&quot;java&quot;</span> <span class="keyword">then</span></span><br><span class="line">            log_tag = <span class="built_in">string</span>.<span class="built_in">format</span>(<span class="string">&quot;java.%s.%s&quot;</span>, namespace, app)</span><br><span class="line">        <span class="keyword">elseif</span> labels[<span class="string">&quot;component&quot;</span>] == <span class="string">&quot;jobmanager&quot;</span> <span class="keyword">then</span></span><br><span class="line">            log_tag = <span class="built_in">string</span>.<span class="built_in">format</span>(<span class="string">&quot;flink.jobmanager.%s.%s&quot;</span>, namespace, app)</span><br><span class="line">        <span class="keyword">elseif</span> labels[<span class="string">&quot;component&quot;</span>] == <span class="string">&quot;taskmanager&quot;</span> <span class="keyword">then</span></span><br><span class="line">            log_tag = <span class="built_in">string</span>.<span class="built_in">format</span>(<span class="string">&quot;flink.taskmanager.%s.%s&quot;</span>, namespace, app)</span><br><span class="line">        <span class="keyword">elseif</span> labels[<span class="string">&quot;logging&quot;</span>] == <span class="string">&quot;nginx&quot;</span> <span class="keyword">then</span></span><br><span class="line">            log_tag = <span class="built_in">string</span>.<span class="built_in">format</span>(<span class="string">&quot;nginx.%s&quot;</span>, namespace)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> log_tag <span class="keyword">then</span></span><br><span class="line">        record[<span class="string">&quot;log_tag&quot;</span>] = log_tag</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>, timestamp, record</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>, timestamp, record</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">remove_key_field</span><span class="params">(tag, timestamp, record)</span></span></span><br><span class="line">    fields_to_remove = &#123;<span class="string">&quot;stream&quot;</span>, <span class="string">&quot;kubernetes.pod_id&quot;</span>, <span class="string">&quot;kubernetes.docker_id&quot;</span>, <span class="string">&quot;kubernetes.container_hash&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;kubernetes.container_image&quot;</span>, <span class="string">&quot;kubernetes.labels&quot;</span>, <span class="string">&quot;kubernetes.annotations&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">for</span> _, field <span class="keyword">in</span> <span class="built_in">ipairs</span>(fields_to_remove) <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> keys = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> <span class="built_in">string</span>.<span class="built_in">gmatch</span>(field, <span class="string">&quot;[^.]+&quot;</span>) <span class="keyword">do</span></span><br><span class="line">            <span class="built_in">table</span>.<span class="built_in">insert</span>(keys, key)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">local</span> current = record</span><br><span class="line">        <span class="keyword">for</span> i = <span class="number">1</span>, #keys - <span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">            current = current[keys[i]]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> current <span class="keyword">then</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">if</span> current <span class="keyword">then</span></span><br><span class="line">            current[keys[#keys]] = <span class="literal">nil</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>, timestamp, record</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>通过 lua 脚本获取不同的 label 内容，<code>label_filter</code>根据 label 内容分配不同的 日志 tag，<code>remove_key_field</code>清理部分不需要的 Kubernetes 元数据</p>
<h2 id="根据修改后的-tag，进行日志的正则分析匹配"><a href="#根据修改后的-tag，进行日志的正则分析匹配" class="headerlink" title="根据修改后的 tag，进行日志的正则分析匹配"></a>根据修改后的 tag，进行日志的正则分析匹配</h2><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[FILTER]</span></span><br><span class="line">  name      parser</span><br><span class="line">  match     java.*</span><br><span class="line">  key_name  log</span><br><span class="line">  parser    java_log</span><br><span class="line">  reserve_data on</span><br><span class="line"></span><br><span class="line"><span class="section">[FILTER]</span></span><br><span class="line">  name      parser</span><br><span class="line">  match     flink.*</span><br><span class="line">  key_name  log</span><br><span class="line">  parser    flink</span><br><span class="line">  reserve_data on</span><br><span class="line"></span><br><span class="line"><span class="section">[FILTER]</span></span><br><span class="line">  name      parser</span><br><span class="line">  match     nginx.*</span><br><span class="line">  key_name  log</span><br><span class="line">  parser    json</span><br><span class="line">  reserve_data on</span><br><span class="line"></span><br><span class="line"><span class="section">[PARSER]</span></span><br><span class="line">  name              java_log</span><br><span class="line">  format            regex</span><br><span class="line">  regex             /^(?&lt;time&gt;\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125; \d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;.\d&#123;3&#125;)(\s*)(?&lt;loglevel&gt;\w*)(\s*)\<span class="section">[(?&lt;trace_id&gt;\S*)\]</span>\<span class="section">[[\w\-]</span>*<span class="comment">;(?&lt;thread&gt;[^\[\]\;]*);(?&lt;span_id&gt;\S*)\](\s*)(?&lt;caller&gt;\S*)(?&lt;message&gt;[\S\s]*)/</span></span><br><span class="line">  time_key          time</span><br><span class="line">  time_format       %Y-%m-%d %H:%M:%S.%L</span><br><span class="line">  time_keep         On</span><br><span class="line">  time_offset       +0800</span><br><span class="line"></span><br><span class="line"><span class="section">[PARSER]</span></span><br><span class="line">  name              flink</span><br><span class="line">  format            regex</span><br><span class="line">  regex             /^(?&lt;time&gt;\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125; \d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;,\d&#123;3&#125;)(\s+)(?&lt;loglevel&gt;\w+)(\s+)(?&lt;classname&gt;<span class="section">[\w\.]</span>+)(?&lt;message&gt;<span class="section">[\S\s]</span>*)/</span><br><span class="line">  time_key          time</span><br><span class="line">  time_format       %Y-%m-%d %H:%M:%S,%L</span><br><span class="line">  time_keep         On</span><br></pre></td></tr></table></figure>

<p>这里的正则 PARSER 需要根据自己的需要来配置</p>
<h2 id="传输日志到-ES-或其他"><a href="#传输日志到-ES-或其他" class="headerlink" title="传输日志到 ES 或其他"></a>传输日志到 ES 或其他</h2><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[OUTPUT]</span></span><br><span class="line">  name              es</span><br><span class="line">  match             flink.jobmanager.*</span><br><span class="line">  host              【ES HOST】</span><br><span class="line">  port              9200</span><br><span class="line">  index             flink-jobmanager</span><br><span class="line">  replace_dots      on</span><br><span class="line">  retry_limit       2</span><br><span class="line">  buffer_size       10mb</span><br><span class="line">  tls               on</span><br><span class="line">  tls.verify        off</span><br><span class="line">  http_user         elastic</span><br><span class="line">  http_passwd       【密码】</span><br><span class="line">  suppress_type_name on</span><br><span class="line">  trace_error       on</span><br><span class="line"></span><br><span class="line"><span class="section">[OUTPUT]</span></span><br><span class="line">  name      http</span><br><span class="line">  match     java.*</span><br><span class="line">  host      log-alert.logging.svc.cluster.local</span><br><span class="line">  port      7000</span><br><span class="line">  uri       /api/v1/receiver</span><br><span class="line">  format    json</span><br></pre></td></tr></table></figure>

<h1 id="完整配置"><a href="#完整配置" class="headerlink" title="完整配置"></a>完整配置</h1><h2 id="DaemonSet"><a href="#DaemonSet" class="headerlink" title="DaemonSet"></a>DaemonSet</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">fluent-bit</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">logging</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">fluent-bit</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">fluent-bit</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">fluent-bit</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">&quot;node-role.kubernetes.io/master&quot;</span></span><br><span class="line">        <span class="attr">operator:</span> <span class="string">&quot;Exists&quot;</span></span><br><span class="line">        <span class="attr">effect:</span> <span class="string">&quot;NoSchedule&quot;</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">fluentbit-logger</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">fluent/fluent-bit:3.0.3</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/fluent-bit/etc</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/var/log</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">pod-volume</span></span><br><span class="line">            <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/data/docker/containers</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">docker-volume</span></span><br><span class="line">            <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/tail-db</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">positiondb</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/buffers</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">buffers</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/var/run/secrets/kubernetes.io/serviceaccount</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">k8s-certs</span></span><br><span class="line">            <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pod-volume</span></span><br><span class="line">        <span class="attr">hostPath:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/var/log</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">docker-volume</span></span><br><span class="line">        <span class="attr">hostPath:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/data/docker/containers</span> <span class="comment"># 这里配置对应的容器运行时数据文件夹</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">fluent-bit-config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">buffers</span></span><br><span class="line">        <span class="attr">emptyDir:</span> &#123;&#125;</span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">positiondb</span></span><br><span class="line">        <span class="attr">emptyDir:</span> &#123;&#125;</span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">k8s-certs</span></span><br><span class="line">        <span class="attr">projected:</span></span><br><span class="line">          <span class="attr">sources:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">serviceAccountToken:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">token</span></span><br><span class="line">              <span class="attr">expirationSeconds:</span> <span class="number">7200</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">configMap:</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">kube-root-ca.crt</span></span><br><span class="line">              <span class="attr">items:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">ca.crt</span></span><br><span class="line">                <span class="attr">path:</span> <span class="string">ca.crt</span></span><br></pre></td></tr></table></figure>

<h2 id="ConfigMap"><a href="#ConfigMap" class="headerlink" title="ConfigMap"></a>ConfigMap</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">fluent-bit-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">logging</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">fluent-bit.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    [SERVICE]</span></span><br><span class="line"><span class="string">      flush            1</span></span><br><span class="line"><span class="string">      grace            5</span></span><br><span class="line"><span class="string">      daemon           off</span></span><br><span class="line"><span class="string">      log_level        info</span></span><br><span class="line"><span class="string">      parsers_file     /fluent-bit/etc/parsers.conf</span></span><br><span class="line"><span class="string">      coro_stack_size  32768</span></span><br><span class="line"><span class="string">      storage.path     /buffers</span></span><br><span class="line"><span class="string">      http_server      off</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="string">@INCLUDE</span> <span class="string">tail-kubernetes-log.conf</span></span><br><span class="line">    <span class="string">@INCLUDE</span> <span class="string">logging-label-filter.conf</span></span><br><span class="line">    <span class="string">@INCLUDE</span> <span class="string">parser-java-log.conf</span></span><br><span class="line">    <span class="string">@INCLUDE</span> <span class="string">parser-flink-log.conf</span></span><br><span class="line">    <span class="string">@INCLUDE</span> <span class="string">parser-nginx-log.conf</span></span><br><span class="line">    <span class="string">@INCLUDE</span> <span class="string">es-output.conf</span></span><br><span class="line">    <span class="string">@INCLUDE</span> <span class="string">log-alert.conf</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">tail-kubernetes-log.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    [INPUT]</span></span><br><span class="line"><span class="string">      name             tail</span></span><br><span class="line"><span class="string">      tag              kube.*</span></span><br><span class="line"><span class="string">      db               /tail-db/tail-containers-state.db</span></span><br><span class="line"><span class="string">      db.locking       true</span></span><br><span class="line"><span class="string">      mem_buf_limit    10mb</span></span><br><span class="line"><span class="string">      multiline.parser multiline_docker</span></span><br><span class="line"><span class="string">      path             /var/log/containers/*.log</span></span><br><span class="line"><span class="string">      refresh_interval 5</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    [<span class="string">FILTER</span>]</span><br><span class="line">      <span class="string">name</span>             <span class="string">kubernetes</span></span><br><span class="line">      <span class="string">match</span>            <span class="string">kube.*</span></span><br><span class="line">      <span class="string">buffer_size</span>      <span class="number">0</span></span><br><span class="line">      <span class="string">kube_token_ttl</span>   <span class="number">600</span></span><br><span class="line">      <span class="string">kube_url</span>         <span class="string">https://kubernetes.default.svc:443</span></span><br><span class="line">      <span class="string">use_kubelet</span>      <span class="string">off</span></span><br><span class="line">      <span class="string">merge_log</span>        <span class="string">on</span></span><br><span class="line"></span><br><span class="line">    [<span class="string">FILTER</span>]</span><br><span class="line">      <span class="string">name</span>      <span class="string">lua</span></span><br><span class="line">      <span class="string">match</span>     <span class="string">kube.*</span></span><br><span class="line">      <span class="string">script</span>    <span class="string">scripts.lua</span></span><br><span class="line">      <span class="string">call</span>      <span class="string">get_pod_ip</span></span><br><span class="line"></span><br><span class="line">    [<span class="string">FILTER</span>]</span><br><span class="line">      <span class="string">name</span>      <span class="string">lua</span></span><br><span class="line">      <span class="string">match</span>     <span class="string">kube.*</span></span><br><span class="line">      <span class="string">script</span>    <span class="string">scripts.lua</span></span><br><span class="line">      <span class="string">call</span>      <span class="string">get_app_name</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">logging-label-filter.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    [FILTER]</span></span><br><span class="line"><span class="string">      name      lua</span></span><br><span class="line"><span class="string">      match     kube.*</span></span><br><span class="line"><span class="string">      script    scripts.lua</span></span><br><span class="line"><span class="string">      call      label_filter</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    [<span class="string">FILTER</span>]</span><br><span class="line">      <span class="string">name</span>      <span class="string">rewrite_tag</span></span><br><span class="line">      <span class="string">match</span>     <span class="string">kube.*</span></span><br><span class="line">      <span class="string">rule</span>      <span class="string">$log_tag</span> <span class="string">^(.*)$</span> <span class="string">$log_tag</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    [<span class="string">FILTER</span>]</span><br><span class="line">      <span class="string">name</span>      <span class="string">lua</span></span><br><span class="line">      <span class="string">match</span>     <span class="string">*</span></span><br><span class="line">      <span class="string">script</span>    <span class="string">scripts.lua</span></span><br><span class="line">      <span class="string">call</span>      <span class="string">remove_key_field</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">parser-java-log.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    [FILTER]</span></span><br><span class="line"><span class="string">      name      parser</span></span><br><span class="line"><span class="string">      match     java.*</span></span><br><span class="line"><span class="string">      key_name  log</span></span><br><span class="line"><span class="string">      parser    java_log</span></span><br><span class="line"><span class="string">      reserve_data on</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">  <span class="attr">parser-flink-log.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    [FILTER]</span></span><br><span class="line"><span class="string">      name      parser</span></span><br><span class="line"><span class="string">      match     flink.*</span></span><br><span class="line"><span class="string">      key_name  log</span></span><br><span class="line"><span class="string">      parser    flink</span></span><br><span class="line"><span class="string">      reserve_data on</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">  <span class="attr">parser-nginx-log.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    [FILTER]</span></span><br><span class="line"><span class="string">      name      parser</span></span><br><span class="line"><span class="string">      match     nginx.*</span></span><br><span class="line"><span class="string">      key_name  log</span></span><br><span class="line"><span class="string">      parser    json</span></span><br><span class="line"><span class="string">      reserve_data on</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">  <span class="attr">es-output.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    [OUTPUT]</span></span><br><span class="line"><span class="string">      name              es</span></span><br><span class="line"><span class="string">      match             flink.jobmanager.*</span></span><br><span class="line"><span class="string">      host              【ES HOST】</span></span><br><span class="line"><span class="string">      port              9200</span></span><br><span class="line"><span class="string">      index             flink-jobmanager</span></span><br><span class="line"><span class="string">      replace_dots      on</span></span><br><span class="line"><span class="string">      retry_limit       2</span></span><br><span class="line"><span class="string">      buffer_size       10mb</span></span><br><span class="line"><span class="string">      tls               on</span></span><br><span class="line"><span class="string">      tls.verify        off</span></span><br><span class="line"><span class="string">      http_user         elastic</span></span><br><span class="line"><span class="string">      http_passwd       【密码】</span></span><br><span class="line"><span class="string">      suppress_type_name on</span></span><br><span class="line"><span class="string">      trace_error       on</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">  <span class="attr">log-alert.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    [OUTPUT]</span></span><br><span class="line"><span class="string">      name      http</span></span><br><span class="line"><span class="string">      match     java.*</span></span><br><span class="line"><span class="string">      host      log-alert.logging.svc.cluster.local</span></span><br><span class="line"><span class="string">      port      7000</span></span><br><span class="line"><span class="string">      uri       /api/v1/receiver</span></span><br><span class="line"><span class="string">      format    json</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">  <span class="attr">parsers.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    [MULTILINE_PARSER]</span></span><br><span class="line"><span class="string">      name          multiline_docker</span></span><br><span class="line"><span class="string">      parser        docker</span></span><br><span class="line"><span class="string">      key_content   log</span></span><br><span class="line"><span class="string">      type          regex</span></span><br><span class="line"><span class="string">      flush_timeout 2000</span></span><br><span class="line"><span class="string">      rule          &quot;start_state&quot;  &quot;/^\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125; \d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;(\.|\,)\d&#123;3&#125;(\s*)\w+/&quot;  &quot;cont_state&quot;</span></span><br><span class="line"><span class="string">      rule          &quot;cont_state&quot;  &quot;/^(?!\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125; \d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;(\.|\,)\d&#123;3&#125;\s+\w+).*/&quot;  &quot;cont_state&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    [<span class="string">PARSER</span>]</span><br><span class="line">      <span class="string">Name</span>        <span class="string">json</span></span><br><span class="line">      <span class="string">Format</span>      <span class="string">json</span></span><br><span class="line">      <span class="string">Time_Key</span>    <span class="string">time</span></span><br><span class="line">      <span class="string">Time_Format</span> <span class="string">%Y-%m-%dT%H:%M:%S.%LZ</span></span><br><span class="line"></span><br><span class="line">    [<span class="string">PARSER</span>]</span><br><span class="line">      <span class="string">name</span>        <span class="string">docker</span></span><br><span class="line">      <span class="string">format</span>      <span class="string">json</span></span><br><span class="line">      <span class="string">decode_field_as</span>  <span class="string">escaped_utf8</span>  <span class="string">log</span>  <span class="string">do_next</span></span><br><span class="line"></span><br><span class="line">    [<span class="string">PARSER</span>]</span><br><span class="line">      <span class="string">name</span>              <span class="string">java_log</span></span><br><span class="line">      <span class="string">format</span>            <span class="string">regex</span></span><br><span class="line">      <span class="string">regex</span>             <span class="string">/^(?&lt;time&gt;\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;</span> <span class="string">\d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;.\d&#123;3&#125;)(\s*)(?&lt;loglevel&gt;\w*)(\s*)\[(?&lt;trace_id&gt;\S*)\]\[[\w\-]*;(?&lt;thread&gt;[^\[\]\;]*);(?&lt;span_id&gt;\S*)\](\s*)(?&lt;caller&gt;\S*)(?&lt;message&gt;[\S\s]*)/</span></span><br><span class="line">      <span class="string">time_key</span>          <span class="string">time</span></span><br><span class="line">      <span class="string">time_format</span>       <span class="string">%Y-%m-%d</span> <span class="string">%H:%M:%S.%L</span></span><br><span class="line">      <span class="string">time_keep</span>         <span class="string">On</span></span><br><span class="line">      <span class="string">time_offset</span>       <span class="string">+0800</span></span><br><span class="line"></span><br><span class="line">    [<span class="string">PARSER</span>]</span><br><span class="line">      <span class="string">name</span>              <span class="string">flink</span></span><br><span class="line">      <span class="string">format</span>            <span class="string">regex</span></span><br><span class="line">      <span class="string">regex</span>             <span class="string">/^(?&lt;time&gt;\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;</span> <span class="string">\d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;,\d&#123;3&#125;)(\s+)(?&lt;loglevel&gt;\w+)(\s+)(?&lt;classname&gt;[\w\.]+)(?&lt;message&gt;[\S\s]*)/</span></span><br><span class="line">      <span class="string">time_key</span>          <span class="string">time</span></span><br><span class="line">      <span class="string">time_format</span>       <span class="string">%Y-%m-%d</span> <span class="string">%H:%M:%S,%L</span></span><br><span class="line">      <span class="string">time_keep</span>         <span class="string">On</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">scripts.lua:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    function label_filter(tag, timestamp, record)</span></span><br><span class="line"><span class="string">        if record[&quot;kubernetes&quot;] == nil then</span></span><br><span class="line"><span class="string">            return 0, timestamp, record</span></span><br><span class="line"><span class="string">        end</span></span><br><span class="line"><span class="string"></span>    </span><br><span class="line">        <span class="string">local</span> <span class="string">namespace</span> <span class="string">=</span> <span class="string">record[&quot;kubernetes&quot;][&quot;namespace_name&quot;]</span></span><br><span class="line">        <span class="string">local</span> <span class="string">labels</span> <span class="string">=</span> <span class="string">record[&quot;kubernetes&quot;][&quot;labels&quot;]</span></span><br><span class="line">        <span class="string">local</span> <span class="string">app</span> <span class="string">=</span> <span class="string">record[&quot;kubernetes&quot;][&quot;labels&quot;][&quot;app&quot;]</span></span><br><span class="line">        <span class="string">local</span> <span class="string">log_tag</span> <span class="string">=</span> <span class="string">nil</span></span><br><span class="line">    </span><br><span class="line">        <span class="string">if</span> <span class="string">labels</span> <span class="string">~=</span> <span class="string">nil</span> <span class="string">then</span></span><br><span class="line">            <span class="string">if</span> <span class="string">labels[&quot;logging&quot;]</span> <span class="string">==</span> <span class="string">&quot;java&quot;</span> <span class="string">then</span></span><br><span class="line">                <span class="string">log_tag</span> <span class="string">=</span> <span class="string">string.format(&quot;java.%s.%s&quot;,</span> <span class="string">namespace,</span> <span class="string">app)</span></span><br><span class="line">            <span class="string">elseif</span> <span class="string">labels[&quot;component&quot;]</span> <span class="string">==</span> <span class="string">&quot;jobmanager&quot;</span> <span class="string">then</span></span><br><span class="line">                <span class="string">log_tag</span> <span class="string">=</span> <span class="string">string.format(&quot;flink.jobmanager.%s.%s&quot;,</span> <span class="string">namespace,</span> <span class="string">app)</span></span><br><span class="line">            <span class="string">elseif</span> <span class="string">labels[&quot;component&quot;]</span> <span class="string">==</span> <span class="string">&quot;taskmanager&quot;</span> <span class="string">then</span></span><br><span class="line">                <span class="string">log_tag</span> <span class="string">=</span> <span class="string">string.format(&quot;flink.taskmanager.%s.%s&quot;,</span> <span class="string">namespace,</span> <span class="string">app)</span></span><br><span class="line">            <span class="string">elseif</span> <span class="string">labels[&quot;logging&quot;]</span> <span class="string">==</span> <span class="string">&quot;nginx&quot;</span> <span class="string">then</span></span><br><span class="line">                <span class="string">log_tag</span> <span class="string">=</span> <span class="string">string.format(&quot;nginx.%s&quot;,</span> <span class="string">namespace)</span></span><br><span class="line">            <span class="string">end</span></span><br><span class="line">        <span class="string">end</span></span><br><span class="line">    </span><br><span class="line">        <span class="string">if</span> <span class="string">log_tag</span> <span class="string">then</span></span><br><span class="line">            <span class="string">record[&quot;log_tag&quot;]</span> <span class="string">=</span> <span class="string">log_tag</span></span><br><span class="line">            <span class="string">return</span> <span class="number">2</span><span class="string">,</span> <span class="string">timestamp,</span> <span class="string">record</span></span><br><span class="line">        <span class="string">else</span></span><br><span class="line">            <span class="string">return</span> <span class="number">0</span><span class="string">,</span> <span class="string">timestamp,</span> <span class="string">record</span></span><br><span class="line">        <span class="string">end</span></span><br><span class="line">    <span class="string">end</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">function</span> <span class="string">get_pod_ip(tag,</span> <span class="string">timestamp,</span> <span class="string">record)</span></span><br><span class="line">        <span class="string">if</span> <span class="string">record[&quot;kubernetes&quot;][&quot;annotations&quot;]</span> <span class="string">and</span> <span class="string">record[&quot;kubernetes&quot;][&quot;annotations&quot;][&quot;cni.projectcalico.org/podIP&quot;]</span> <span class="string">then</span></span><br><span class="line">            <span class="string">record[&quot;podIP&quot;]</span> <span class="string">=</span> <span class="string">record[&quot;kubernetes&quot;][&quot;annotations&quot;][&quot;cni.projectcalico.org/podIP&quot;]</span></span><br><span class="line">            <span class="string">return</span> <span class="number">2</span><span class="string">,</span> <span class="string">timestamp,</span> <span class="string">record</span></span><br><span class="line">        <span class="string">else</span></span><br><span class="line">            <span class="string">return</span> <span class="number">0</span><span class="string">,</span> <span class="string">timestamp,</span> <span class="string">record</span></span><br><span class="line">        <span class="string">end</span></span><br><span class="line">    <span class="string">end</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">function</span> <span class="string">get_app_name(tag,</span> <span class="string">timestamp,</span> <span class="string">record)</span></span><br><span class="line">        <span class="string">if</span> <span class="string">record[&quot;kubernetes&quot;][&quot;labels&quot;]</span> <span class="string">and</span> <span class="string">record[&quot;kubernetes&quot;][&quot;labels&quot;][&quot;app&quot;]</span> <span class="string">then</span></span><br><span class="line">            <span class="string">record[&quot;app&quot;]</span> <span class="string">=</span> <span class="string">record[&quot;kubernetes&quot;][&quot;labels&quot;][&quot;app&quot;]</span></span><br><span class="line">            <span class="string">return</span> <span class="number">2</span><span class="string">,</span> <span class="string">timestamp,</span> <span class="string">record</span></span><br><span class="line">        <span class="string">else</span></span><br><span class="line">            <span class="string">return</span> <span class="number">0</span><span class="string">,</span> <span class="string">timestamp,</span> <span class="string">record</span></span><br><span class="line">        <span class="string">end</span></span><br><span class="line">    <span class="string">end</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">function</span> <span class="string">remove_key_field(tag,</span> <span class="string">timestamp,</span> <span class="string">record)</span></span><br><span class="line">        <span class="string">fields_to_remove</span> <span class="string">=</span> &#123;<span class="string">&quot;stream&quot;</span>, <span class="string">&quot;kubernetes.pod_id&quot;</span>, <span class="string">&quot;kubernetes.docker_id&quot;</span>, <span class="string">&quot;kubernetes.container_hash&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;kubernetes.container_image&quot;</span>, <span class="string">&quot;kubernetes.labels&quot;</span>, <span class="string">&quot;kubernetes.annotations&quot;</span>&#125;</span><br><span class="line">        <span class="string">for</span> <span class="string">_,</span> <span class="string">field</span> <span class="string">in</span> <span class="string">ipairs(fields_to_remove)</span> <span class="string">do</span></span><br><span class="line">            <span class="string">local</span> <span class="string">keys</span> <span class="string">=</span> &#123;&#125;</span><br><span class="line">            <span class="string">for</span> <span class="string">key</span> <span class="string">in</span> <span class="string">string.gmatch(field,</span> <span class="string">&quot;[^.]+&quot;</span><span class="string">)</span> <span class="string">do</span></span><br><span class="line">                <span class="string">table.insert(keys,</span> <span class="string">key)</span></span><br><span class="line">            <span class="string">end</span></span><br><span class="line">            <span class="string">local</span> <span class="string">current</span> <span class="string">=</span> <span class="string">record</span></span><br><span class="line">            <span class="string">for</span> <span class="string">i</span> <span class="string">=</span> <span class="number">1</span><span class="string">,</span> <span class="comment">#keys - 1 do</span></span><br><span class="line">                <span class="string">current</span> <span class="string">=</span> <span class="string">current[keys[i]]</span></span><br><span class="line">                <span class="string">if</span> <span class="string">not</span> <span class="string">current</span> <span class="string">then</span></span><br><span class="line">                    <span class="string">break</span></span><br><span class="line">                <span class="string">end</span></span><br><span class="line">            <span class="string">end</span></span><br><span class="line">            <span class="string">if</span> <span class="string">current</span> <span class="string">then</span></span><br><span class="line">                <span class="string">current[keys[#keys]]</span> <span class="string">=</span> <span class="string">nil</span></span><br><span class="line">            <span class="string">end</span></span><br><span class="line">        <span class="string">end</span></span><br><span class="line">        <span class="string">return</span> <span class="number">1</span><span class="string">,</span> <span class="string">timestamp,</span> <span class="string">record</span></span><br><span class="line">    <span class="string">end</span></span><br></pre></td></tr></table></figure>

<h2 id="ServiceAccount"><a href="#ServiceAccount" class="headerlink" title="ServiceAccount"></a>ServiceAccount</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">fluent-bit</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">logging</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">fluent-bit-cluster-role</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">  <span class="attr">resources:</span> [<span class="string">&quot;pods&quot;</span>, <span class="string">&quot;namespaces&quot;</span>]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">fluent-bit-cluster-role-binding</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">fluent-bit</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">logging</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">fluent-bit-cluster-role</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CloudNative</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>Logging</tag>
      </tags>
  </entry>
  <entry>
    <title>Some Ways to Enhance Your WSL Experience</title>
    <url>/en-us/some-ways-enhance-wsl-experience/</url>
    <content><![CDATA[<div class="note blue flat"><p>当前文档有中文版本：<a href="/some-ways-enhance-wsl-experience/">点击这里切换到中文</a></p>
</div>

<p>This article provides tips to help frequent WSL users improve their experience and efficiency. This article will not cover the installation of WSL, you can refer to the official documentation if you need it.<br>BTW I prefer to use the <a href="https://learn.microsoft.com/en-us/windows/wsl/">WSL2</a> + <a href="https://github.com/yuk7/ArchWSL">ArchWSL</a></p>
<h1 id="Open-wsl-folders-with-Windows-Explorer"><a href="#Open-wsl-folders-with-Windows-Explorer" class="headerlink" title="Open wsl folders with Windows Explorer"></a>Open wsl folders with Windows Explorer</h1><p>Sometimes, we need to open files in WSL using Windows File Explorer. Normally, we can manually access Windows File Explorer and type <code>\\wsl$</code> in the address bar to navigate to WSL. However, if we want to quickly open a WSL directory from the command line (similar to how we use code + directory with VS Code’s WSL Remote), we can achieve this by writing an executable script.<br>In Windows, we can use the explorer.exe command to open File Explorer, leveraging it to quickly open the desired WSL directory.<br>Scripts：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># wslpath -w &quot;$1&quot; Used to convert a user-entered directory into a shared address for WSL on the host machine</span></span><br><span class="line">explorer.exe <span class="string">&quot;<span class="subst">$(wslpath -w <span class="string">&quot;<span class="variable">$1</span>&quot;</span>)</span>&quot;</span> || <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>Add it as a script and put it under &#x2F;usr&#x2F;local&#x2F;bin, e.g. &#x2F;usr&#x2F;local&#x2F;bin&#x2F;open, and give it execute permission to use it quickly.<br>This allows you to quickly open a folder with a command line</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">open /data</span><br></pre></td></tr></table></figure>

<h1 id="Network-Proxy"><a href="#Network-Proxy" class="headerlink" title="Network Proxy"></a>Network Proxy</h1><p>There are two ways to set up a network proxy in WSL</p>
<h2 id="Type-1-Configuration-using-proxy-ENV-http-proxy-https-proxy-all-proxy"><a href="#Type-1-Configuration-using-proxy-ENV-http-proxy-https-proxy-all-proxy" class="headerlink" title="Type 1 Configuration using proxy ENV (http_proxy&#x2F;https_proxy&#x2F;all_proxy)"></a>Type 1 Configuration using proxy ENV (http_proxy&#x2F;https_proxy&#x2F;all_proxy)</h2><p>First, enable the “Allow LAN connections” option in your proxy software.<br>The IP address of the Windows WSL network interface can be obtained by running the command <code>grep &quot;nameserver&quot; /etc/resolv.conf | head -n 1 | cut -f 2 -d &quot; &quot;</code>, and it can be used as the LAN connection address for WSL.<br>You can configure the environment variables using a script like the following <code>proxy.sh on|off</code> .</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">WIN_IP=$(grep <span class="string">&quot;nameserver&quot;</span> /etc/resolv.conf | <span class="built_in">head</span> -n 1 | <span class="built_in">cut</span> -f 2 -d <span class="string">&quot; &quot;</span>)</span><br><span class="line">PROXY_PORT=7890</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> == <span class="string">&quot;on&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">export</span> https_proxy=<span class="string">&quot;http://<span class="variable">$WIN_IP</span>:<span class="variable">$PROXY_PORT</span>&quot;</span></span><br><span class="line">    <span class="built_in">export</span> http_proxy=<span class="string">&quot;http://<span class="variable">$WIN_IP</span>:<span class="variable">$PROXY_PORT</span>&quot;</span></span><br><span class="line">    <span class="built_in">export</span> all_proxy=<span class="string">&quot;socks5://<span class="variable">$WIN_IP</span>:<span class="variable">$PROXY_PORT</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Proxy is set to http://<span class="variable">$WIN_IP</span>:<span class="variable">$PROXY_PORT</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> == <span class="string">&quot;off&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">unset</span> https_proxy http_proxy all_proxy</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Proxy is unset&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Usage: <span class="variable">$0</span> &#123;on|off&#125;&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>Alternatively, you can use the alias command to configure this in your bashrc or zshrc file.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WIN_IP=$(grep <span class="string">&quot;nameserver&quot;</span> /etc/resolv.conf | <span class="built_in">head</span> -n 1 | <span class="built_in">cut</span> -f 2 -d <span class="string">&quot; &quot;</span>)</span><br><span class="line">PROXY_PORT=7890</span><br><span class="line"><span class="built_in">alias</span> proxyon=<span class="string">&quot;export https_proxy=http://<span class="variable">$WIN_IP</span>:<span class="variable">$PROXY_PORT</span> http_proxy=http://<span class="variable">$WIN_IP</span>:<span class="variable">$PROXY_PORT</span> all_proxy=socks5://<span class="variable">$WIN_IP</span>:<span class="variable">$PROXY_PORT</span>&quot;</span></span><br><span class="line"><span class="built_in">alias</span> proxyoff=<span class="string">&quot;unset https_proxy http_proxy all_proxy&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="Type-2-Using-the-Tun-Mode-of-the-Proxy-Software"><a href="#Type-2-Using-the-Tun-Mode-of-the-Proxy-Software" class="headerlink" title="Type 2 Using the Tun Mode of the Proxy Software"></a>Type 2 Using the Tun Mode of the Proxy Software</h2><p>If your proxy software supports Tun mode, we can enable it directly.<br>This ensures that all traffic from WSL is routed through the proxy software’s virtual network adapter.</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Shell</tag>
        <tag>WSL</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes 日志收集（五）- 使用 Kafka 做中间层</title>
    <url>/en-us/kubernetes-logging-collection-5/</url>
    <content><![CDATA[<div class="note blue flat"><p>当前文档有中文版本：<a href="/kubernetes-logging-collection-5/">点击这里切换到中文</a></p>
</div>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前<a href="/kubernetes-logging-collection-4/">基于 Fluent-bit Daemonset 的日志收集</a>中，是由 fluent-bit 直接采集到 elasticsearch 中，当我们的日志量非常大的情况下，这样会造成 elasticsearch 压力过大，甚至会因此丢失日志，所以我们最好在采集器到保存的中间加上一个中间层，我们选择使用 kafka 作为中间层</p>
<h1 id="配置-Output"><a href="#配置-Output" class="headerlink" title="配置 Output"></a>配置 Output</h1><p>fluent-bit 其余配置保持不变，需要替换 Output 的相关配置</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[OUTPUT]</span></span><br><span class="line">  name      kafka</span><br><span class="line">  match     kube.*</span><br><span class="line">  brokers   &lt;your brokers addresses&gt;</span><br><span class="line">  topics    &lt;your topic name&gt;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># sasl auth</span></span><br><span class="line">  rdkafka.security.protocol   SASL_PLAINTEXT</span><br><span class="line">  rdkafka.sasl.mechanisms     SCRAM-SHA-256</span><br><span class="line">  rdkafka.sasl.username       &lt;user&gt;</span><br><span class="line">  rdkafka.sasl.password       &lt;password&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>name: 指定使用 kafka 输出插件</li>
<li>match: 匹配的日志记录源 tag</li>
<li>brokers: kafka 的 brokers 列表</li>
<li>topics: 指定 Kafka 中的 topic 名称，可以配置多个</li>
<li>sasl: sasl 的相关配置如果 kafka 没有使用可以删除<ul>
<li>rdkafka.security.protocol: 指定 Kafka 的安全协议</li>
<li>rdkafka.sasl.mechanisms: 指定 SASL 认证机制</li>
<li>rdkafka.sasl.username: 指定 SASL 认证的用户名</li>
<li>rdkafka.sasl.password: 指定 SASL 认证的密码</li>
</ul>
</li>
</ul>
<h2 id="动态的-Topic-配置"><a href="#动态的-Topic-配置" class="headerlink" title="动态的 Topic 配置"></a>动态的 Topic 配置</h2><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[OUTPUT]</span></span><br><span class="line">  name      kafka</span><br><span class="line">  match     kube.*</span><br><span class="line">  brokers   &lt;your brokers addresses&gt;</span><br><span class="line">  topics    &lt;your topic name&gt;</span><br><span class="line">  topic_key &lt;your topic name in record&gt;</span><br><span class="line"></span><br><span class="line">  dynamic_topic on</span><br><span class="line"></span><br><span class="line">  <span class="comment"># sasl auth</span></span><br><span class="line">  rdkafka.security.protocol   SASL_PLAINTEXT</span><br><span class="line">  rdkafka.sasl.mechanisms     SCRAM-SHA-256</span><br><span class="line">  rdkafka.sasl.username       &lt;user&gt;</span><br><span class="line">  rdkafka.sasl.password       &lt;password&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>topic_key: 获取日志记录（record）中 topic_key 的值作为当前日志的 topic name，此时 topics 表示如果没有发现 record 中存在对应的 topic_key，将会使用的默认 topic 名称</li>
<li>dynamic_topic: 启用动态 topic 的功能，当设置为 on 时，Kafka 插件会根据记录中的 topic_key 字段的值，动态决定将数据发送到哪个 topic；如果设置为 off，表示只有当 record 中 topic_key 的值配置在 topics 中有配置的情况下，才会发送到对应名字的 topic</li>
</ul>
<p>更多配置参考: <a href="https://docs.fluentbit.io/manual/pipeline/outputs/kafka">https://docs.fluentbit.io/manual/pipeline/outputs/kafka</a></p>
<p>这样配置完毕后，重启 fluent-bit 就会将日志传输到 kafka 中</p>
<p>我们将日志从 kafka 同步到 elasticsearch 可以有多种方式，如使用 fluent-bit&#x2F;fluentd&#x2F;logstash 等使用 kafka 作为数据源，elasticsearch 作为目标进行同步，或者使用 flink&#x2F;编写自定义消费者 进行同步，或者使用 Kafka Connect 同步，这部分放到后面再说</p>
]]></content>
      <categories>
        <category>CloudNative</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>Logging</tag>
      </tags>
  </entry>
  <entry>
    <title>Ceoh 集群 OSD Down 问题解决</title>
    <url>/en-us/ceph-osd-down/</url>
    <content><![CDATA[<div class="note red flat"><p>Sorry, the current document does not have an English version. Click to switch to <a href="/ceph-osd-down/">Chinese</a>.</p>
</div>

<h1 id="查看问题"><a href="#查看问题" class="headerlink" title="查看问题"></a>查看问题</h1><p>记录一次 Ceph OSD down 的问题，将故障 OSD 对应磁盘还原成裸盘重新接入集群</p>
<h2 id="查看-OSD-状态"><a href="#查看-OSD-状态" class="headerlink" title="查看 OSD 状态"></a>查看 OSD 状态</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ceph osd status</span><br><span class="line">ceph osd tree</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看osd对应的硬盘</span></span><br><span class="line">ceph device ls-by-daemon osd.0</span><br></pre></td></tr></table></figure>

<h2 id="重启有问题的-OSD"><a href="#重启有问题的-OSD" class="headerlink" title="重启有问题的 OSD"></a>重启有问题的 OSD</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status ceph-6b6d577c-b035-11ee-8b7f-e51965640d97@osd.0.service</span><br><span class="line">systemctl restart ceph-6b6d577c-b035-11ee-8b7f-e51965640d97@osd.0.service</span><br></pre></td></tr></table></figure>

<h2 id="查看启动日志"><a href="#查看启动日志" class="headerlink" title="查看启动日志"></a>查看启动日志</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-03-13T01:57:33.588+0000 7f510481f640 0 osd.0:4.OSDShard using op scheduler mClockScheduler</span><br><span class="line">2024-03-13T01:57:33.756+0000 7f510481f640 1 bdev(0x5573cf796000 /var/lib/ceph/osd/ceph-0/block) open path /var/lib/ceph/osd/ceph-0/block</span><br><span class="line">2024-03-13T01:57:33.760+0000 7f510481f640 1 bdev(0x5573cf796000 /var/lib/ceph/osd/ceph-0/block) open size 107369988096 (0x18ffc00000, 100 GiB) block_size 4096 (4 KiB) rotational device, discard supported</span><br><span class="line">2024-03-13T01:57:33.896+0000 7f510481f640 1 bluestore(/var/lib/ceph/osd/ceph-0) _set_cache_sizes cache_size 1073741824 meta 0.45 kv 0.45 data 0.06</span><br><span class="line">2024-03-13T01:57:33.896+0000 7f510481f640 1 bdev(0x5573cf796380 /var/lib/ceph/osd/ceph-0/block) open path /var/lib/ceph/osd/ceph-0/block</span><br><span class="line">2024-03-13T01:57:33.896+0000 7f510481f640 1 bdev(0x5573cf796380 /var/lib/ceph/osd/ceph-0/block) open size 107369988096 (0x18ffc00000, 100 GiB) block_size 4096 (4 KiB) rotational device, discard supported</span><br><span class="line">2024-03-13T01:57:33.896+0000 7f510481f640 1 bluefs add_block_device bdev 1 path /var/lib/ceph/osd/ceph-0/block size 100 GiB</span><br><span class="line">2024-03-13T01:57:33.896+0000 7f510481f640 1 bluefs mount</span><br><span class="line">2024-03-13T01:57:34.020+0000 7f510481f640 1 bluefs _init_alloc shared, id 1, capacity 0x18ffc00000, block size 0x10000</span><br><span class="line">2024-03-13T01:57:34.432+0000 7f510481f640 1 bluefs mount shared_bdev_used = 0</span><br><span class="line">2024-03-13T01:57:34.436+0000 7f510481f640 1 bluestore(/var/lib/ceph/osd/ceph-0) _prepare_db_environment set db_paths to db,102001488691 db.slow,102001488691</span><br><span class="line">2024-03-13T01:57:34.756+0000 7f510481f640 -1 bluestore(/var/lib/ceph/osd/ceph-0) _open_db erroring opening db:</span><br><span class="line">2024-03-13T01:57:34.756+0000 7f510481f640 1 bluefs umount</span><br><span class="line">2024-03-13T01:57:34.756+0000 7f510481f640 1 bdev(0x5573cf796380 /var/lib/ceph/osd/ceph-0/block) close</span><br><span class="line">2024-03-13T01:57:34.936+0000 7f510481f640 1 bdev(0x5573cf796000 /var/lib/ceph/osd/ceph-0/block) close</span><br><span class="line">2024-03-13T01:57:35.052+0000 7f510481f640 -1 osd.0 0 OSD:init: unable to mount object store</span><br><span class="line">2024-03-13T01:57:35.052+0000 7f510481f640 -1 ** ERROR: osd init failed: (5) Input/output error</span><br></pre></td></tr></table></figure>

<p>可以看到这里日志报警 Bluestore 无法打开数据库，报告了“Input&#x2F;output error” (I&#x2F;O 错误)<br>可能的原因:</p>
<ul>
<li>磁盘&#x2F;分区故障： osd.0 运行所在的磁盘或分区可能出现物理故障，导致读写操作失败</li>
<li>文件系统损坏： osd.0 使用的文件系统可能因各种原因出现损坏</li>
<li>配置错误： Ceph 的配置可能存在问题，导致 OSD 无法找到或正确使用存储设备</li>
<li>权限问题： Ceph 进程可能缺少对 &#x2F;var&#x2F;lib&#x2F;ceph&#x2F;osd&#x2F;ceph-0 目录及其中文件的必要权限</li>
</ul>
<h1 id="排错过程"><a href="#排错过程" class="headerlink" title="排错过程"></a>排错过程</h1><p>配置是没有更改的，应该不是配置的问题</p>
<h2 id="检查磁盘状态"><a href="#检查磁盘状态" class="headerlink" title="检查磁盘状态"></a>检查磁盘状态</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smartctl -a /dev/nvme1n1</span><br></pre></td></tr></table></figure>

<p>使用 SMART 进行磁盘检测，发现磁盘本身无问题</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">smartctl 7.0 2018-12-30 r4883 [x86_64-linux-5.19.7-1.el7.elrepo.x86_64] (local build)</span><br><span class="line">Copyright (C) 2002-18, Bruce Allen, Christian Franke, www.smartmontools.org</span><br><span class="line"></span><br><span class="line">=== START OF INFORMATION SECTION ===</span><br><span class="line">Model Number:                       Amazon Elastic Block Store</span><br><span class="line">Serial Number:                      vol0d9d42104245d5125</span><br><span class="line">Firmware Version:                   2.0</span><br><span class="line">PCI Vendor/Subsystem ID:            0x1d0f</span><br><span class="line">IEEE OUI Identifier:                0xa002dc</span><br><span class="line">Controller ID:                      0</span><br><span class="line">Number of Namespaces:               1</span><br><span class="line">Namespace 1 Size/Capacity:          214,748,364,800 [214 GB]</span><br><span class="line">Namespace 1 Formatted LBA Size:     512</span><br><span class="line">Local Time is:                      Wed Mar 13 04:21:53 2024 UTC</span><br><span class="line">Firmware Updates (0x03):            1 Slot, Slot 1 R/O</span><br><span class="line">Maximum Data Transfer Size:         64 Pages</span><br><span class="line">Warning  Comp. Temp. Threshold:     70 Celsius</span><br><span class="line">Namespace 1 Features (0x12):        NA_Fields *Other*</span><br><span class="line"></span><br><span class="line">Supported Power States</span><br><span class="line">St Op     Max   Active     Idle   RL RT WL WT  Ent_Lat  Ex_Lat</span><br><span class="line"> 0 +     0.01W       -        -    0  0  0  0  1000000 1000000</span><br><span class="line"></span><br><span class="line">Supported LBA Sizes (NSID 0x1)</span><br><span class="line">Id Fmt  Data  Metadt  Rel_Perf</span><br><span class="line"> 0 +     512       0         0</span><br><span class="line"></span><br><span class="line">=== START OF SMART DATA SECTION ===</span><br><span class="line">SMART overall-health self-assessment test result: PASSED</span><br><span class="line"></span><br><span class="line">SMART/Health Information (NVMe Log 0x02)</span><br><span class="line">Critical Warning:                   0x00</span><br><span class="line">Temperature:                        -</span><br><span class="line">Available Spare:                    0%</span><br><span class="line">Available Spare Threshold:          0%</span><br><span class="line">Percentage Used:                    0%</span><br><span class="line">Data Units Read:                    0</span><br><span class="line">Data Units Written:                 0</span><br><span class="line">Host Read Commands:                 0</span><br><span class="line">Host Write Commands:                0</span><br><span class="line">Controller Busy Time:               0</span><br><span class="line">Power Cycles:                       0</span><br><span class="line">Power On Hours:                     0</span><br><span class="line">Unsafe Shutdowns:                   0</span><br><span class="line">Media and Data Integrity Errors:    0</span><br><span class="line">Error Information Log Entries:      0</span><br><span class="line">Warning  Comp. Temperature Time:    0</span><br><span class="line"></span><br><span class="line">Error Information (NVMe Log 0x01, max 64 entries)</span><br><span class="line">No Errors Logged</span><br></pre></td></tr></table></figure>

<h2 id="权限检查"><a href="#权限检查" class="headerlink" title="权限检查"></a>权限检查</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ll /var/lib/ceph/6b6d577c-b035-11ee-8b7f-e51965640d97/osd.0</span><br></pre></td></tr></table></figure>

<p>查看 ceph osd 0 所在文件夹权限发现无问题</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lrwxrwxrwx 1 167 167  111 Mar 13 04:16 block -&gt; /dev/mapper/ceph--2ee73f01--0a14--4ea0--a33d--59977dd4e642-osd--block--8e734088--2ddc--4a50--8e04--9d4570e7ae88</span><br><span class="line">-rw------- 1 167 167   37 Mar 13 04:16 ceph_fsid</span><br><span class="line">-rw------- 1 167 167  259 Mar 13 04:16 config</span><br><span class="line">-rw------- 1 167 167   37 Mar 13 04:16 fsid</span><br><span class="line">-rw------- 1 167 167   55 Mar 13 04:16 keyring</span><br><span class="line">-rw------- 1 167 167    6 Mar 13 04:16 ready</span><br><span class="line">-rw------- 1 167 167    3 Mar 13 04:16 require_osd_release</span><br><span class="line">-rw------- 1 167 167   10 Mar 13 04:16 type</span><br><span class="line">-rw------- 1 167 167   38 Mar 13 04:16 unit.configured</span><br><span class="line">-rw------- 1 167 167   48 Mar 13 04:16 unit.created</span><br><span class="line">-rw------- 1 167 167   90 Mar 13 04:16 unit.image</span><br><span class="line">-rw------- 1 167 167  361 Mar 13 04:16 unit.meta</span><br><span class="line">-rw------- 1 167 167 1.7K Mar 13 04:16 unit.poststop</span><br><span class="line">-rw------- 1 167 167 2.8K Mar 13 04:16 unit.run</span><br><span class="line">-rw------- 1 167 167  330 Mar 13 04:16 unit.stop</span><br><span class="line">-rw------- 1 167 167    2 Mar 13 04:16 whoami</span><br></pre></td></tr></table></figure>

<p>判断问题应该出在 Ceph 的文件系统损坏了，需要重建文件系统</p>
<h1 id="恢复过程"><a href="#恢复过程" class="headerlink" title="恢复过程"></a>恢复过程</h1><h2 id="卸载-osd"><a href="#卸载-osd" class="headerlink" title="卸载 osd"></a>卸载 osd</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ceph osd out osd.0</span><br><span class="line">ceph osd purge 0 --yes-i-really-mean-it</span><br><span class="line">ceph osd crush remove osd.0</span><br><span class="line">ceph auth <span class="built_in">rm</span> osd。0</span><br><span class="line">ceph osd <span class="built_in">rm</span> osd.0</span><br></pre></td></tr></table></figure>

<h2 id="清理磁盘"><a href="#清理磁盘" class="headerlink" title="清理磁盘"></a>清理磁盘</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sgdisk --zap-all /dev/nvme1n1</span><br><span class="line">wipefs -a -f /dev/nvme1n1</span><br><span class="line">blkdiscard /dev/nvme1n1</span><br><span class="line">partprobe /dev/nvme1n1</span><br></pre></td></tr></table></figure>

<p>找到对应磁盘的卷组删除</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> /dev/mapper/ceph-*</span><br><span class="line"><span class="built_in">rm</span> -rf /dev/mapper/ceph--52ae98df--3053--40af--86c4--def1ed9b9e68-osd--block--f09b0512--e73a--473b--8316--ccfe092c142d</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ceph-volume lvm zap /dev/nvme1n1 --destroy</span><br></pre></td></tr></table></figure>

<p>报错，表明当前磁盘正在被占用，需要解除占用后，再格式化</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--&gt; Zapping: /dev/nvme1n1</span><br><span class="line"> stderr: wipefs: error: /dev/nvme1n1: probing initialization failed: Device or resource busy</span><br><span class="line">--&gt; failed to wipefs device, will try again to workaround probable race condition</span><br><span class="line"> stderr: wipefs: error: /dev/nvme1n1: probing initialization failed: Device or resource busy</span><br><span class="line">--&gt; failed to wipefs device, will try again to workaround probable race condition</span><br><span class="line"> stderr: wipefs: error: /dev/nvme1n1: probing initialization failed: Device or resource busy</span><br><span class="line">--&gt; failed to wipefs device, will try again to workaround probable race condition</span><br><span class="line"> stderr: wipefs: error: /dev/nvme1n1: probing initialization failed: Device or resource busy</span><br><span class="line">--&gt; failed to wipefs device, will try again to workaround probable race condition</span><br><span class="line"> stderr: wipefs: error: /dev/nvme1n1: probing initialization failed: Device or resource busy</span><br><span class="line">--&gt; failed to wipefs device, will try again to workaround probable race condition</span><br></pre></td></tr></table></figure>

<p>查看是否有进程占用，如有则需要清理进程</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof /dev/nvme1n1</span><br><span class="line">fuser /dev/nvme1n1</span><br></pre></td></tr></table></figure>

<p>查看是否有设备映射，需要删除设备映射</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dmsetup <span class="built_in">ls</span></span><br><span class="line">dmsetup remove ceph--52ae98df--3053--40af--86c4--def1ed9b9e68-osd--block--f09b0512--e73a--473b--8316--ccfe092c142d</span><br></pre></td></tr></table></figure>

<h2 id="重新添加osd"><a href="#重新添加osd" class="headerlink" title="重新添加osd"></a>重新添加osd</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ceph orch daemon add osd ceph1:/dev/nvme1n1</span><br></pre></td></tr></table></figure>

<h1 id="检查健康情况"><a href="#检查健康情况" class="headerlink" title="检查健康情况"></a>检查健康情况</h1><p>重新检查 ceph 集群状态，发现已经 osd 已经正常，需要等待 pg 恢复</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ceph -s</span><br><span class="line">ceph osd tree</span><br><span class="line">ceph osd status</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CloudNative</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>Storage</tag>
        <tag>Ceph</tag>
      </tags>
  </entry>
</search>
